{
    "info": {
        "category": "file", 
        "package": "", 
        "started": "2014-08-03 13:18:59", 
        "custom": "", 
        "machine": {
            "shutdown_on": "2014-08-03 13:19:29", 
            "label": "win7_2", 
            "manager": "VirtualBox", 
            "started_on": "2014-08-03 13:18:59", 
            "id": 429, 
            "name": "win7_2"
        }, 
        "ended": "2014-08-03 13:19:30", 
        "version": "1.2-dev", 
        "duration": 31, 
        "id": 429
    }, 
    "signatures": [], 
    "static": {
        "pe_imports": [
            {
                "imports": [
                    {
                        "name": "InterlockedDecrement", 
                        "address": "0x817805c"
                    }, 
                    {
                        "name": "InterlockedIncrement", 
                        "address": "0x8178060"
                    }, 
                    {
                        "name": "FileTimeToSystemTime", 
                        "address": "0x8178064"
                    }, 
                    {
                        "name": "FileTimeToLocalFileTime", 
                        "address": "0x8178068"
                    }, 
                    {
                        "name": "MapViewOfFile", 
                        "address": "0x817806c"
                    }, 
                    {
                        "name": "CreateFileMappingA", 
                        "address": "0x8178070"
                    }, 
                    {
                        "name": "UnmapViewOfFile", 
                        "address": "0x8178074"
                    }, 
                    {
                        "name": "WriteFile", 
                        "address": "0x8178078"
                    }, 
                    {
                        "name": "FlushFileBuffers", 
                        "address": "0x817807c"
                    }, 
                    {
                        "name": "IsProcessorFeaturePresent", 
                        "address": "0x8178080"
                    }, 
                    {
                        "name": "GetSystemInfo", 
                        "address": "0x8178084"
                    }, 
                    {
                        "name": "GetTimeZoneInformation", 
                        "address": "0x8178088"
                    }, 
                    {
                        "name": "CompareStringA", 
                        "address": "0x817808c"
                    }, 
                    {
                        "name": "GetACP", 
                        "address": "0x8178090"
                    }, 
                    {
                        "name": "GetWindowsDirectoryA", 
                        "address": "0x8178094"
                    }, 
                    {
                        "name": "GetSystemDirectoryA", 
                        "address": "0x8178098"
                    }, 
                    {
                        "name": "InterlockedExchange", 
                        "address": "0x817809c"
                    }, 
                    {
                        "name": "GetCurrentProcess", 
                        "address": "0x81780a0"
                    }, 
                    {
                        "name": "ReadProcessMemory", 
                        "address": "0x81780a4"
                    }, 
                    {
                        "name": "GetSystemTimeAsFileTime", 
                        "address": "0x81780a8"
                    }, 
                    {
                        "name": "GetCurrentProcessId", 
                        "address": "0x81780ac"
                    }, 
                    {
                        "name": "GetCurrentThreadId", 
                        "address": "0x81780b0"
                    }, 
                    {
                        "name": "QueryPerformanceCounter", 
                        "address": "0x81780b4"
                    }, 
                    {
                        "name": "IsDebuggerPresent", 
                        "address": "0x81780b8"
                    }, 
                    {
                        "name": "SetUnhandledExceptionFilter", 
                        "address": "0x81780bc"
                    }, 
                    {
                        "name": "UnhandledExceptionFilter", 
                        "address": "0x81780c0"
                    }, 
                    {
                        "name": "TerminateProcess", 
                        "address": "0x81780c4"
                    }, 
                    {
                        "name": "GetLastError", 
                        "address": "0x81780c8"
                    }, 
                    {
                        "name": "GetSystemTime", 
                        "address": "0x81780cc"
                    }, 
                    {
                        "name": "SystemTimeToFileTime", 
                        "address": "0x81780d0"
                    }, 
                    {
                        "name": "GetVersionExA", 
                        "address": "0x81780d4"
                    }, 
                    {
                        "name": "GetSystemDefaultLCID", 
                        "address": "0x81780d8"
                    }, 
                    {
                        "name": "GetModuleHandleA", 
                        "address": "0x81780dc"
                    }, 
                    {
                        "name": "SetLastError", 
                        "address": "0x81780e0"
                    }, 
                    {
                        "name": "FreeLibrary", 
                        "address": "0x81780e4"
                    }, 
                    {
                        "name": "LoadLibraryA", 
                        "address": "0x81780e8"
                    }, 
                    {
                        "name": "WaitForMultipleObjects", 
                        "address": "0x81780ec"
                    }, 
                    {
                        "name": "FindNextChangeNotification", 
                        "address": "0x81780f0"
                    }, 
                    {
                        "name": "FindCloseChangeNotification", 
                        "address": "0x81780f4"
                    }, 
                    {
                        "name": "GetTickCount", 
                        "address": "0x81780f8"
                    }, 
                    {
                        "name": "FindClose", 
                        "address": "0x81780fc"
                    }, 
                    {
                        "name": "lstrlenA", 
                        "address": "0x8178100"
                    }, 
                    {
                        "name": "CreateFileA", 
                        "address": "0x8178104"
                    }, 
                    {
                        "name": "lstrcmpiA", 
                        "address": "0x8178108"
                    }, 
                    {
                        "name": "GetPrivateProfileStringA", 
                        "address": "0x817810c"
                    }, 
                    {
                        "name": "GetFileSize", 
                        "address": "0x8178110"
                    }, 
                    {
                        "name": "SetFilePointer", 
                        "address": "0x8178114"
                    }, 
                    {
                        "name": "ReadFile", 
                        "address": "0x8178118"
                    }, 
                    {
                        "name": "GetModuleFileNameA", 
                        "address": "0x817811c"
                    }, 
                    {
                        "name": "CloseHandle", 
                        "address": "0x8178120"
                    }, 
                    {
                        "name": "InterlockedCompareExchange", 
                        "address": "0x8178124"
                    }, 
                    {
                        "name": "Sleep", 
                        "address": "0x8178128"
                    }, 
                    {
                        "name": "GetCurrentThread", 
                        "address": "0x817812c"
                    }, 
                    {
                        "name": "GetThreadSelectorEntry", 
                        "address": "0x8178130"
                    }
                ], 
                "dll": "KERNEL32.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "DestroyWindow", 
                        "address": "0x8178398"
                    }, 
                    {
                        "name": "GetDesktopWindow", 
                        "address": "0x817839c"
                    }, 
                    {
                        "name": "RegisterClassA", 
                        "address": "0x81783a0"
                    }, 
                    {
                        "name": "DefWindowProcA", 
                        "address": "0x81783a4"
                    }, 
                    {
                        "name": "MessageBoxA", 
                        "address": "0x81783a8"
                    }, 
                    {
                        "name": "wsprintfA", 
                        "address": "0x81783ac"
                    }, 
                    {
                        "name": "ReleaseDC", 
                        "address": "0x81783b0"
                    }, 
                    {
                        "name": "GetDC", 
                        "address": "0x81783b4"
                    }, 
                    {
                        "name": "CreateWindowExA", 
                        "address": "0x81783b8"
                    }
                ], 
                "dll": "USER32.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "SetTextAlign", 
                        "address": "0x8178014"
                    }, 
                    {
                        "name": "SetBkMode", 
                        "address": "0x8178018"
                    }, 
                    {
                        "name": "PatBlt", 
                        "address": "0x817801c"
                    }, 
                    {
                        "name": "GetBitmapBits", 
                        "address": "0x8178020"
                    }, 
                    {
                        "name": "ExtTextOutA", 
                        "address": "0x8178024"
                    }, 
                    {
                        "name": "GetTextExtentPointA", 
                        "address": "0x8178028"
                    }, 
                    {
                        "name": "GetCharABCWidthsA", 
                        "address": "0x817802c"
                    }, 
                    {
                        "name": "GetTextMetricsA", 
                        "address": "0x8178030"
                    }, 
                    {
                        "name": "SetTextColor", 
                        "address": "0x8178034"
                    }, 
                    {
                        "name": "SetBkColor", 
                        "address": "0x8178038"
                    }, 
                    {
                        "name": "CreateBitmap", 
                        "address": "0x817803c"
                    }, 
                    {
                        "name": "CreateCompatibleDC", 
                        "address": "0x8178040"
                    }, 
                    {
                        "name": "DeleteDC", 
                        "address": "0x8178044"
                    }, 
                    {
                        "name": "SelectObject", 
                        "address": "0x8178048"
                    }, 
                    {
                        "name": "GetFontData", 
                        "address": "0x817804c"
                    }, 
                    {
                        "name": "DeleteObject", 
                        "address": "0x8178050"
                    }, 
                    {
                        "name": "GetDeviceCaps", 
                        "address": "0x8178054"
                    }
                ], 
                "dll": "GDI32.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "RegOpenKeyExA", 
                        "address": "0x8178000"
                    }, 
                    {
                        "name": "RegQueryValueExA", 
                        "address": "0x8178004"
                    }, 
                    {
                        "name": "RegCloseKey", 
                        "address": "0x8178008"
                    }, 
                    {
                        "name": "RegOpenKeyA", 
                        "address": "0x817800c"
                    }
                ], 
                "dll": "ADVAPI32.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "SHGetSpecialFolderLocation", 
                        "address": "0x817838c"
                    }, 
                    {
                        "name": "SHGetMalloc", 
                        "address": "0x8178390"
                    }
                ], 
                "dll": "SHELL32.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ", 
                        "address": "0x8178138"
                    }, 
                    {
                        "name": "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z", 
                        "address": "0x817813c"
                    }, 
                    {
                        "name": "?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ", 
                        "address": "0x8178140"
                    }, 
                    {
                        "name": "?_Xlen@_String_base@std@@SAXXZ", 
                        "address": "0x8178144"
                    }, 
                    {
                        "name": "?_Xran@_String_base@std@@SAXXZ", 
                        "address": "0x8178148"
                    }, 
                    {
                        "name": "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z", 
                        "address": "0x817814c"
                    }
                ], 
                "dll": "MSVCP80.dll"
            }, 
            {
                "imports": [
                    {
                        "name": "_CxxThrowException", 
                        "address": "0x8178154"
                    }, 
                    {
                        "name": "memcpy", 
                        "address": "0x8178158"
                    }, 
                    {
                        "name": "strlen", 
                        "address": "0x817815c"
                    }, 
                    {
                        "name": "memset", 
                        "address": "0x8178160"
                    }, 
                    {
                        "name": "_setjmp3", 
                        "address": "0x8178164"
                    }, 
                    {
                        "name": "labs", 
                        "address": "0x8178168"
                    }, 
                    {
                        "name": "memmove", 
                        "address": "0x817816c"
                    }, 
                    {
                        "name": "abort", 
                        "address": "0x8178170"
                    }, 
                    {
                        "name": "fprintf", 
                        "address": "0x8178174"
                    }, 
                    {
                        "name": "__iob_func", 
                        "address": "0x8178178"
                    }, 
                    {
                        "name": "longjmp", 
                        "address": "0x817817c"
                    }, 
                    {
                        "name": "__CxxFrameHandler3", 
                        "address": "0x8178180"
                    }, 
                    {
                        "name": "memcmp", 
                        "address": "0x8178184"
                    }, 
                    {
                        "name": "strncmp", 
                        "address": "0x8178188"
                    }, 
                    {
                        "name": "strcmp", 
                        "address": "0x817818c"
                    }, 
                    {
                        "name": "atol", 
                        "address": "0x8178190"
                    }, 
                    {
                        "name": "strtol", 
                        "address": "0x8178194"
                    }, 
                    {
                        "name": "atoi", 
                        "address": "0x8178198"
                    }, 
                    {
                        "name": "strtoul", 
                        "address": "0x817819c"
                    }, 
                    {
                        "name": "strncpy", 
                        "address": "0x81781a0"
                    }, 
                    {
                        "name": "strchr", 
                        "address": "0x81781a4"
                    }, 
                    {
                        "name": "strcpy", 
                        "address": "0x81781a8"
                    }, 
                    {
                        "name": "_purecall", 
                        "address": "0x81781ac"
                    }, 
                    {
                        "name": "atan", 
                        "address": "0x81781b0"
                    }, 
                    {
                        "name": "__RTDynamicCast", 
                        "address": "0x81781b4"
                    }, 
                    {
                        "name": "sprintf", 
                        "address": "0x81781b8"
                    }, 
                    {
                        "name": "wcslen", 
                        "address": "0x81781bc"
                    }, 
                    {
                        "name": "wcscat", 
                        "address": "0x81781c0"
                    }, 
                    {
                        "name": "sqrt", 
                        "address": "0x81781c4"
                    }, 
                    {
                        "name": "wcscmp", 
                        "address": "0x81781c8"
                    }, 
                    {
                        "name": "strstr", 
                        "address": "0x81781cc"
                    }, 
                    {
                        "name": "wcsstr", 
                        "address": "0x81781d0"
                    }, 
                    {
                        "name": "ceil", 
                        "address": "0x81781d4"
                    }, 
                    {
                        "name": "floor", 
                        "address": "0x81781d8"
                    }, 
                    {
                        "name": "wcsrchr", 
                        "address": "0x81781dc"
                    }, 
                    {
                        "name": "towupper", 
                        "address": "0x81781e0"
                    }, 
                    {
                        "name": "wcsncmp", 
                        "address": "0x81781e4"
                    }, 
                    {
                        "name": "wcsncpy", 
                        "address": "0x81781e8"
                    }, 
                    {
                        "name": "qsort", 
                        "address": "0x81781ec"
                    }, 
                    {
                        "name": "sscanf", 
                        "address": "0x81781f0"
                    }, 
                    {
                        "name": "_vswprintf", 
                        "address": "0x81781f4"
                    }, 
                    {
                        "name": "_time64", 
                        "address": "0x81781f8"
                    }, 
                    {
                        "name": "rand", 
                        "address": "0x81781fc"
                    }, 
                    {
                        "name": "srand", 
                        "address": "0x8178200"
                    }, 
                    {
                        "name": "_wsplitpath", 
                        "address": "0x8178204"
                    }, 
                    {
                        "name": "_wfullpath", 
                        "address": "0x8178208"
                    }, 
                    {
                        "name": "wcschr", 
                        "address": "0x817820c"
                    }, 
                    {
                        "name": "exit", 
                        "address": "0x8178210"
                    }, 
                    {
                        "name": "_waccess", 
                        "address": "0x8178214"
                    }, 
                    {
                        "name": "??0exception@std@@QAE@ABQBD@Z", 
                        "address": "0x8178218"
                    }, 
                    {
                        "name": "?what@exception@std@@UBEPBDXZ", 
                        "address": "0x817821c"
                    }, 
                    {
                        "name": "??1exception@std@@UAE@XZ", 
                        "address": "0x8178220"
                    }, 
                    {
                        "name": "??0exception@std@@QAE@ABV01@@Z", 
                        "address": "0x8178224"
                    }, 
                    {
                        "name": "??0exception@std@@QAE@XZ", 
                        "address": "0x8178228"
                    }, 
                    {
                        "name": "bsearch", 
                        "address": "0x817822c"
                    }, 
                    {
                        "name": "isdigit", 
                        "address": "0x8178230"
                    }, 
                    {
                        "name": "_invalid_parameter_noinfo", 
                        "address": "0x8178234"
                    }, 
                    {
                        "name": "memmove_s", 
                        "address": "0x8178238"
                    }, 
                    {
                        "name": "asin", 
                        "address": "0x817823c"
                    }, 
                    {
                        "name": "realloc", 
                        "address": "0x8178240"
                    }, 
                    {
                        "name": "isxdigit", 
                        "address": "0x8178244"
                    }, 
                    {
                        "name": "isalnum", 
                        "address": "0x8178248"
                    }, 
                    {
                        "name": "memcpy_s", 
                        "address": "0x817824c"
                    }, 
                    {
                        "name": "isalpha", 
                        "address": "0x8178250"
                    }, 
                    {
                        "name": "strcat", 
                        "address": "0x8178254"
                    }, 
                    {
                        "name": "strtok", 
                        "address": "0x8178258"
                    }, 
                    {
                        "name": "strrchr", 
                        "address": "0x817825c"
                    }, 
                    {
                        "name": "isspace", 
                        "address": "0x8178260"
                    }, 
                    {
                        "name": "_errno", 
                        "address": "0x8178264"
                    }, 
                    {
                        "name": "__CxxLongjmpUnwind", 
                        "address": "0x8178268"
                    }, 
                    {
                        "name": "strncat", 
                        "address": "0x817826c"
                    }, 
                    {
                        "name": "tan", 
                        "address": "0x8178270"
                    }, 
                    {
                        "name": "strpbrk", 
                        "address": "0x8178274"
                    }, 
                    {
                        "name": "??0exception@std@@QAE@ABQBDH@Z", 
                        "address": "0x8178278"
                    }, 
                    {
                        "name": "fabs", 
                        "address": "0x817827c"
                    }, 
                    {
                        "name": "vsprintf", 
                        "address": "0x8178280"
                    }, 
                    {
                        "name": "strtod", 
                        "address": "0x8178284"
                    }, 
                    {
                        "name": "printf", 
                        "address": "0x8178288"
                    }, 
                    {
                        "name": "_localtime64", 
                        "address": "0x817828c"
                    }, 
                    {
                        "name": "wcstok", 
                        "address": "0x8178290"
                    }, 
                    {
                        "name": "strspn", 
                        "address": "0x8178294"
                    }, 
                    {
                        "name": "strcspn", 
                        "address": "0x8178298"
                    }, 
                    {
                        "name": "_gmtime64", 
                        "address": "0x817829c"
                    }, 
                    {
                        "name": "_mktime64", 
                        "address": "0x81782a0"
                    }, 
                    {
                        "name": "clearerr", 
                        "address": "0x81782a4"
                    }, 
                    {
                        "name": "ferror", 
                        "address": "0x81782a8"
                    }, 
                    {
                        "name": "feof", 
                        "address": "0x81782ac"
                    }, 
                    {
                        "name": "fread", 
                        "address": "0x81782b0"
                    }, 
                    {
                        "name": "fwrite", 
                        "address": "0x81782b4"
                    }, 
                    {
                        "name": "fputs", 
                        "address": "0x81782b8"
                    }, 
                    {
                        "name": "fgets", 
                        "address": "0x81782bc"
                    }, 
                    {
                        "name": "ftell", 
                        "address": "0x81782c0"
                    }, 
                    {
                        "name": "fseek", 
                        "address": "0x81782c4"
                    }, 
                    {
                        "name": "fflush", 
                        "address": "0x81782c8"
                    }, 
                    {
                        "name": "fclose", 
                        "address": "0x81782cc"
                    }, 
                    {
                        "name": "_get_osfhandle", 
                        "address": "0x81782d0"
                    }, 
                    {
                        "name": "_fileno", 
                        "address": "0x81782d4"
                    }, 
                    {
                        "name": "_open_osfhandle", 
                        "address": "0x81782d8"
                    }, 
                    {
                        "name": "isupper", 
                        "address": "0x81782dc"
                    }, 
                    {
                        "name": "toupper", 
                        "address": "0x81782e0"
                    }, 
                    {
                        "name": "tolower", 
                        "address": "0x81782e4"
                    }, 
                    {
                        "name": "wcsncat", 
                        "address": "0x81782e8"
                    }, 
                    {
                        "name": "fopen", 
                        "address": "0x81782ec"
                    }, 
                    {
                        "name": "rewind", 
                        "address": "0x81782f0"
                    }, 
                    {
                        "name": "fputc", 
                        "address": "0x81782f4"
                    }, 
                    {
                        "name": "fgetc", 
                        "address": "0x81782f8"
                    }, 
                    {
                        "name": "ungetc", 
                        "address": "0x81782fc"
                    }, 
                    {
                        "name": "remove", 
                        "address": "0x8178300"
                    }, 
                    {
                        "name": "modf", 
                        "address": "0x8178304"
                    }, 
                    {
                        "name": "fmod", 
                        "address": "0x8178308"
                    }, 
                    {
                        "name": "pow", 
                        "address": "0x817830c"
                    }, 
                    {
                        "name": "log", 
                        "address": "0x8178310"
                    }, 
                    {
                        "name": "_tzset", 
                        "address": "0x8178314"
                    }, 
                    {
                        "name": "__timezone", 
                        "address": "0x8178318"
                    }, 
                    {
                        "name": "getenv", 
                        "address": "0x817831c"
                    }, 
                    {
                        "name": "__tzname", 
                        "address": "0x8178320"
                    }, 
                    {
                        "name": "_stricmp", 
                        "address": "0x8178324"
                    }, 
                    {
                        "name": "__CxxFrameHandler", 
                        "address": "0x8178328"
                    }, 
                    {
                        "name": "_unlock", 
                        "address": "0x817832c"
                    }, 
                    {
                        "name": "_encode_pointer", 
                        "address": "0x8178330"
                    }, 
                    {
                        "name": "__dllonexit", 
                        "address": "0x8178334"
                    }, 
                    {
                        "name": "_lock", 
                        "address": "0x8178338"
                    }, 
                    {
                        "name": "_onexit", 
                        "address": "0x817833c"
                    }, 
                    {
                        "name": "_decode_pointer", 
                        "address": "0x8178340"
                    }, 
                    {
                        "name": "?terminate@@YAXXZ", 
                        "address": "0x8178344"
                    }, 
                    {
                        "name": "_malloc_crt", 
                        "address": "0x8178348"
                    }, 
                    {
                        "name": "_encoded_null", 
                        "address": "0x817834c"
                    }, 
                    {
                        "name": "free", 
                        "address": "0x8178350"
                    }, 
                    {
                        "name": "_initterm", 
                        "address": "0x8178354"
                    }, 
                    {
                        "name": "_initterm_e", 
                        "address": "0x8178358"
                    }, 
                    {
                        "name": "_amsg_exit", 
                        "address": "0x817835c"
                    }, 
                    {
                        "name": "_adjust_fdiv", 
                        "address": "0x8178360"
                    }, 
                    {
                        "name": "__CppXcptFilter", 
                        "address": "0x8178364"
                    }, 
                    {
                        "name": "_crt_debugger_hook", 
                        "address": "0x8178368"
                    }, 
                    {
                        "name": "?_type_info_dtor_internal_method@type_info@@QAEXXZ", 
                        "address": "0x817836c"
                    }, 
                    {
                        "name": "_except_handler4_common", 
                        "address": "0x8178370"
                    }, 
                    {
                        "name": "__clean_type_info_names_internal", 
                        "address": "0x8178374"
                    }, 
                    {
                        "name": "_wcsnicmp", 
                        "address": "0x8178378"
                    }, 
                    {
                        "name": "_wcsicmp", 
                        "address": "0x817837c"
                    }, 
                    {
                        "name": "wcscpy", 
                        "address": "0x8178380"
                    }, 
                    {
                        "name": "_fdopen", 
                        "address": "0x8178384"
                    }
                ], 
                "dll": "MSVCR80.dll"
            }
        ], 
        "peid_signatures": null, 
        "pe_timestamp": "2006-10-23 11:26:10", 
        "pe_exports": [
            {
                "ordinal": 3, 
                "name": "CTCleanup", 
                "address": "0x814089c"
            }, 
            {
                "ordinal": 2, 
                "name": "CTGetVersion", 
                "address": "0x809c8d2"
            }, 
            {
                "ordinal": 1, 
                "name": "CTInit", 
                "address": "0x80443f4"
            }
        ], 
        "imported_dll_count": 7, 
        "pe_imphash": null, 
        "pe_resources": [], 
        "pe_versioninfo": [
            {
                "name": "LegalCopyright", 
                "value": "\\xa9 1984-2006 Adobe Systems Incorporated"
            }, 
            {
                "name": "BuildType", 
                "value": "Release CRTSTDLL"
            }, 
            {
                "name": "InternalName", 
                "value": "CoolType"
            }, 
            {
                "name": "FileVersion", 
                "value": "5.03.73"
            }, 
            {
                "name": "CompanyName", 
                "value": "Adobe Systems Incorporated"
            }, 
            {
                "name": "BuildVersion", 
                "value": "44.255677"
            }, 
            {
                "name": "BuildVariant", 
                "value": "Acrobat"
            }, 
            {
                "name": "ProductName", 
                "value": "CoolType"
            }, 
            {
                "name": "ProductVersion", 
                "value": "5.03"
            }, 
            {
                "name": "FileDescription", 
                "value": "CoolType Typography Engine"
            }, 
            {
                "name": "OriginalFilename", 
                "value": "CoolType.dll"
            }, 
            {
                "name": "BuildDate", 
                "value": "Mon Oct 23 01:25:06 2006"
            }, 
            {
                "name": "Translation", 
                "value": "0x0800 0x04b0"
            }
        ], 
        "pe_sections": [
            {
                "size_of_data": "0x00177000", 
                "virtual_address": "0x00001000", 
                "entropy": 6.765018958167431, 
                "name": ".text", 
                "virtual_size": "0x0017651a"
            }, 
            {
                "size_of_data": "0x00081000", 
                "virtual_address": "0x00178000", 
                "entropy": 5.401658757697388, 
                "name": ".rdata", 
                "virtual_size": "0x00080cf1"
            }, 
            {
                "size_of_data": "0x00016000", 
                "virtual_address": "0x001f9000", 
                "entropy": 6.157110308928715, 
                "name": ".data", 
                "virtual_size": "0x0002201c"
            }, 
            {
                "size_of_data": "0x00001000", 
                "virtual_address": "0x0021c000", 
                "entropy": 4.1561584233868345, 
                "name": ".rsrc", 
                "virtual_size": "0x000005fc"
            }, 
            {
                "size_of_data": "0x0001d000", 
                "virtual_address": "0x0021d000", 
                "entropy": 6.599950988237091, 
                "name": ".reloc", 
                "virtual_size": "0x0001c5d0"
            }, 
            {
                "size_of_data": "0x00028000", 
                "virtual_address": "0x0023a000", 
                "entropy": 7.932036920071563, 
                "name": ".text", 
                "virtual_size": "0x00028000"
            }
        ]
    }, 
    "dropped": [], 
    "behavior": {
        "processtree": [
            {
                "parent_id": 3540, 
                "pid": 3884, 
                "children": [], 
                "name": "rundll32.exe"
            }
        ], 
        "processes": [
            {
                "parent_id": 3540, 
                "process_name": "rundll32.exe", 
                "process_id": 3884, 
                "first_seen": "2014-08-03 13:19:19,692", 
                "calls": [
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "EncodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774f324c"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2168", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "EncodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774f324c"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,832", 
                        "thread_id": "2160", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,842", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x001200a9"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000ec"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,842", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00000004"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000f0"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000ec"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:19,842", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000f0"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00cc0000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,445", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySide"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:21,445", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "PreferExternalManifest"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:21,445", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d.123.Manifest"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x001200a9"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x00000000"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,845", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x001200a9"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000f0"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,845", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00000004"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000f0"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,845", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00cc0000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,875", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySide"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:21,875", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "PreferExternalManifest"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:21,875", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d.124.Manifest"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x001200a9"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x00000000"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,895", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x001200a9"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000ec"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,905", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00000004"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000f0"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000ec"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,905", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000f0"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00cc0000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,905", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySide"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:21,905", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "PreferExternalManifest"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:21,905", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryInformationFile", 
                        "arguments": [
                            {
                                "name": "FileHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "FileInformation", 
                                "value": "\\xce:\\xfdT\\xcc\\x91\\xcf\\x01\\xce:\\xfdT\\xcc\\x91\\xcf\\x01'\\xd8\\xfeT\\xcc\\x91\\xcf\\x01'\\xd8\\xfeT\\xcc\\x91\\xcf\\x01  \\x00\\x00\\x00\\x00\\x00\\x00"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": false, 
                        "return": "0xc0000135", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1308736"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\en-US\\KERNELBASE.dll.mui"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x80100080"
                            }, 
                            {
                                "name": "CreateDisposition", 
                                "value": "1"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000f0"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x000f0005"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000f0"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013ee50"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00360000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\Machine\\Software\\Microsoft\\Windows\\Windows Error Reporting\\WMR"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,006", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "Information", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Disable"
                            }, 
                            {
                                "name": "Type", 
                                "value": "4"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtFreeVirtualMemory", 
                        "arguments": [
                            {
                                "name": "FreeType", 
                                "value": "0x00008000"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "RegionSize", 
                                "value": "0x001c0000"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00cc0000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Nls\\Locale"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f4"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Nls\\Locale\\Alternate Sorts"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f8"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Nls\\Language Groups"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "Information", 
                                "value": "1\\x00\\x00\\x00"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000ec"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "00000410"
                            }, 
                            {
                                "name": "Type", 
                                "value": "1"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "Information", 
                                "value": "1\\x00\\x00\\x00"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000f8"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "1"
                            }, 
                            {
                                "name": "Type", 
                                "value": "1"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GetLayout"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x77247050"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GdiRealizationInfo"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x77247a22"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "FontIsLinked"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7724b9be"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1304412"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x77290000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "ADVAPI32.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegOpenKeyExW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abec4"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegOpenKeyExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "Registry", 
                                "value": "0x80000002"
                            }, 
                            {
                                "name": "SubKey", 
                                "value": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegQueryInfoKeyW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abb42"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryInfoKeyW", 
                        "arguments": [
                            {
                                "name": "MaxClassLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "MaxValueLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "MaxValueNameLength", 
                                "value": "27"
                            }, 
                            {
                                "name": "ValueCount", 
                                "value": "40"
                            }, 
                            {
                                "name": "MaxSubKeyLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "SubKeyCount", 
                                "value": "0"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GetTextFaceAliasW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7724b9ec"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegEnumValueW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abb72"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS PGothic MC"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "1"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Segoe Media Center"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "2"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Segoe Media Center Semibold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "3"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Segoe Media Center Light"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "4"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Lucida Sans Unicode"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "5"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Microsoft Sans Serif"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "6"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Tahoma"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "7"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Segoe UI"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "8"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MingLiU"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "9"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "PMingLiU"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "10"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MingLiU_HKSCS"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "11"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MingLiU-ExtB"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "12"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "PMingLiU-ExtB"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "13"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MingLiU_HKSCS-ExtB"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "14"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Microsoft JhengHei"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "15"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Microsoft JhengHei Bold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "16"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "SimSun"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "17"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "SimSun-ExtB"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "18"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "NSimSun"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "19"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Microsoft YaHei"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "20"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Microsoft YaHei Bold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "21"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Meiryo"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "22"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Meiryo Bold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "23"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Meiryo UI"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "24"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Meiryo UI Bold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "25"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS Gothic"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "26"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS PGothic"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "27"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS UI Gothic"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "28"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS Mincho"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "29"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "MS PMincho"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "30"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Batang"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "31"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "BatangChe"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "32"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Dotum"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "33"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "DotumChe"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "34"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Gulim"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "35"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "GulimChe"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "36"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Gungsuh"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "37"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "GungsuhChe"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "38"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Malgun Gothic"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "39"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Malgun Gothic Bold"
                            }, 
                            {
                                "name": "Type", 
                                "value": "7"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000103", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumValueW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "40"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": ""
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegCloseKey"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abed4"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegCloseKey", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegOpenKeyExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "Registry", 
                                "value": "0x80000002"
                            }, 
                            {
                                "name": "SubKey", 
                                "value": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\DataStore_V1.0"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegQueryValueExW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abcd5"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "4"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Disable"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegQueryValueExW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abcd5"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "Data", 
                                "value": "C\\x00:\\x00\\\\x00W\\x00i\\x00n\\x00d\\x00o\\x00w\\x00s\\x00\\\\x00F\\x00o\\x00n\\x00t\\x00s\\x00\\\\x00s\\x00t\\x00a\\x00t\\x00i\\x00c\\x00c\\x00a\\x00c\\x00h\\x00e\\x00.\\x00d\\x00a\\x00t\\x00\\x00\\x00"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "DataFilePath"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegCloseKey", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x000000fc"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\Fonts\\staticcache.dat"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x80100080"
                            }, 
                            {
                                "name": "CreateDisposition", 
                                "value": "1"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000fc"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryInformationFile", 
                        "arguments": [
                            {
                                "name": "FileHandle", 
                                "value": "0x000000fc"
                            }, 
                            {
                                "name": "FileInformation", 
                                "value": "\\x00\\x00\\x93\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x93\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtReadFile", 
                        "arguments": [
                            {
                                "name": "Buffer", 
                                "value": "\\x1a\\x83W\\xa5\\x02\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x91\\x00\\x00\\x00D!\\x00\\x00\\x00\\x00\\x02\\x00\\x16\\x02\\x00\\x00<\\x00\\x00\\x00D\\x19\\x00\\x00X!\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000fc"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x000f0005"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000100"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x000000fc"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,036", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013e410"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000100"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x01bf0000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GetFontAssocStatus"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7724b9d2"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegOpenKeyExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Registry", 
                                "value": "0x80000002"
                            }, 
                            {
                                "name": "SubKey", 
                                "value": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallback"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegQueryValueExA"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abc25"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane1"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Data", 
                                "value": "SimSun-ExtB\\x00"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane2"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane3"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane4"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane5"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane6"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane7"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane8"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane9"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane10"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane11"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane12"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane13"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane14"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane15"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryValueExA", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "DataLength", 
                                "value": "41"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Plane16"
                            }, 
                            {
                                "name": "Type", 
                                "value": "0"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegCloseKey", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegOpenKeyExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Registry", 
                                "value": "0x80000002"
                            }, 
                            {
                                "name": "SubKey", 
                                "value": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallback"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegQueryInfoKeyW", 
                        "arguments": [
                            {
                                "name": "MaxClassLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "MaxValueLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "MaxValueNameLength", 
                                "value": "0"
                            }, 
                            {
                                "name": "ValueCount", 
                                "value": "0"
                            }, 
                            {
                                "name": "MaxSubKeyLength", 
                                "value": "13"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "SubKeyCount", 
                                "value": "4"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "RegEnumKeyExW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x772abb65"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77290000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumKeyExW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Name", 
                                "value": "MingLiU"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumKeyExW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "1"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Name", 
                                "value": "MingLiU_HKSCS"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumKeyExW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "2"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Name", 
                                "value": "PMingLiU"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegEnumKeyExW", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "3"
                            }, 
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "Name", 
                                "value": "SimSun"
                            }, 
                            {
                                "name": "Class", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GetTextFaceAliasW"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7724b9ec"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x00000002", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegOpenKeyExW", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "Registry", 
                                "value": "0x00000104"
                            }, 
                            {
                                "name": "SubKey", 
                                "value": "Segoe UI"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "RegCloseKey", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000104"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1305272"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x74360000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\uxtheme.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "ThemeInitApiHook"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7436b176"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x74360000"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013e8ec"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000110"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00850000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76b00000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "user32.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "IsProcessDPIAware"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x76b13919"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76b00000"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 4, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1304868"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x74030000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "dwmapi.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DwmIsCompositionEnabled"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x74031610"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x74030000"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 5, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,046", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "GdiIsMetaPrintDC"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x77248ab9"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77240000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "SOFTWARE\\Microsoft\\CTF\\Compatibility\\rundll32.exe"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1304196"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x77330000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\ole32.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "CoInitializeEx"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x77370804"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77330000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "CoUninitialize"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x773770c7"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77330000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": false, 
                        "return": "0xc0000135", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\rpcss.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1304196"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x75530000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "CRYPTBASE.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "SystemFunction036"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x755312f0"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75530000"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "7"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Device\\KsecDD"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00100001"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x00000124"
                            }
                        ]
                    }, 
                    {
                        "category": "device", 
                        "status": true, 
                        "return": "0x00000001", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "DeviceIoControl", 
                        "arguments": [
                            {
                                "name": "DeviceHandle", 
                                "value": "0x00000124"
                            }, 
                            {
                                "name": "OutBuffer", 
                                "value": "\\xbbP\\x9f\\xbdDL\\x8ap\\x1d\\x16\\x0bx\\x04,\\x18\\x90\\x8f\\xddg\\xabw\\x89{\\xe3=\\xfa|\\xef\\xa0i\\xd5\\xf1\\xb2\\xbd\\x89\n\\xb5\\xa0\\xd1\\xfbw(\\xf2\\x17d\\xdfV<"
                            }, 
                            {
                                "name": "IoControlCode", 
                                "value": "3735560"
                            }, 
                            {
                                "name": "InBuffer", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "device", 
                        "status": true, 
                        "return": "0x00000001", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "DeviceIoControl", 
                        "arguments": [
                            {
                                "name": "DeviceHandle", 
                                "value": "0x00000124"
                            }, 
                            {
                                "name": "OutBuffer", 
                                "value": "\\xc7\\x892\\x03B>T \\x9a_\\x9a\\xac &\\x80\\xfc \\xbb\\xc0d!\\x9eV\\x18$>\\xcb\\x8e\\xbd\\x10P\\xb2-<\\xf8\\x97i3U\\x14\t8\\x83\\xb2\\x1b\\xa9Of"
                            }, 
                            {
                                "name": "IoControlCode", 
                                "value": "3735560"
                            }, 
                            {
                                "name": "InBuffer", 
                                "value": ""
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "CoRegisterInitializeSpy"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x7737683e"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77330000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "CoRevokeInitializeSpy"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x773781ba"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x77330000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x0000012c"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "Software\\Microsoft\\CTF\\TIP\\{0000897b-83df-4b96-be07-0fb58b01c4a4}\\LanguageProfile\\0x00000000\\{0001bea3-ed56-483d-a2e2-aeae25577436}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "Information", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x0000012c"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Enable"
                            }, 
                            {
                                "name": "Type", 
                                "value": "4"
                            }
                        ]
                    }, 
                    {
                        "category": "synchronization", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenMutant", 
                        "arguments": [
                            {
                                "name": "Handle", 
                                "value": "0x00000128"
                            }, 
                            {
                                "name": "MutexName", 
                                "value": "Local\\MSCTF.Asm.MutexDefault1"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenSection", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00000004"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "C:\\Local\\CTF.AsmListCache.FMPDefault1"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013e540"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00180000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "SOFTWARE\\Microsoft\\CTF\\TIP\\"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{0000897b-83df-4b96-be07-0fb58b01c4a4}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{03B5835F-F03C-411B-9CE2-AA23E1171E36}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "2"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{07EB03D6-B001-41DF-9192-BF9B841EE71F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "3"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{3697C5FA-60DD-4B56-92D4-74A569205C16}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x8000001a", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "4"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{531FDEBF-9B4C-4A43-A2AA-960E8FCDC732}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "5"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{78CB5B0E-26ED-4FCC-854C-77E8F3D1AA80}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "1"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "2"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "3"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "4"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "5"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x8000001a", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "6"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "6"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{81D4E9C9-1D3B-41BC-9E6C-4B40BF79E35E}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "7"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{8613E14C-D0C0-4161-AC0F-1DD2563286BC}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "8"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{A028AE76-01B1-46C2-99C4-ACD9858AE02F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "9"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{AE6BE008-07FB-400D-8BEB-337A64F7051F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "10"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{C1EE01F2-B3B6-4A6A-9DDD-E988C088EC82}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "11"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{DCBD6FA8-032F-11D3-B5B1-00C04FC324A1}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "12"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{E429B25A-E5D3-4D1F-9BE3-0C608477E3A1}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "13"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{F25E9F57-2FC8-4EB3-A41A-CCE5F08541E6}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "14"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "{F89E9E58-BD2F-4008-9AC2-0F816C09F4EE}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x8000001a", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "15"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\REGISTRY\\USER\\S-1-5-21-878155129-3282219497-1104049803-1001"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "Keyboard Layout\\Toggle"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Language Hotkey"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Hotkey"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000134"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "Layout Hotkey"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "74"
                            }
                        ]
                    }, 
                    {
                        "category": "filesystem", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateFile", 
                        "arguments": [
                            {
                                "name": "ShareAccess", 
                                "value": "5"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\en-US\\MSCTF.dll.mui"
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x80100080"
                            }, 
                            {
                                "name": "CreateDisposition", 
                                "value": "1"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtCreateSection", 
                        "arguments": [
                            {
                                "name": "ObjectAttributes", 
                                "value": ""
                            }, 
                            {
                                "name": "DesiredAccess", 
                                "value": "0x000f0005"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "FileHandle", 
                                "value": "0x00000134"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013db70"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00180000"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenSection", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "0x00000004"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "C:\\Local\\CTF.AsmListCache.FMPDefault1"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ZwMapViewOfSection", 
                        "arguments": [
                            {
                                "name": "SectionOffset", 
                                "value": "0x0013e504"
                            }, 
                            {
                                "name": "SectionHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ProcessHandle", 
                                "value": "0xffffffff"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x00680000"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKey", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000130"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "\\REGISTRY\\USER\\S-1-5-21-878155129-3282219497-1104049803-1001"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000138"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "Software\\Microsoft\\CTF\\DirectSwitchHotkeys"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0x8000001a", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtEnumerateKey", 
                        "arguments": [
                            {
                                "name": "Index", 
                                "value": "0"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000138"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000138"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "SOFTWARE\\Microsoft\\CTF\\"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtQueryValueKey", 
                        "arguments": [
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000138"
                            }, 
                            {
                                "name": "ValueName", 
                                "value": "EnableAnchorContext"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,056", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76b00000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "USER32"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 5, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 7, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 7, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,066", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1306064"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x77170000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "C:\\Windows\\system32\\MSCTF.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 5, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1305036"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x76d80000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "OLEAUT32.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "SysAllocString"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x76d84642"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76d80000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "SysStringLen"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x76d84680"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76d80000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,306", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "SysFreeString"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x76d83e59"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76d80000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "KERNELBASE.DLL"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "EncodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774f324c"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:22,316", 
                        "thread_id": "2092", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "0"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": "DecodePointer"
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x774ef020"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x75660000"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "49"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "49"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "49"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:22,366", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 5, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 7, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000010", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "50"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000020", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "12"
                            }
                        ]
                    }, 
                    {
                        "category": "misc", 
                        "status": true, 
                        "return": "0x00000015", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 1, 
                        "api": "GetSystemMetrics", 
                        "arguments": [
                            {
                                "name": "SystemMetricIndex", 
                                "value": "31"
                            }
                        ]
                    }, 
                    {
                        "category": "registry", 
                        "status": false, 
                        "return": "0xc0000034", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "NtOpenKeyEx", 
                        "arguments": [
                            {
                                "name": "DesiredAccess", 
                                "value": "131097"
                            }, 
                            {
                                "name": "KeyHandle", 
                                "value": "0x00000000"
                            }, 
                            {
                                "name": "ObjectAttributes", 
                                "value": "SOFTWARE\\Microsoft\\CTF\\KnownClasses"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetDllHandle", 
                        "arguments": [
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76d80000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "oleaut32.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrLoadDll", 
                        "arguments": [
                            {
                                "name": "Flags", 
                                "value": "1306196"
                            }, 
                            {
                                "name": "BaseAddress", 
                                "value": "0x76d80000"
                            }, 
                            {
                                "name": "FileName", 
                                "value": "OLEAUT32.dll"
                            }
                        ]
                    }, 
                    {
                        "category": "system", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "LdrGetProcedureAddress", 
                        "arguments": [
                            {
                                "name": "Ordinal", 
                                "value": "500"
                            }, 
                            {
                                "name": "FunctionName", 
                                "value": ""
                            }, 
                            {
                                "name": "FunctionAddress", 
                                "value": "0x76d83f0b"
                            }, 
                            {
                                "name": "ModuleHandle", 
                                "value": "0x76d80000"
                            }
                        ]
                    }, 
                    {
                        "category": "process", 
                        "status": true, 
                        "return": "0x00000000", 
                        "timestamp": "2014-08-03 13:19:23,307", 
                        "thread_id": "3888", 
                        "repeated": 0, 
                        "api": "ExitProcess", 
                        "arguments": [
                            {
                                "name": "ExitCode", 
                                "value": "0"
                            }
                        ]
                    }
                ]
            }
        ], 
        "anomaly": [], 
        "enhanced": [
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 1
            }, 
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 2
            }, 
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 3
            }, 
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 4
            }, 
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 5
            }, 
            {
                "timestamp": "2014-08-03 13:19:19,832", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 6
            }, 
            {
                "timestamp": "2014-08-03 13:19:21,445", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySidePreferExternalManifest"
                }, 
                "event": "read", 
                "eid": 7
            }, 
            {
                "timestamp": "2014-08-03 13:19:21,875", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySidePreferExternalManifest"
                }, 
                "event": "read", 
                "eid": 8
            }, 
            {
                "timestamp": "2014-08-03 13:19:21,905", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySidePreferExternalManifest"
                }, 
                "event": "read", 
                "eid": 9
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,006", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
                    "moduleaddress": "0x00000000"
                }, 
                "event": "load", 
                "eid": 10
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,006", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\Windows Error Reporting\\WMRDisable"
                }, 
                "event": "read", 
                "eid": 11
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\Windows Error Reporting\\WMR00000410"
                }, 
                "event": "read", 
                "eid": 12
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Nls\\Language Groups1"
                }, 
                "event": "read", 
                "eid": 13
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "ADVAPI32.dll", 
                    "moduleaddress": "0x77290000"
                }, 
                "event": "load", 
                "eid": 14
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\DataStore_V1.0Disable"
                }, 
                "event": "read", 
                "eid": 15
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\DataStore_V1.0DataFilePath"
                }, 
                "event": "read", 
                "eid": 16
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,036", 
                "object": "file", 
                "data": {
                    "file": "C:\\Windows\\Fonts\\staticcache.dat"
                }, 
                "event": "read", 
                "eid": 17
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane1"
                }, 
                "event": "read", 
                "eid": 18
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane2"
                }, 
                "event": "read", 
                "eid": 19
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane3"
                }, 
                "event": "read", 
                "eid": 20
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane4"
                }, 
                "event": "read", 
                "eid": 21
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane5"
                }, 
                "event": "read", 
                "eid": 22
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane6"
                }, 
                "event": "read", 
                "eid": 23
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane7"
                }, 
                "event": "read", 
                "eid": 24
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane8"
                }, 
                "event": "read", 
                "eid": 25
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane9"
                }, 
                "event": "read", 
                "eid": 26
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane10"
                }, 
                "event": "read", 
                "eid": 27
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane11"
                }, 
                "event": "read", 
                "eid": 28
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane12"
                }, 
                "event": "read", 
                "eid": 29
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane13"
                }, 
                "event": "read", 
                "eid": 30
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane14"
                }, 
                "event": "read", 
                "eid": 31
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane15"
                }, 
                "event": "read", 
                "eid": 32
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "registry", 
                "data": {
                    "regkey": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallbackPlane16"
                }, 
                "event": "read", 
                "eid": 33
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "C:\\Windows\\system32\\uxtheme.dll", 
                    "moduleaddress": "0x74360000"
                }, 
                "event": "load", 
                "eid": 34
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "user32.dll", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 35
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,046", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "dwmapi.dll", 
                    "moduleaddress": "0x74030000"
                }, 
                "event": "load", 
                "eid": 36
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "C:\\Windows\\system32\\ole32.dll", 
                    "moduleaddress": "0x77330000"
                }, 
                "event": "load", 
                "eid": 37
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "C:\\Windows\\system32\\rpcss.dll", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 38
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "CRYPTBASE.dll", 
                    "moduleaddress": "0x75530000"
                }, 
                "event": "load", 
                "eid": 39
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "registry", 
                "data": {
                    "regkey": "Enable"
                }, 
                "event": "read", 
                "eid": 40
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "registry", 
                "data": {
                    "regkey": "Language Hotkey"
                }, 
                "event": "read", 
                "eid": 41
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "registry", 
                "data": {
                    "regkey": "Hotkey"
                }, 
                "event": "read", 
                "eid": 42
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "registry", 
                "data": {
                    "regkey": "Layout Hotkey"
                }, 
                "event": "read", 
                "eid": 43
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "registry", 
                "data": {
                    "regkey": "EnableAnchorContext"
                }, 
                "event": "read", 
                "eid": 44
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,056", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "USER32", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 45
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,306", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "C:\\Windows\\system32\\MSCTF.dll", 
                    "moduleaddress": "0x77170000"
                }, 
                "event": "load", 
                "eid": 46
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,306", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "OLEAUT32.DLL", 
                    "moduleaddress": "0x76d80000"
                }, 
                "event": "load", 
                "eid": 47
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,316", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 48
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,316", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 49
            }, 
            {
                "timestamp": "2014-08-03 13:19:22,316", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "KERNELBASE.DLL", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 50
            }, 
            {
                "timestamp": "2014-08-03 13:19:23,307", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "oleaut32.dll", 
                    "moduleaddress": null
                }, 
                "event": "load", 
                "eid": 51
            }, 
            {
                "timestamp": "2014-08-03 13:19:23,307", 
                "object": "library", 
                "data": {
                    "pathtofile": null, 
                    "file": "OLEAUT32.dll", 
                    "moduleaddress": "0x76d80000"
                }, 
                "event": "load", 
                "eid": 52
            }
        ], 
        "summary": {
            "files": [
                "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
                "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d.123.Manifest", 
                "C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d.124.Manifest", 
                "C:\\Windows\\system32\\en-US\\KERNELBASE.dll.mui", 
                "C:\\Windows\\Fonts\\staticcache.dat", 
                "C:\\Device\\KsecDD", 
                "C:\\Windows\\system32\\en-US\\MSCTF.dll.mui"
            ], 
            "keys": [
                "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SideBySide", 
                "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\Windows Error Reporting\\WMR", 
                "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Nls\\Language Groups", 
                "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink", 
                "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\DataStore_V1.0", 
                "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallback", 
                "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallback\\Segoe UI", 
                "SOFTWARE\\Microsoft\\CTF\\Compatibility\\rundll32.exe", 
                "Software\\Microsoft\\CTF\\TIP\\{0000897b-83df-4b96-be07-0fb58b01c4a4}\\LanguageProfile\\0x00000000\\{0001bea3-ed56-483d-a2e2-aeae25577436}", 
                "SOFTWARE\\Microsoft\\CTF\\TIP\\", 
                "{0000897b-83df-4b96-be07-0fb58b01c4a4}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{03B5835F-F03C-411B-9CE2-AA23E1171E36}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{07EB03D6-B001-41DF-9192-BF9B841EE71F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{3697C5FA-60DD-4B56-92D4-74A569205C16}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{531FDEBF-9B4C-4A43-A2AA-960E8FCDC732}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{81D4E9C9-1D3B-41BC-9E6C-4B40BF79E35E}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{8613E14C-D0C0-4161-AC0F-1DD2563286BC}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{A028AE76-01B1-46C2-99C4-ACD9858AE02F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{AE6BE008-07FB-400D-8BEB-337A64F7051F}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{C1EE01F2-B3B6-4A6A-9DDD-E988C088EC82}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{DCBD6FA8-032F-11D3-B5B1-00C04FC324A1}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{E429B25A-E5D3-4D1F-9BE3-0C608477E3A1}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{F25E9F57-2FC8-4EB3-A41A-CCE5F08541E6}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "{F89E9E58-BD2F-4008-9AC2-0F816C09F4EE}\\Category\\Category\\{534C48C1-0607-4098-A521-4FC899C73E90}", 
                "Software\\Microsoft\\CTF\\DirectSwitchHotkeys", 
                "SOFTWARE\\Microsoft\\CTF\\KnownClasses"
            ], 
            "mutexes": [
                "Local\\MSCTF.Asm.MutexDefault1"
            ]
        }
    }, 
    "target": {
        "category": "file", 
        "file": {
            "yara": [], 
            "sha1": "eed0fc0dfbfa0e0fe797fb41b13fd0a70fdc2dca", 
            "name": "58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
            "type": "PE32 executable (DLL) (GUI) Intel 80386, for MS Windows", 
            "sha256": "58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
            "crc32": "639234D3", 
            "path": "/home/ptrac3/cuckoo-master/storage/binaries/58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
            "ssdeep": "49152:8U3U+ZYmxjpv7x4GFM/+b8dTMNh9Wr73h7NXSWEqNJO5hYTVMCRisKENuIF:8iU2YmxjpDx4Zo8dYNh9q73h7NXYkRiW", 
            "size": 2445655, 
            "sha512": "d5d8e027d1750384de827faacaf6a17385a1430a670e8d92680ec50fd259b19f71f23b3e1bfea9531655ed83918f25c4dcb2925d04392f9517281de4485abfed", 
            "md5": "b357a395f97afb99990a3822a2ea159c"
        }
    }, 
    "debug": {
        "errors": [], 
        "log": "2014-03-08 08:50:52,009 [root] INFO: Starting analyzer from: C:\\xgnrjqhpdh\n2014-03-08 08:50:52,009 [root] INFO: Storing results at: C:\\iaOCQrBcEC\n2014-03-08 08:50:52,009 [root] INFO: Pipe server name: \\\\.\\PIPE\\qvaPRoFAeC\n2014-03-08 08:50:52,009 [root] INFO: No analysis package specified, trying to detect it automagically.\n2014-03-08 08:50:52,009 [root] INFO: Automatically selected analysis package \"dll\"\n2014-08-03 13:19:15,196 [root] INFO: Started auxiliary module Disguise\n2014-08-03 13:19:15,196 [root] INFO: Started auxiliary module Human\n2014-08-03 13:19:15,196 [root] INFO: Started auxiliary module Screenshots\n2014-08-03 13:19:15,196 [lib.api.process] INFO: Successfully executed process from path \"C:\\Windows\\system32\\rundll32.exe\" with arguments \"C:\\Users\\cuckoo\\AppData\\Local\\Temp\\58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d,DllMain\" with pid 3884\n2014-08-03 13:19:15,216 [lib.api.process] INFO: Using QueueUserAPC injection.\n2014-08-03 13:19:15,216 [lib.api.process] INFO: Successfully injected process with pid 3884.\n2014-08-03 13:19:19,572 [lib.api.process] INFO: Successfully resumed process with pid 3884\n2014-08-03 13:19:19,582 [root] INFO: Added new process to list with pid: 3884\n2014-08-03 13:19:22,305 [modules.auxiliary.human] INFO: Found button \"OK\", clicking it\n2014-08-03 13:19:24,282 [root] INFO: Process with pid 3884 has terminated\n2014-08-03 13:19:24,312 [root] INFO: Process list is empty, terminating analysis.\n2014-08-03 13:19:25,313 [root] INFO: Terminating remaining processes before shutdown.\n2014-08-03 13:19:25,313 [root] INFO: Analysis completed.\n"
    }, 
    "strings": [
        "!This program cannot be run in DOS mode.", 
        "`.rdata", 
        "@.data", 
        "@.reloc", 
        "B.text", 
        "9}0YYu", 
        "29}0t\u001fVS", 
        "C WPWW", 
        "S\"f;S&f", 
        "f9B(~ ", 
        "`SVWj0", 
        "It)It\u001fIu", 
        "_[^]YY", 
        "8@@AJf", 
        "+U$+M ", 
        "0HHII;", 
        "0HHII;", 
        "ui9\u001fue", 
        "wEt<=TDBEt.=CLBEt =CSBEt", 
        "=pamct%= tvct", 
        "=mgpft", 
        "w7t1=xmdht&=daeht", 
        "=aehht", 
        "*=pxamt!=perpt", 
        "=aehvt", 
        "=xtmvutj", 
        "9\u001fYYvg", 
        "E0@@9}0", 
        "twHHtgHHt#HHt", 
        "_(t]Ht<Ht", 
        "9P`t|9UXuq", 
        "UDY9uTt", 
        "YYtHhpV", 
        "YYt7hhV", 
        "YYt&h`V", 
        "Yt6WWW", 
        "u>9_8t9", 
        "8_Dt(Sh@", 
        "E<tlSSS", 
        "tS9]4t<", 
        "Yt%SVW", 
        "M,9M,tC", 
        "u;9s8t6", 
        "9.t3S3", 
        "9.t3S3", 
        "~|_^][", 
        "ppt8It", 
        "t|ItIIt+I", 
        "It,IIt-ItI", 
        "Fv!WHII", 
        "tS9>tO", 
        "t+Ht Ht", 
        "tgHtTHt:Ht ", 
        "GHt)8]", 
        " s:9YTt53", 
        "S;Etss", 
        "9^$t)j", 
        "YYt\"h<", 
        "9\u001ftc9]", 
        "uc8G8u^9w(uY", 
        "GWh8w!", 
        "@9N0t;", 
        "WRQPVS", 
        "CShPx!", 
        "9}TvPW", 
        "HtZHtDHt.", 
        "t\u001fCG;~", 
        "Q4;P4tC", 
        "X9FTt/", 
        "^,_^[]", 
        "@ +A y", 
        "@PSSSSSP", 
        "SSSSSS", 
        "t08_(u", 
        "u(8_(u", 
        "9XTu?Sj", 
        "~8 ul8", 
        "tIHt&Ht#HuT", 
        "PVVVVV", 
        "sT9>u+j", 
        "PPPPPP", 
        "HtNHt;HHtBHt~HHtJ", 
        "HtNHt;HHtBHt{HHtJ", 
        "HtNHt;HHtBHt~HHtJ", 
        "tD8_(t?k", 
        "E|9X8u", 
        "t28X&t-", 
        "FLPh`w!", 
        "F@;FDu", 
        "9Epu/P", 
        "ytiKtMKtFKt.Kt", 
        "8^)t|8^(tw9", 
        "ALf97_", 
        "FQRPVWS", 
        "GG@@f;", 
        "F$;F4uu", 
        "un9\u001ftj", 
        "YYuOhhP", 
        "YYuAhp", 
        "YYu3hh", 
        "Ysc@PV", 
        "Ysc@PV", 
        "YsP@PV", 
        "YsO@PV", 
        "Yt=< t", 
        "ut9SXuo", 
        "j(_~4S3", 
        "YYuE+u", 
        "YYu#WV", 
        "t+Ht$Ht!", 
        "t9It&It", 
        "t?It,It", 
        "u&9]ht", 
        "Authu%", 
        "t%;} s ", 
        "IVxZSW", 
        "D=@PSV", 
        "G8\\=?u", 
        "v?8]\u001fu", 
        "Ht!HHt", 
        "t\u001fHHt ", 
        "YYu:hGNIS", 
        "t,=OTTOt%=eurtt", 
        "=fcttt", 
        "=1pytt", 
        "F`;F\\u", 
        "F`;F\\u", 
        "F`;F\\u", 
        "Ht]Ht.H", 
        "ut9K<uo9Khuj9", 
        "YYtGSV", 
        "F4+F03", 
        "t=Ht3Ht)Ht-Ht", 
        "t;Ht5Ht'Ht/Ht", 
        ";t2Nt(Nt", 
        "Yu;hTC", 
        "YYt:hLC", 
        "X_][^Y", 
        "Ht4HHt", 
        "<pt|<s", 
        "t#9^<u", 
        "YYt%;E", 
        "t}9^@ul", 
        "t%VVVV", 
        "t1SSPS", 
        "wPPPhs", 
        "wPPPhs", 
        "wSSShs", 
        "wPPPhs", 
        "wPPPhs", 
        "wSSShs", 
        "rVVVhs", 
        "rVVVhs", 
        "p0QRVP", 
        "u PWh8!", 
        "u PWh8!", 
        "2BB@@f", 
        "2BBAAf", 
        "NBBAAf", 
        "u YYt(", 
        "RPVSVS", 
        "t[Ht5Hu", 
        ";w,YYv", 
        ";w,YYv", 
        ";w,YYv", 
        ";{,YYv", 
        "YYuL9E", 
        "^][_YY", 
        "9M$|7)M", 
        "9E$|;)E", 
        "^&j>Wf", 
        "9}0YYu'", 
        "U,;u8~", 
        "teHtFHt#Hu}", 
        "tLHt4Ht", 
        "tLHt4Ht", 
        "HteHtWH", 
        "G$+G P", 
        "G$+G P", 
        "C$+C P", 
        "S$+S f", 
        ",@_^[]", 
        "SVWt?;", 
        "SVWt?;", 
        "f9xHv/V3", 
        "f9hHv;SVW3", 
        "f9pHv$", 
        "j;}|s{", 
        "f9rBv%", 
        "Ff;rBr", 
        "f9rDv%", 
        "Ff;rDr", 
        "Ff;r>r", 
        "Ff;r@r", 
        "QQSUV3", 
        "w3f9hH", 
        "Hl99u,f9x@u&3", 
        "ph9>u#f9x>u", 
        "w!f9hH", 
        "Ef9x>u", 
        "h>f9x@u", 
        "f9xHv(", 
        "_^][YY", 
        "t?A;L$", 
        "Ht5HHt", 
        "Ff;pHr", 
        "f9~&u*f", 
        ",f9^&u{", 
        "f9^bt[f9^&", 
        "F0SWPV", 
        "0HHII;", 
        "Zt,Ht j", 
        ">FFBIu", 
        "8@@f9u4", 
        "D2,f9E", 
        "F$+F S", 
        "G 9F |", 
        "G 9F ~", 
        "G$9F |", 
        "G$9F ~", 
        "G 9F$|", 
        "G 9F$~", 
        "G$9F$|", 
        "G$9F$~", 
        "HttHtWH", 
        "YYt%h|R", 
        "F$+F P", 
        "ItEIt+IIuS", 
        "udYYuLf", 
        "Yt%< t!<", 
        "YtBVVV", 
        "t;Ht#Ht", 
        "Yt$WWW", 
        "teHtVH", 
        "YYt9hpZ", 
        "}(9\u001fu4j", 
        "HtKHt5Ht\"Ht", 
        "QQQQQVW", 
        "v/8]\u001fu", 
        "8XDt98]\u001fu4", 
        "F,;F$u", 
        "V(;V u", 
        "9^ uV9]", 
        "8]$u=3", 
        "9} WuPj", 
        "j&_~4S3", 
        "t7Ht)Ht", 
        "]$8]$t:9]", 
        "t09](u+j", 
        "YYu-h\\B", 
        "Ht|HtD", 
        "Ht`HtBHt$", 
        "FVh@w!", 
        "SWh@w!", 
        "SVh@w!", 
        "YY9^Ht,9_Hu", 
        "R$t*9Y", 
        "PPPhp-", 
        "PPPhp-", 
        "PPPhp-", 
        "PPPhp-", 
        "SSSWh|3", 
        "PPPhp-", 
        "PPPhp-", 
        "Yt<SSh", 
        "E0+E`VP", 
        "HtaHt&Ht", 
        "9uHvPV", 
        "9E8s\"j", 
        "E4;EX}U", 
        "sZ;Q(sU", 
        "Q,;P,u", 
        "I4;H4u", 
        "A,;A(s", 
        "s%;Q(s ", 
        "A4;A0r", 
        "uU8^ltE", 
        "F4;F8sF", 
        "F4@;F8s", 
        "uF8Flu", 
        "hdaehW", 
        "YhSOPG", 
        "u88Flu", 
        "SOPGtM", 
        "daehubj6", 
        "YhNKUCj", 
        "YYu+j.V", 
        "_^][YY", 
        "]w,<%t(<(t$<)t <<t", 
        "CShpy!", 
        "tRWWWj", 
        "YYtE|\u001f", 
        "SWPhxx!", 
        "ELPh|G", 
        "WShpw!", 
        "PWShpw!", 
        "ELPhhG", 
        "WShxw!", 
        "k9]0t<", 
        "PWShxw!", 
        "ELPhHG", 
        "ELPh,G", 
        "'9FTu\"", 
        "E(Ph<J", 
        "E4;E(r", 
        "E4;E(r", 
        "E Ph`w!", 
        "8] t23", 
        "FL;GLu", 
        "FP;GPu", 
        "FT;GTu", 
        "FX;GXu", 
        "9y(v,S", 
        "x;N ~M", 
        "9;uEh\\B", 
        "HHt Ht", 
        "9u@u79uH", 
        "tQ9N,uL", 
        "MP9M8u", 
        "uP9}@t", 
        "HtrHt;Ht", 
        "GWhpy!", 
        "u 9XTu", 
        "HYYtCHt5H", 
        "tFHt/+", 
        "tnHtdHtG", 
        "t7Ht-Ht", 
        "H,91t<", 
        "Y9^,t,", 
        "C,90~L", 
        "tUHtK-", 
        "t4Ht*Ht", 
        "M )MP)M,", 
        "f;D9`v5", 
        "HHt`HtO", 
        "HSt;Ht\u001fH", 
        "4Af;tA", 
        ":FF;t$", 
        "upt!Ht", 
        "9/t<SV", 
        "9/t8SV", 
        "u8_>tE", 
        "j(_~4S3", 
        "=tpxet9=87pjt*=dartt", 
        "=trevt", 
        "0J@@f;", 
        "8A&t/;", 
        "_9~TuM", 
        "8O%t48O&t/;", 
        "_9~TuM", 
        "u@8^Wu;", 
        "8^%t<8^&t2;", 
        ";~Hu\u001f8^St", 
        "t#f9GxP", 
        "~#f9^xS", 
        "9\u001ftMjD", 
        "9\u001f}(9]", 
        "_9~TuM", 
        "Yt3Ht-Ht-", 
        "F$9X(t", 
        "@$9X(t", 
        "8Z7t\"9]", 
        "8Z7t=8]", 
        "u)< w%<\\u", 
        "u\u001f8]#t", 
        "YYuQhh*", 
        "Ytv8^u", 
        "< |$<z", 
        "G$SSSP", 
        "L@;E8|", 
        "B8_7t(9U8u#", 
        "E09X,t", 
        "t(8_7u#", 
        "G$8X8u", 
        "G 9PTu", 
        "18_;t8", 
        "F9]<u,8_7t", 
        "F$9X(u}", 
        "uV8FutQS", 
        "u\"8^7u", 
        "uC;C\\t", 
        "t&9HTud", 
        "YVVVPW", 
        "9s0tYV", 
        "CT;CXu", 
        "CPY9sP", 
        "CPY9sPu:W", 
        "H(91t\u001fVVQ", 
        "(90t*VVP", 
        "tE9X(t<", 
        "QPQQPWW", 
        "t,Ht\"Ht", 
        "Yt8SSh", 
        "Yt9SSh", 
        "Yt8SSh", 
        "PSSSSSV", 
        "PSSSSj", 
        "Yt8SSh", 
        "HHt29}", 
        "E<Ph`w!", 
        "8^QtL8^Pt'S", 
        "t89\u001ft4", 
        "j(_~4S3", 
        "9^lYu0", 
        "9ATuC8", 
        "9.t.S3", 
        "9.t;S3", 
        "SSSSWP", 
        "FPt'9F4t", 
        ";ELt$S", 
        "E(PSVS", 
        "PPPPPPhH", 
        "Et;Ep|", 
        "Ept@9]T", 
        "E8PSSS", 
        "E4PSSS", 
        "F09N0~", 
        "FXPh`w!", 
        "]P8^Bu)8^Du", 
        "E\\S, S", 
        "MhSSh y!", 
        "MhSSSS", 
        "tDHt,Ht", 
        "S@9A<VW", 
        "F<;F8r", 
        "YG;~tr", 
        "C@fylg", 
        "Qhcmap", 
        "Ht\\Ht0H", 
        "Phvmtx", 
        "Qhvmtx", 
        "Phvmtx", 
        "Qhname", 
        "Phname", 
        "tYSjLV", 
        "t2Ht\"H", 
        "YYu%h|", 
        "WtoJtT", 
        "JJt/JuT", 
        "YY9n`WtK", 
        "9s4u\u001fj ", 
        "9s4u\u001fj ", 
        "YYu-h|", 
        "YYuJhP", 
        "H(hglyf", 
        "=glyfu", 
        ">glyft6", 
        "9s,t%j", 
        "u*9s,twj", 
        "glyft]", 
        "prepu=", 
        "~DWhheadP", 
        "YYu8hP", 
        "YYuyhl", 
        "YYudhP", 
        "YYuOh\\", 
        "YYu%h0", 
        "YYuJhh", 
        "YYu5h4", 
        "YYurhhP", 
        "YYu@hhP", 
        "Vhglyf", 
        "YYu 8_$t", 
        "YYu(9]", 
        "t#9^,u", 
        ":glyfu\\f", 
        "N(hglyf", 
        "XHhvmtx", 
        "QQSWjL", 
        "9~4u\u001fj ", 
        "9{4u\u001fj ", 
        "3PVhglyf", 
        "K,hglyf", 
        "hglyfPW", 
        "hlocaPW", 
        "hheadPW", 
        "PhheadW", 
        "C,YY~4", 
        ";headu,", 
        "prepue", 
        "QQSWjL", 
        "YYt=Ht2Ht'Ht Ht", 
        "QQSVWj", 
        "r-f;AXw'f", 
        "Ht\u001fHu8", 
        "QQSVWh", 
        "YC;_XY", 
        "YYt Ht", 
        "P0Y_^[", 
        "@t_^[]", 
        "!M|!Ml", 
        "AXSVW3", 
        "~p9~lt", 
        "^L_^[]", 
        "tPHt9Ht\"H", 
        "+t`IIt$It", 
        "P ;W u+Q", 
        "Htf9Xtt)j", 
        "9x8te3", 
        "F`;F\\u", 
        "F`;F\\u", 
        "YYuS!G", 
        "F8C;^$|", 
        "f9^8v7", 
        "f9^8Yv", 
        "?daehu", 
        "QQSVWh", 
        "teIt$Iu", 
        "Ht]Ht.H", 
        "P0Y_^[", 
        "HHt[HHuHh\\", 
        "tGIt,It", 
        "YY_^[]", 
        "Yt>Sh8", 
        ";F YY|", 
        "YYt%9}", 
        "Y@Y@_^[", 
        "@,QPQQ", 
        "8\\Vu%f", 
        "t/Ht!HHt", 
        "YYu\"hX", 
        "Yt)SSh", 
        "Yt,WWh", 
        "Yt,VVh", 
        "}P;}XuL", 
        "9C,u/f", 
        "F$;G$u", 
        "<)~A<\\tI", 
        "Yt<SSh", 
        "Yt*SSh", 
        "^[t*9E", 
        "YYtkhhL", 
        "@SPhxy!", 
        "]w,<%t(<(t$<)t <<t", 
        "8^6tS8^7tN3", 
        "SWhHw!", 
        "SWhPw!", 
        "FVhpw!", 
        "FVhxw!", 
        "CShHx!", 
        "HtEHtI", 
        "HtEHtI", 
        "t$WhmI", 
        "YYtiVjP", 
        "ETPVVh", 
        "tQHtF-", 
        "<SBAA;", 
        "4WBAA;", 
        "<SBAA;", 
        "ty9]xtd}", 
        "t^WShs", 
        "\\rhNII", 
        "JGGf;M", 
        "uBIt4It$It", 
        "kItTIt8It", 
        "S8tDIt\"IuX", 
        "}]HxZW", 
        "t-Ht\"Ht", 
        "t3Ht&Ht", 
        "SUVW~:", 
        "IItFIIt%", 
        "u-SSSWW", 
        "GGFF;u", 
        "3CC@@;", 
        "v9CCGG", 
        "AAf;D$", 
        "@@FF;7r", 
        "0@@AA;", 
        "9AAFF;0r", 
        "4WB@@I", 
        "tkHtQHtFHt0Ht&Ht", 
        "HtGHt=Ht'Ht", 
        "C9Mh|8;", 
        "HtSHtIHt3Ht", 
        "~/9up~*", 
        "EtHHtWHtDHt1Ht", 
        "Yuwj}X", 
        "?Yu5j5X", 
        "{GII;}", 
        "<Gf9\u001fYYt#", 
        "BBFFf;", 
        "FFKKf;", 
        "u GGAA;M", 
        "u$GGAA;M", 
        " SVW|s3", 
        "YtJWSV", 
        "t$TWj@", 
        "D$ RPQ", 
        "tcf&;C", 
        "bad allocation", 
        "BIBStringInterface", 
        "BIBErrorInterface", 
        "BIBMemoryInterface", 
        "BIBSharedBuffInterface", 
        "BIBCacheInterface", 
        "BIBContainerInterface", 
        "couldn't get signature", 
        "invalid container", 
        "BIBCacheRemoveIDsProc", 
        "RemoveIDs", 
        "BIBCacheRemoveIDProc", 
        "RemoveID", 
        "BIBCacheSearchForIDProc", 
        "SearchForID", 
        "BIBCacheDeleteCacheSetProc", 
        "DeleteCacheSet", 
        "BIBCacheAddRefCacheSetProc", 
        "AddRefCacheSet", 
        "BIBCacheNewCacheSetProc", 
        "NewCacheSet", 
        "RemoveClientPurge", 
        "AddClientPurge", 
        "BIBCachePurgeAllStaticCachesProc", 
        "PurgeAllStaticCaches", 
        "BIBCacheDeleteCachePurgeProc", 
        "DeleteCachePurge", 
        "BIBCachePurgeNextBlockProc", 
        "PurgeNextBlock", 
        "BIBCacheNewCachePurgeProc", 
        "NewCachePurge", 
        "BIBCurrentCacheSizeProc", 
        "CurrentCacheSize", 
        "BIBCacheGetCacheTimeProc", 
        "GetCacheTime", 
        "BIBCacheMarkPurgeProc", 
        "MarkPurge", 
        "BIBCacheMarkNoPurgeProcV2", 
        "MarkNoPurge", 
        "BIBCacheReturnCostProc", 
        "ReturnCost", 
        "BIBCacheUpdateCostProc", 
        "UpdateCost", 
        "BIBCacheAddProc", 
        "BIBCacheAttachProcV2", 
        "Attach", 
        "BIBCacheReleaseProc", 
        "Release", 
        "BIBCacheAddRefProc", 
        "AddRef", 
        "BIBCacheNewCacheIDProc", 
        "NewCacheID", 
        "BIBCacheAddRemoveClientPurgeProcV2", 
        "BIBGetErrorInfoProc", 
        "GetErrorInfo", 
        "BIBErrorGetIDProc", 
        "BIBErrorGetComponentProc", 
        "GetComponent", 
        "BIBErrorGetMessageProc", 
        "GetErrorMessage", 
        "BIBErrorReleaseProc", 
        "BIBErrorAddRefProcV2", 
        "BIBGetCoreErrorProc", 
        "GetCoreError", 
        "BIBNewErrorProc", 
        "NewError", 
        "Missing Interface", 
        "BIBMemGetBlockSizeProc", 
        "GetBlockSize", 
        "BIBMemFreeProc", 
        "BIBMemReallocProc", 
        "Realloc", 
        "BIBMemAllocProc", 
        "BIBGetOffsetToPrimaryInstProc", 
        "GetOffsetToPrimaryInstance", 
        "BIBGetRefCountAddrProc", 
        "DebugGetRefCountAddr", 
        "BIBGetSignatureProc", 
        "GetSignature", 
        "BIBNGetInstanceProc", 
        "NGetInstance", 
        "BIBGetInstanceProc", 
        "GetInstance", 
        "BIBGetParentMethodV2Proc", 
        "GetParentMethod", 
        "BIBGetMethodV3Proc", 
        "GetMethod", 
        "BIBRegisterInstanceV2Proc", 
        "RegisterInstance", 
        "BIBRegisterInterfaceV2Proc", 
        "RegisterInterface", 
        "BIBDeleteUnownedContainerProc", 
        "DeleteUnownedContainer", 
        "BIBDecrementWithoutDeleteProc", 
        "DecrementWithoutDelete", 
        "BIBReleaseContainerProc", 
        "BIBAddRefContainerV2Proc", 
        "BIBCloneContainerProc", 
        "CloneContainer", 
        "BIBNewContainerV2Proc", 
        "NewContainer", 
        "BIBNewFullContainerV5Proc", 
        "NewFullContainer", 
        "BIBSharedBuffGetSizeProc", 
        "GetSize", 
        "BIBSharedBuffGetBufferProc", 
        "GetBuffer", 
        "BIBSharedBuffReleaseProc", 
        "BIBSharedBuffAddRefProc", 
        "BIBSharedBuffDelUnownedProc", 
        "DeleteUnowned", 
        "BIBSharedBuffNewBufferV2Proc", 
        "NewBuffer", 
        "BIBNewClientPositionableStreamProc", 
        "NewClientPositionableStream", 
        "BIBNewClientRewindableStreamProc", 
        "NewClientRewindableStream", 
        "BIBNewClientSimpleStreamProc", 
        "NewClientSimpleStream", 
        "BIBNewPositionableFileStreamProc", 
        "NewPositionableFileStream", 
        "BIBNewPositionableBufferStreamProc", 
        "NewPositionableBufferStream", 
        "BIBNewPositionableMemoryStreamProc", 
        "NewPositionableMemoryStream", 
        "BIBStreamFactoryInterface", 
        "BIBFilterResetChainStateProc", 
        "ResetChainState", 
        "BIBFilterGetChainStateV2Proc", 
        "GetChainState", 
        "BIBFilterJPEGSetCompressionParametersProc", 
        "SetCompressionParameters", 
        "BIBFilterJPEGSetImageParametersProc", 
        "SetImageParameters", 
        "BIBFilterPeekTargetProc", 
        "PeekTarget", 
        "BIBFilterSetDataSinkV2Proc", 
        "SetDataSink", 
        "BIBFilterGetPostScriptFilterProc", 
        "GetPostScriptFilter", 
        "BIBFilterCloseProc", 
        "BIBFilterIsFilterProc", 
        "IsFilter", 
        "BIBFilterWriteV2Proc", 
        "BIBFilterReleaseProc", 
        "BIBFilterAddRefV2Proc", 
        "BIBFilterNewFilterJPEGV2Proc", 
        "NewFilterJPEG", 
        "BIBFilterNewClientFilterV2Proc", 
        "NewClientFilter", 
        "BIBFilterNewIdentityFilterV2Proc", 
        "NewIdentityFilter", 
        "BIBFilterNewClientDataSinkV2Proc", 
        "NewClientDataSink", 
        "BIBFilterNewNullDataSinkV2Proc", 
        "NewNullDataSink", 
        "BIBFilterInterface", 
        "BIBProgressUpdateProc", 
        "Update", 
        "BIBProgressReleaseProc", 
        "BIBProgressAddRefProc", 
        "BIBProgressNewClientProgressProc", 
        "NewClientProgress", 
        "BIBProgressNewNullProgressProc", 
        "NewNullProgress", 
        "BIBProgressInterface", 
        "BIBAddRefStringAtomProc", 
        "BIBGetCStringProc", 
        "GetCString", 
        "BIBDeleteStringAtomProc", 
        "DeleteStringAtom", 
        "BIBNewStringAtomProc", 
        "NewStringAtom", 
        "BIBDataStoreGetBlockProcV2", 
        "GetBlock", 
        "BIBSizedDataStoreGetSizeProc", 
        "BIBDataBlockStreamRewindProc", 
        "Rewind", 
        "BIBDataBlockStreamGetNextBlockProc", 
        "GetNextBlock", 
        "BIBSimpleStreamWriteProc", 
        "BIBSimpleStreamReadProc", 
        "BIBRewindableStreamRewindProc", 
        "BIBRewindableStreamCreateIndependentlyRewindableStreamProc", 
        "CreateIndependentlyRewindableStream", 
        "BIBPositionableStreamSeekProc", 
        "BIBPositionableStreamMarkProc", 
        "BIBPositionableStreamCreateIndependentlyPositionableStreamProc", 
        "CreateIndependentlyPositionableStream", 
        "couldn't create cacheID", 
        "couldn't construct CBIBProgress", 
        "BIBIsMultiThreaded", 
        "BIBGetUnregisterCountAddr", 
        "BIBUnregisterInterface", 
        "BIBReportError", 
        "BIBRegisterProcAddress", 
        "AGMNewColorProfileProfileSequenceTransformProc", 
        "NewProfileSequenceTransform", 
        "AGMNewColorProfileProfileSequenceProcV2", 
        "NewProfileSequence", 
        "AGMNewColorProfileICCProfileProcV7", 
        "NewICCProfileV2", 
        "AGMNewColorProfileICCProfileFromDataProcV7", 
        "NewICCProfileFromData", 
        "AGMNewColorProfileLabProcV7", 
        "NewLabProfile", 
        "AGMNewColorProfileCMYKProcV7", 
        "NewCMYKProfile", 
        "AGMNewColorProfileGrayProcV7", 
        "NewGrayProfile", 
        "AGMNewColorProfileRGBProcV7", 
        "NewRGBProfile", 
        "AGMNewColorProfileInterface", 
        "AGMColorProfileGetTransformBundle", 
        "GetTransformBundle", 
        "AGMColorProfileGetNumTransformBundles", 
        "GetNumTransformBundles", 
        "AGMColorProfileAppendTransformBundle", 
        "AppendTransformBundle", 
        "AGMColorProfileGetUniqueID", 
        "GetUniqueID", 
        "AGMColorProfileGetICCProfileProcV2", 
        "GetICCProfile", 
        "AGMColorProfileGetFirstProfileNumCompsProc", 
        "GetFirstProfileNumComps", 
        "AGMColorProfileGetFirstProfileFamilyProc", 
        "GetFirstProfileFamily", 
        "AGMColorProfileGetLastProfileProc", 
        "GetLastProfile", 
        "AGMColorProfileGetNextProfileProc", 
        "GetNextProfile", 
        "AGMColorProfileGetSequenceLengthProc", 
        "GetSequenceLength", 
        "AGMColorProfileGetBPCProc", 
        "GetBPC", 
        "AGMColorProfileGetACERangeProc", 
        "GetACERange", 
        "AGMColorProfileGetICCProfileDataProc", 
        "GetICCProfileData", 
        "AGMColorProfileGetCalDataProc", 
        "GetCalData", 
        "AGMColorProfileGetIntentProcV2", 
        "GetIntent", 
        "AGMColorProfileGetNumComponentsProc", 
        "GetNumComponents", 
        "AGMColorProfileGetFamilyProc", 
        "GetColorSpaceFamily", 
        "AGMColorProfileInterface", 
        "AGMNewColorSpaceIndexedProcV5", 
        "NewIndexedColorSpace", 
        "AGMNewColorSpaceNChannelProcV2", 
        "NewNChannelColorSpace", 
        "AGMNewColorSpaceDeviceNProcV5", 
        "NewDeviceNColorSpace", 
        "AGMNewColorSpaceSeparation3ProcV4", 
        "NewSeparation3ColorSpace", 
        "AGMNewColorSpaceSeparation2ProcV5", 
        "NewSeparation2ColorSpace", 
        "AGMNewColorSpaceSeparationProcV5", 
        "NewSeparationColorSpace", 
        "AGMNewColorSpaceCalProcV5", 
        "NewCalColorSpace", 
        "AGMNewColorSpaceUcrBgProcV3", 
        "NewUcrBgColorSpace", 
        "AGMNewColorSpaceBaseProcV5", 
        "NewBaseColorSpace", 
        "AGMNewColorSpaceInterface", 
        "AGMColorSpaceGetSubSpaceChannelsProc", 
        "GetSubSpaceChannels", 
        "AGMColorSpaceFillColorTabProc", 
        "FillColorTab", 
        "AGMColorSpaceColorSpaceEqualProc", 
        "ColorSpaceEqual", 
        "AGMColorSpaceGetUniqueID", 
        "AGMColorSpaceWillBehaveAsNChannelProc", 
        "WillBehaveAsNChannel", 
        "AGMColorSpaceHasFullSetOfProcessComponentsProc", 
        "HasFullSetOfProcessComponents", 
        "AGMColorSpaceNumSpotComponentsProc", 
        "NumSpotComponents", 
        "AGMColorSpaceNumProcessComponentsProc", 
        "NumProcessComponents", 
        "AGMColorSpaceGetNChannelDefProc", 
        "GetNChannelDef", 
        "AGMColorSpaceGetNChannelCsListProc", 
        "GetNChannelCsList", 
        "AGMColorSpaceGetCsListProc", 
        "GetCsList", 
        "AGMColorSpaceGetDeviceNColorantProc", 
        "GetDeviceNColorant", 
        "AGMColorSpaceGetTintTransformProcV2", 
        "GetTintTransform", 
        "AGMColorSpaceGetSeparationIsSpotColorProc", 
        "GetSeparationIsSpotColor", 
        "AGMColorSpaceGetInkSolidityProc", 
        "GetInkSolidity", 
        "AGMColorSpaceGetAltColorsProc", 
        "GetAltColors", 
        "AGMColorSpaceGetIndexedEncodingProc", 
        "GetIndexedEncoding", 
        "AGMColorSpaceGetIndexedNumCompsProcV2", 
        "GetIndexedNumComps", 
        "AGMColorSpaceGetIndexedNumEntriesProcV2", 
        "GetIndexedNumEntries", 
        "AGMColorSpaceGetIndexedTableProc", 
        "GetIndexedTable", 
        "AGMColorSpaceGetNoSameFamilyConversionProc", 
        "GetNoSameFamilyConversion", 
        "AGMColorSpaceGetDontSwapProfileProc", 
        "GetDontSwapProfile", 
        "AGMColorSpaceConvertLocColors", 
        "ConvertLocColors", 
        "AGMColorSpaceConvertColorsV4", 
        "ConvertColors", 
        "AGMColorSpaceConvertOneColorV3", 
        "ConvertOneColor", 
        "AGMColorSpaceGetOPMProcV2", 
        "GetOPM", 
        "AGMColorSpaceGetBGProcV2", 
        "AGMColorSpaceGetUCRProcV2", 
        "GetUCR", 
        "AGMColorSpaceGetBaseCsProcV2", 
        "GetBaseCs", 
        "AGMColorSpaceGetRangeProc", 
        "GetRange", 
        "AGMColorSpaceGetProfileProcV2", 
        "GetProfile", 
        "AGMColorSpaceGetBaseFamilyProc", 
        "GetBaseFamily", 
        "AGMColorSpaceCloneAlphaProc", 
        "CloneAlpha", 
        "AGMColorSpaceHasAlphaProc", 
        "HasAlpha", 
        "AGMColorSpaceNumColorComponentsProc", 
        "NumColorComponents", 
        "AGMColorSpaceNumComponentsProc", 
        "NumComponents", 
        "AGMColorSpaceGetFamilyProc", 
        "GetFamily", 
        "AGMColorSpaceInterface", 
        "AGMNewColorSpaceListProcV2", 
        "NewColorSpaceList", 
        "AGMNewColorSpaceListInterface", 
        "AGMColorSpaceListGetNthColorSpaceProc", 
        "GetNthColorSpace", 
        "AGMColorSpaceListGetNumColorSpacesProc", 
        "GetNumColorSpaces", 
        "AGMColorSpaceListAddColorSpaceProcV2", 
        "AddColorSpace", 
        "AGMColorSpaceListInterface", 
        "AGMNewBitArrayMeshDataSourceProcV3", 
        "NewBitArrayMeshDataSource", 
        "AGMNewFloatArrayMeshDataSourceProcV2", 
        "NewFloatArrayMeshDataSource", 
        "AGMNewFloatStreamMeshDataSourceProcV3", 
        "NewFloatStreamMeshDataSource", 
        "AGMNewStreamMeshDataSourceProcV3", 
        "NewStreamMeshDataSource", 
        "AGMNewSampleFunctionDataSourceProcV3", 
        "NewSampleFunctionDataSource", 
        "AGMNewDataSourceInterface", 
        "AGMDataSourceGetBitArrayMeshDataSourceParametersProc", 
        "GetBitArrayMeshDataSourceParameters", 
        "AGMDataSourceGetFloatArrayMeshDataSourceParametersProc", 
        "GetFloatArrayMeshDataSourceParameters", 
        "AGMDataSourceGetFloatStreamMeshDataSourceParametersProc", 
        "GetFloatStreamMeshDataSourceParameters", 
        "AGMDataSourceGetStreamMeshDataSourceParametersProc", 
        "GetStreamMeshDataSourceParameters", 
        "AGMDataSourceGetSampleFunctionDataSourceParametersProc", 
        "GetSampleFunctionDataSourceParameters", 
        "AGMDataSourceGetDataSourceTypeProc", 
        "GetDataSourceType", 
        "AGMDataSourceDataSourceEqualProc", 
        "DataSourceEqual", 
        "AGMDataSourceInterface", 
        "AGMNewDevicePathNewPathPathV2", 
        "NewPathPath", 
        "AGMNewDevicePathNewPathPointsV2", 
        "NewPathPoints", 
        "AGMNewDevicePathInterface", 
        "AGMDevicePathInPathProc", 
        "InPath", 
        "AGMDevicePathXorProc", 
        "AGMDevicePathIntersectProc", 
        "Intersect", 
        "AGMDevicePathUnionProc", 
        "AGMDevicePathTranslateProc", 
        "Translate", 
        "AGMDevicePathGetAllocSizeProc", 
        "GetAllocSize", 
        "AGMDevicePathGetBoundingBoxProc", 
        "GetBoundingBox", 
        "AGMDevicePathInterface", 
        "AGMDisplayListPlayDisplayListProc", 
        "PlayDisplayList", 
        "AGMDisplayListInterface", 
        "AGMDisplayListPortGetOptionsProc", 
        "GetOptions", 
        "AGMDisplayListPortAddCommentProc", 
        "AddComment", 
        "AGMDisplayListPortPlayDisplayListProcV3", 
        "AGMDisplayListPortGetDisplayListProc", 
        "GetDisplayList", 
        "AGMDisplayListPortIsDisplayListPortProc", 
        "IsDisplayListPort", 
        "AGMDisplayListPortNewPortProcV7", 
        "NewPort", 
        "AGMDisplayListPortInterface", 
        "AGMFlatteningPortGetSettingsProc", 
        "GetSettings", 
        "AGMFlatteningPortDefineSpotColorPlateProc", 
        "DefineSpotColorPlate", 
        "AGMFlatteningPortShowPageBProcV2", 
        "ShowPageB", 
        "AGMFlatteningPortIsFlatteningPortProc", 
        "IsFlatteningPort", 
        "AGMFlatteningPortGetCompositeColorSpaceProc", 
        "GetCompositeColorSpace", 
        "AGMFlatteningPortNewPortProc", 
        "NewFlatPort", 
        "AGMFlatteningPortInterface", 
        "AGMFlatteningPortManagerGetSettingsProc", 
        "AGMFlatteningPortManagerGetFlatteningPortProc", 
        "GetFlatteningPortForCurrentTile", 
        "AGMFlatteningPortManagerGetNumberOfTilesProc", 
        "GetNumberOfTiles", 
        "AGMFlatteningPortManagerGetCurrentTileProc", 
        "GetCurrentTile", 
        "AGMFlatteningPortManagerNextTileProc", 
        "NextTile", 
        "AGMFlatteningPortManagerIsComplexityRunProc", 
        "IsComplexityRun", 
        "AGMFlatteningPortManagerNewManagerProc", 
        "NewManager", 
        "AGMFlatteningPortManagerInterface", 
        "AGMFlatSettingsGetMinStrokePathProc", 
        "GetMinimumStrokePath", 
        "AGMFlatSettingsGetAdaptiveThresholdProc", 
        "GetAdaptiveThreshold", 
        "AGMFlatSettingsGetFlattenerEventsHandlerProcV2", 
        "GetFlattenerEventsHandler", 
        "AGMFlatSettingsGetMaxImageSizeProc", 
        "GetMaxImageSize", 
        "AGMFlatSettingsGetPlanarMapOptionsProc", 
        "GetPlanarMapOptions", 
        "AGMFlatSettingsGetTextOptionsProc", 
        "GetTextOptions", 
        "AGMFlatSettingsGetFlatteningLevelProc", 
        "GetFlatteningLevel", 
        "AGMFlatSettingsGetUseComplexRegionsProc", 
        "GetUseComplexRegions", 
        "AGMFlatSettingsSetMinStrokePathProc", 
        "SetMinimumStrokePath", 
        "AGMFlatSettingsSetAdaptiveThresholdProc", 
        "SetAdaptiveThreshold", 
        "AGMFlatSettingsSetFlattenerEventsHandler20Proc", 
        "SetFlattenerEventsHandler20", 
        "AGMFlatSettingsSetMaxImageSizeProc", 
        "SetMaxImageSize", 
        "AGMFlatSettingsSetPlanarMapOptionsProc", 
        "SetPlanarMapOptions", 
        "AGMFlatSettingsSetTextOptionsProc", 
        "SetTextOptions", 
        "AGMFlatSettingsSetFlatteningLevelProc", 
        "SetFlatteningLevel", 
        "AGMFlatSettingsSetUseComplexRegionsProc", 
        "SetUseComplexRegions", 
        "AGMFlatSettingsNewSettingsProc", 
        "NewSettings", 
        "AGMFlatSettingsInterface", 
        "AGMNewPCFunctionProcV3", 
        "NewPCFunction", 
        "AGMNewStitchFunctionProcV3", 
        "NewStitchFunction", 
        "AGMNewInterpFunctionProcV3", 
        "NewInterpFunction", 
        "AGMNewSampledFunctionProcV3", 
        "NewSampledFunction", 
        "AGMNewFunctionInterface", 
        "AGMFunctionApplyFunctionProc", 
        "ApplyFunction", 
        "AGMFunctionFunctionEqualProc", 
        "FunctionEqual", 
        "AGMFunctionGetPCFunctionDataProc", 
        "GetPCFunctionData", 
        "AGMFunctionGetStitchFunctionDataProc", 
        "GetStitchFunctionData", 
        "AGMFunctionGetInterpFunctionDataProc", 
        "GetInterpFunctionData", 
        "AGMFunctionGetSampledFunctionDataProc", 
        "GetSampledFunctionData", 
        "AGMFunctionGetRangeProc", 
        "AGMFunctionGetDomainProc", 
        "GetDomain", 
        "AGMFunctionGetDimOutProc", 
        "GetDimOut", 
        "AGMFunctionGetDimInProc", 
        "GetDimIn", 
        "AGMFunctionGetTypeProc", 
        "GetType", 
        "AGMFunctionInterface", 
        "AGMNewFunctionListProcV3", 
        "NewFunctionList", 
        "AGMNewFunctionListInterface", 
        "AGMFunctionListGetNthFunctionProcV2", 
        "GetNthFunction", 
        "AGMFunctionListGetNumFunctionsProc", 
        "GetNumFunctions", 
        "AGMFunctionListAddFunctionProcV2", 
        "AddFunction", 
        "AGMFunctionListInterface", 
        "AGMNewHalftoneType16ProcV2", 
        "NewHalftoneType16", 
        "AGMNewHalftoneType10ProcV2", 
        "NewHalftoneType10", 
        "AGMNewHalftoneType6ProcV2", 
        "NewHalftoneType6", 
        "AGMNewHalftoneType5ProcV2", 
        "NewHalftoneType5", 
        "AGMNewHalftoneType1ProcV2", 
        "NewHalftoneType1", 
        "AGMNewHalftoneInterface", 
        "AGMHalftoneGetParametersType16Proc", 
        "GetParametersType16", 
        "AGMHalftoneGetParametersType10Proc", 
        "GetParametersType10", 
        "AGMHalftoneGetParametersType6Proc", 
        "GetParametersType6", 
        "AGMHalftoneGetParametersType5Proc", 
        "GetParametersType5", 
        "AGMHalftoneGetParametersType1Proc", 
        "GetParametersType1", 
        "AGMHalftoneGetUniqueIDProc", 
        "AGMHalftoneGetTypeProc", 
        "AGMHalftoneInterface", 
        "AGMNewHalftoneListProcV2", 
        "NewHalftoneList", 
        "AGMNewHalftoneListInterface", 
        "AGMHalftoneListGetNthColorantProc", 
        "GetNthColorant", 
        "AGMHalftoneListGetNthHalftoneProc", 
        "GetNthHalftone", 
        "AGMHalftoneListGetNumHalftonesProc", 
        "GetNumHalftones", 
        "AGMHalftoneListAddHalftoneProcV2", 
        "AddHalftone", 
        "AGMHalftoneListInterface", 
        "AGMNewGStatePortProc", 
        "AGMNewGStatePortInterface", 
        "AGMGStatePortAddCommentProc", 
        "AGMGStatePortPSPassThroughProcV2", 
        "PSPassThrough", 
        "AGMGStatePortGetAlphaServerProcV3", 
        "GetAlphaServer", 
        "AGMGStatePortGetColorServerProcV3", 
        "GetColorServer", 
        "AGMGStatePortSetMatrixProc", 
        "SetMatrix", 
        "AGMGStatePortIteratePathSegsProc", 
        "IteratePathSegs", 
        "AGMGStatePortSimplifyPathProc", 
        "SimplifyPath", 
        "AGMGStatePortStrokePathProc", 
        "StrokePath", 
        "AGMGStatePortGetOverPrintProc", 
        "GetOverPrint", 
        "AGMGStatePortGetBlendingModeProc", 
        "GetBlendingMode", 
        "AGMGStatePortGetAlphaProc", 
        "GetAlpha", 
        "AGMGStatePortGetTransparencyGroupInfoProc", 
        "GetTransparencyGroupInfo", 
        "AGMGStatePortCurrentGStateLevelProc", 
        "CurrentGStateLevel", 
        "AGMPortGetGStateColorOptionsProc", 
        "GetGStateColorOptions", 
        "AGMPortGetBlackGenerationProc", 
        "GetBlackGeneration", 
        "AGMPortGetUnderColorRemovalProc", 
        "GetUnderColorRemoval", 
        "AGMPortGetOverPrintModeProc", 
        "GetOverPrintMode", 
        "AGMPortGetRenderIntentProc", 
        "GetRenderIntent", 
        "AGMGStatePortGetStrokeParamsProc", 
        "GetStrokeParams", 
        "AGMGStatePortGetBRVMatrixProc", 
        "GetBRVMatrix", 
        "AGMGStatePortGetMatrixProc", 
        "GetMatrix", 
        "AGMGStatePortIsGStatePortProc", 
        "IsGStatePort", 
        "AGMNewGStateToGraphixPortProc", 
        "AGMNewGStateToGraphixPortInterface", 
        "AGMNewCompositorBoundsProcV3", 
        "NewBounds", 
        "AGMNewCompositorWindowProcV3", 
        "NewWindow", 
        "AGMNewCompositorCheckGraphicsDriverInfo", 
        "CheckGraphicsDriverInfo", 
        "AGMNewCompositorCanUseGPUV2", 
        "CanUseGPU", 
        "AGMNewCompositorCheckGPUCompatibility", 
        "CheckGPUCompatibility", 
        "AGMNewCompositorInterface", 
        "AGMCompositorEndGDICompositingProc", 
        "EndGDICompositing", 
        "AGMCompositorStartGDICompositingProc", 
        "StartGDICompositing", 
        "AGMCompositorGetCompositorImageProcV2", 
        "GetCompositorImage", 
        "AGMCompositorCompositeLayerPort2Proc", 
        "CompositeLayerPort2", 
        "AGMCompositorCompositeLayerPortProcV2", 
        "CompositeLayerPort", 
        "AGMCompositorCompositeLayer2Proc", 
        "CompositeLayer2", 
        "AGMCompositorCompositeLayerProcV3", 
        "CompositeLayer", 
        "AGMCompositorGetLayerPortProcV2", 
        "GetLayerPort", 
        "AGMCompositorEndAGMCompositingProc", 
        "EndAGMCompositing", 
        "AGMCompositorStartAGMCompositingProcV2", 
        "StartAGMCompositing", 
        "AGMCompositorResizeWindowProc", 
        "ResizeWindow", 
        "AGMCompositorSetClipAreaProc", 
        "SetClipArea", 
        "AGMCompositorGetChangedAreaProc", 
        "GetChangedArea", 
        "AGMCompositorEndCompositingProc", 
        "EndCompositing", 
        "AGMCompositorStartCompositingProc", 
        "StartCompositing", 
        "AGMCompositorNeedsFullWindowCompositingProc", 
        "NeedsFullWindowCompositing", 
        "AGMCompositorGetBoundsProc", 
        "GetBounds", 
        "AGMCompositorSetBIBErrorProc", 
        "SetBIBError", 
        "AGMCompositorGetBIBErrorProc", 
        "GetBIBError", 
        "AGMCompositorInterface", 
        "AGMGraphixPortSetBIBErrorProc", 
        "AGMGraphixPortGetBIBErrorProc", 
        "AGMGraphixPortGetPortColorSpace", 
        "GetPortColorSpace", 
        "AGMGraphixPortGetLayerProcV2", 
        "GetLayer", 
        "AGMGraphixPortGetLinearizationGammaProc", 
        "GetLinearizationGamma", 
        "AGMGraphixPortSetLinearizationGammaProc", 
        "SetLinearizationGamma", 
        "AGMGraphixPortGetWireFrameModeProc", 
        "GetWireFrameMode", 
        "AGMGraphixPortSetWireFrameInfoProc", 
        "SetWireFrameInfo", 
        "AGMGraphixPortGetGreekSizeProc", 
        "GetGreekSize", 
        "AGMGraphixPortSetGreekInfoProc", 
        "SetGreekInfo", 
        "AGMGraphixPortCullWithDirtyRectsProc", 
        "CullWithDirtyRects", 
        "AGMGraphixPortGetChangedAreaProc", 
        "AGMGraphixPortEraseProc", 
        "AGMGraphixPortGetGroupDeviceBoundsProc", 
        "GetGroupDeviceBounds", 
        "AGMGraphixPortGetDeviceBoundsProc", 
        "GetDeviceBounds", 
        "AGMGraphixPortPortOptionsProc", 
        "PortOptions", 
        "AGMGraphixPortSetDrawingMatrixProc", 
        "SetDrawingMatrix", 
        "AGMGraphixPortEndDrawingProc", 
        "EndDrawing", 
        "AGMGraphixPortStartDrawingAreaProcV2", 
        "StartDrawingArea2", 
        "AGMGraphixPortStartDrawingAreaProc", 
        "StartDrawingArea", 
        "AGMGraphixPortStartDrawingProc", 
        "StartDrawing", 
        "AGMGraphixPortIsMarkingPortProc", 
        "IsMarkingPort", 
        "AGMGraphixPortGetVisibilityProc", 
        "GetVisibility", 
        "AGMGraphixPortSetVisibilityProc", 
        "SetVisibility", 
        "AGMGraphixPortGetColorConvertOptionsProc", 
        "GetColorConvertOptions", 
        "AGMGraphixPortSetColorConvertOptionsProc", 
        "SetColorConvertOptions", 
        "AGMGraphixPortDrawArtworkIteratorProc", 
        "DrawArtworkIterator", 
        "AGMGraphixPortDrawGraphicProc", 
        "DrawGraphic", 
        "AGMGraphixPortEndGroupProc", 
        "EndGroup", 
        "AGMGraphixPortStartGroupProc", 
        "StartGroup", 
        "AGMNewGraphixCapturePortProc", 
        "AGMNewGraphixCapturePortInterface", 
        "AGMNewGraphixRasterPortWndProc", 
        "NewWndPort", 
        "AGMNewGraphixRasterPortProc", 
        "AGMNewGraphixRasterPortInterface", 
        "AGMGraphixRasterPortGetMarkedBoundsProc", 
        "GetMarkedBounds", 
        "AGMGraphixRasterPortIsGraphixRasterPortProc", 
        "IsGraphixRasterPort", 
        "AGMGraphixRasterPortInterface", 
        "AGMNewGraphixToGStatePortProcV2", 
        "AGMNewGraphixToGStatePortInterface", 
        "AGMGraphixToGStatePortIsGraphixToGStatePortProc", 
        "IsGraphixToGStatePort", 
        "AGMGraphixToGStatePortInterface", 
        "AGMNewImageDDBProc", 
        "NewDDB", 
        "AGMNewImageProducerProcV2", 
        "NewImageProducer", 
        "AGMNewImageProcV6", 
        "NewImage", 
        "AGMNewImageAllocProcV5", 
        "NewAlloc", 
        "AGMNewImageInterface", 
        "AGMImageResampleV3", 
        "Resample", 
        "AGMImageInstantiateImageV3", 
        "InstantiateImage", 
        "AGMImageGetExistingCompressionStream", 
        "GetExistingCompressionStream", 
        "AGMImageGetExistingCompressionParams", 
        "GetExistingCompressionParams", 
        "AGMImageGetVirtualImage", 
        "GetVirtualImage", 
        "AGMImageColorizeAlphaGrayImage", 
        "ColorizeAlphaGrayImage", 
        "AGMImageUsesLessThan256Colors", 
        "UsesLessThan256Colors", 
        "AGMImageIsSmoothDistiller", 
        "IsSmoothDistiller", 
        "AGMImageAnalyzeImage", 
        "AnalyzeImage", 
        "AGMImageIsVirtual", 
        "IsVirtual", 
        "AGMImageGetEncoding", 
        "GetEncoding", 
        "AGMImageGetOPI", 
        "GetOPI", 
        "AGMImageGetDecode", 
        "GetDecode", 
        "AGMImageGetBaseColorSpaceV3", 
        "GetBaseColorSpace", 
        "AGMImageGetByteWidth", 
        "GetByteWidth", 
        "AGMImageGetBitsPerPixelV2", 
        "GetBitsPerPixel", 
        "AGMImageGetMatteColor", 
        "GetMatteColor", 
        "AGMImageGetChromaKey", 
        "GetChromaKey", 
        "AGMImageInitBuffer", 
        "InitBuffer", 
        "AGMImageGetBufferSize", 
        "GetBufferSize", 
        "AGMImageGetBounds", 
        "AGMImageGetCPUPixels", 
        "GetCPUPixels", 
        "AGMImageIsLost", 
        "IsLost", 
        "AGMImageIsGPUImage", 
        "IsGPUImage", 
        "AGMImagePeekBaseAddr", 
        "PeekBaseAddr", 
        "AGMImageGetSharedBuffer", 
        "GetSharedBuffer", 
        "AGMImageGetColorSpaceV3", 
        "GetColorSpace", 
        "AGMImageInterface", 
        "AGMNewImageListProcV3", 
        "NewImageList", 
        "AGMNewImageListInterface", 
        "AGMImageListGetNthImageProcV2", 
        "GetNthImage", 
        "AGMImageListGetNumImagesProc", 
        "GetNumImages", 
        "AGMImageListAddImageProcV2", 
        "AddImage", 
        "AGMImageListInterface", 
        "AGMLayerGetChangedAreaProc", 
        "AGMLayerGetAlphaImageProc", 
        "GetAlphaImage", 
        "AGMLayerGetImageListProc", 
        "GetImageList", 
        "AGMLayerGetImageProc", 
        "GetImage", 
        "AGMLayerInterface", 
        "AGMNewChangedArea", 
        "NewChangedArea", 
        "AGMNewChangedAreaInterface", 
        "AGMChangedAreaGetNthDeviceRect", 
        "GetNthDeviceRect", 
        "AGMChangedAreaNumDeviceRects", 
        "NumDeviceRects", 
        "AGMChangedAreaEraseAll", 
        "EraseAll", 
        "AGMChangedAreaAddDeviceRect", 
        "AddDeviceRect", 
        "AGMChangedAreaInterface", 
        "AGMNewVirtualImageTileProcV2", 
        "NewVirtualImageTile", 
        "AGMNewVirtualImageIteratorProc", 
        "NewVirtualImageIterator", 
        "AGMNewVirtualImageProducerProcV2", 
        "NewVirtualImageProducer", 
        "AGMNewVirtualImageInterface", 
        "AGMVirtualImageIteratorContainerGetTileImage", 
        "GetTileImage", 
        "AGMVirtualImageIteratorContainerGetTile", 
        "GetTile", 
        "AGMVirtualImageTileGetByteWidth", 
        "AGMVirtualImageTileGetBounds", 
        "AGMVirtualImageTileGetBuffer", 
        "AGMVirtualImageGetProducerProc", 
        "GetProducer", 
        "AGMMultiPlexPortRemovePortProc", 
        "RemovePort", 
        "AGMMultiPlexPortAppendPortProc", 
        "AppendPort", 
        "AGMMultiPlexPortNewPortV2Proc", 
        "AGMMultiPlexPortNullPortV2Proc", 
        "NullPort", 
        "AGMMultiPlexPortInterface", 
        "AGMNewEPSServer2ProcV2", 
        "NewEPSServer2", 
        "AGMNewEPSServerProcV3", 
        "NewEPSServer", 
        "AGMNewCompositeServer2Proc", 
        "NewCompositeServer2", 
        "AGMNewCompositeServerProcV4", 
        "NewCompositeServer", 
        "AGMNewGradientServerProcV6", 
        "NewGradientServer", 
        "AGMNewImageServerProcV3", 
        "NewImageServer", 
        "AGMNewSoftMaskGroupServerProc", 
        "NewSoftMaskGroupServer", 
        "AGMNewSoftMaskServerProcV3", 
        "NewSoftMaskServer", 
        "AGMNewPatternGroupServerProcV2", 
        "NewPatternGroupServer", 
        "AGMNewPatternServerProcV8", 
        "NewPatternServer", 
        "AGMNewLatticeShadingServerProcV4", 
        "NewLatticeShadingServer", 
        "AGMNewMeshShadingServerProcV4", 
        "NewMeshShadingServer", 
        "AGMNewFunctionShadingServerProcV3", 
        "NewFunctionShadingServer", 
        "AGMNewRadialShadingServerProcV3", 
        "NewRadialShadingServer", 
        "AGMNewAxialShadingServerProcV3", 
        "NewAxialShadingServer", 
        "AGMNewConstantServerProcV3", 
        "NewConstantServer", 
        "AGMNewPaintInterface", 
        "AGMPaintCloneToNewCsProcV4", 
        "CloneToNewCs", 
        "AGMPaintCloneProcV2", 
        "AGMPaintEmitsNonBinaryAlphaProc", 
        "EmitsNonBinaryAlpha", 
        "AGMPaintEmitsNonBinaryColorProc", 
        "EmitsNonBinaryColor", 
        "AGMPaintConvertCompositeToProcessProcV7", 
        "ConvertCompositeToProcess", 
        "AGMPaintGetPaintServerFromCompositeProc", 
        "GetPaintServerFromComposite", 
        "AGMPaintNumCompositePaintServersProc", 
        "NumCompositePaintServers", 
        "AGMPaintGetEPSClientProc", 
        "GetEPSClient", 
        "AGMPaintGetEPSParametersProcV2", 
        "GetEPSParameters", 
        "AGMPaintGetLatticeShadingParametersV3Proc", 
        "GetLatticeShadingParameters", 
        "AGMPaintGetTriangleShadingParametersV3Proc", 
        "GetTriangleShadingParameters", 
        "AGMPaintGetFunctionShadingParametersV2Proc", 
        "GetFunctionShadingParameters", 
        "AGMPaintGetRadialShadingParametersV2Proc", 
        "GetRadialShadingParameters", 
        "AGMPaintGetAxialShadingParametersV2Proc", 
        "GetAxialShadingParameters", 
        "AGMPaintGetPatternParameters2V2Proc", 
        "GetPatternParameters2", 
        "AGMPaintGetPatternParametersV4Proc", 
        "GetPatternParameters", 
        "AGMPaintPatternHasGraphicsProc", 
        "PatternHasGraphics", 
        "AGMPaintGetImageParametersV3Proc", 
        "GetImageParameters", 
        "AGMPaintGetConstantAlphaProc", 
        "GetConstantAlpha", 
        "AGMPaintGetConstantColorValuesProc", 
        "GetConstantColorValues", 
        "AGMPaintGetConstantValuesProc", 
        "GetConstantValues", 
        "AGMPaintGetUniqueIDProc", 
        "AGMPaintEqualProc", 
        "AGMPaintGetBoundingBoxProc", 
        "AGMPaintGetColorSpaceProcV2", 
        "AGMPaintGetFlagsProc", 
        "GetFlags", 
        "AGMPaintGetTypeProc", 
        "AGMPaintInterface", 
        "AGMNewPaintListProc", 
        "NewPaintList", 
        "AGMNewPaintListInterface", 
        "AGMPaintListGetNthPaintProc", 
        "GetNthPaint", 
        "AGMPaintListGetNumPaintsProc", 
        "GetNumPaints", 
        "AGMPaintListAddPaintProc", 
        "AddPaint", 
        "AGMPaintListInterface", 
        "AGMNewDictionaryProc", 
        "NewDictionary", 
        "AGMNewDictionaryInterface", 
        "AGMNewPathNewTextPathV3", 
        "NewTextPath", 
        "AGMNewPathNewPathV3", 
        "NewPath", 
        "AGMNewPathInterface", 
        "AGMPathInPathProc", 
        "AGMPathOptimizeProc", 
        "Optimize", 
        "AGMPathStrokeProc", 
        "Stroke", 
        "AGMPathXorProc", 
        "AGMPathSubtractProc", 
        "Subtract", 
        "AGMPathInvertProc", 
        "Invert", 
        "AGMPathIntersectProc", 
        "AGMPathUnionProc", 
        "AGMPathCompoundProc", 
        "Compound", 
        "AGMPathTransformProc", 
        "Transform", 
        "AGMPathGetBoundingBoxProc", 
        "AGMPathGetPathDataProc", 
        "GetPathData", 
        "AGMPathGetPathBoolOpProc", 
        "GetPathBoolOp", 
        "AGMPathGetPathTextProc", 
        "GetPathText", 
        "AGMPathGetPathPointsProc", 
        "GetPathPoints", 
        "AGMPathGetPathTypeProc", 
        "GetPathType", 
        "AGMPathInterface", 
        "AGMSharedBezierPathGetStateProc", 
        "GetState", 
        "AGMSharedBezierPathResetProc", 
        "AGMSharedBezierPathReallocGlyphsProc", 
        "ReallocGlyphs", 
        "AGMSharedBezierPathReallocProc", 
        "AGMNewSharedBezierPathProc", 
        "AGMSharedBezierPathInterface", 
        "AGMPortEndGroupProc", 
        "AGMPortBeginGroupProc", 
        "BeginGroup", 
        "AIMDictionarySetProc", 
        "AIMDictionaryGetProc", 
        "AIMDictionaryCopyEntriesProc", 
        "CopyEntries", 
        "AIMDictionaryCloneProc", 
        "AGMPortShadingFillProcV2", 
        "ShadingFill", 
        "AGMPortTextNoListClipProc", 
        "TextClipNoList", 
        "AGMPortTextListClipProc", 
        "TextClip", 
        "AGMPortShowNoListProcV5", 
        "ShowNoList", 
        "AGMPortShowProcV5", 
        "AGMPortImageProcV2", 
        "AGMPortStrokePathProc", 
        "AGMPortStrokeProcV2", 
        "AGMPortFillPathProc", 
        "FillPath", 
        "AGMPortEOFillProcV2", 
        "EOFill", 
        "AGMPortFillProcV2", 
        "AGMPortSetColorServerProcV4", 
        "SetColorServer", 
        "AGMPortSetStrokeAdjustProc", 
        "SetStrokeAdjust", 
        "AGMPortSetMiterLimitProc", 
        "SetMiterLimit", 
        "AGMPortSetLineJoinProc", 
        "SetLineJoin", 
        "AGMPortSetLineCapProc", 
        "SetLineCap", 
        "AGMPortSetLineDashProc", 
        "SetLineDash", 
        "AGMPortSetLineWidthProc", 
        "SetLineWidth", 
        "AGMPortRotateProc", 
        "Rotate", 
        "AGMPortConcatProc", 
        "Concat", 
        "AGMPortScaleProc", 
        "AGMPortTranslateProc", 
        "AGMPortGRestoreProc", 
        "GRestore", 
        "AGMPortGSaveProc", 
        "AGMPortSetBlendingModeProc", 
        "SetBlendingMode", 
        "AGMPortSetOverPrintProc", 
        "SetOverPrint", 
        "AGMPortEndTransparencyGroupProcV2", 
        "EndTransparencyGroup", 
        "AGMPortStartTransparencyGroupProcV2", 
        "StartTransparencyGroup", 
        "AGMPortRemoveAlphaServerProc", 
        "RemoveAlphaServer", 
        "AGMPortSetAlphaServerProcV4", 
        "SetAlphaServer", 
        "AGMPortSetAlphaProc", 
        "SetAlpha", 
        "AGMPortClipPathProc", 
        "ClipPath", 
        "AGMPortEOClipProcV2", 
        "EOClip", 
        "AGMPortClipProcV2", 
        "AGMPortRectProc", 
        "AGMPortClosePathProc", 
        "ClosePath", 
        "AGMPortCurveToVProc", 
        "CurveToV", 
        "AGMPortCurveToProc", 
        "CurveTo", 
        "AGMPortLineToProc", 
        "LineTo", 
        "AGMPortRMoveToProc", 
        "RMoveTo", 
        "AGMPortMoveToProc", 
        "MoveTo", 
        "AGMPortNewPathProc", 
        "AGMPortSetBlackGenerationProc", 
        "SetBlackGeneration", 
        "AGMPortSetUnderColorRemovalProc", 
        "SetUnderColorRemoval", 
        "AGMPortSetOverPrintModeProc", 
        "SetOverPrintMode", 
        "AGMPortSetRenderIntentProc", 
        "SetRenderIntent", 
        "AGMPortGetColorConvertOptionsProc", 
        "AGMPortSetColorConvertOptionsProc", 
        "AGMPortSetHalftoneProc", 
        "SetHalftone", 
        "AGMPortSetSmoothnessProc", 
        "SetSmoothness", 
        "AGMPortSetFlatProc", 
        "SetFlat", 
        "AGMPortSetTransferProc", 
        "SetTransfer", 
        "AGMPortSetTextGridSizeProc", 
        "SetTextGridSize", 
        "AGMPortIsSpotColorCsProc", 
        "IsSpotColorCs", 
        "AGMPortIsSpotColorPlateProc", 
        "IsSpotColorPlate", 
        "AGMPortSetLinearizationFunctionProc", 
        "SetLinearizationFunction", 
        "AGMPortOptionsProcV3", 
        "AGMPortSetBIBErrorProc", 
        "AGMPortGetBIBErrorProc", 
        "AGMPortGetPortTypeProc", 
        "GetPortType", 
        "AGMRasterPortNewCompositePortV4Proc", 
        "NewCompositePort", 
        "AGMRasterPortNewBitmapPortV3Proc", 
        "NewBitmapPort", 
        "AGMRasterPortNewWindowPortV3Proc", 
        "NewWindowPort", 
        "AGMRasterPortNewImagePortV3Proc", 
        "NewImagePort", 
        "AGMNewRasterPortInterface", 
        "AGMRasterPortGetMarkedBoundsProc", 
        "AGMRasterPortEndPaintingProc", 
        "EndPainting", 
        "AGMRasterPortStartPaintingProc", 
        "StartPainting", 
        "AGMRasterPortDefineSpotColorPlateProc", 
        "AGMRasterPortPlatformBitmapProcV2", 
        "PlatformBitmap", 
        "AGMRasterPortPlatformBlitProcV2", 
        "PlatformBlit", 
        "AGMRasterPortPlatformDeviceProcV2", 
        "PlatformDevice", 
        "AGMRasterPortSetXORModeProc", 
        "SetXORMode", 
        "AGMRasterPortClipClassDevProc", 
        "ClipClassDev", 
        "AGMRasterPortClipClassProc", 
        "ClipClass", 
        "AGMRasterPortSetPatternCacheProc", 
        "SetPatternCache", 
        "AGMRasterPortGetCallbackDataProc", 
        "GetCallbackData", 
        "AGMRasterPortAttachCallbackDataProc", 
        "AttachCallbackData", 
        "AGMRasterPortSetWinDCProcV2", 
        "SetWinDCProc", 
        "AGMRasterPortSetHalftoneOriginProc", 
        "SetHalftoneOrigin", 
        "AGMRasterPortSetCursorProc", 
        "SetCursorProc", 
        "AGMRasterPortCurrentClipDevicePathProc", 
        "CurrentClipDevicePath", 
        "AGMRasterPortSourceCopyDevicePathProc", 
        "SourceCopyDevicePath", 
        "AGMRasterPortClipDevicePathProc", 
        "ClipDevicePath", 
        "AGMRasterPortFillDevicePathProc", 
        "FillDevicePath", 
        "AGMRasterPortCurrentClipShapeBoundsProc", 
        "CurrentClipShapeBounds", 
        "AGMRasterPortInverseMapPointProc", 
        "InverseMapPoint", 
        "AGMRasterPortMapPointProc", 
        "MapPoint", 
        "AGMRasterPortInShowProcV4", 
        "InShow", 
        "AGMRasterPortInStrokeProc", 
        "InStroke", 
        "AGMRasterPortInEOFillProc", 
        "InEOFill", 
        "AGMRasterPortInFillProc", 
        "InFill", 
        "AGMRasterPortGetImageDataProcV2", 
        "GetImageData", 
        "AGMRasterPortGetImageProcV4", 
        "AGMRasterPortSetDstProfileProcV3", 
        "SetDstProfile", 
        "AGMRasterPortInitClipProc", 
        "InitClip", 
        "AGMRasterPortSourceCopyPathProc", 
        "SourceCopyPath", 
        "AGMRasterPortSourceCopyProc", 
        "SourceCopy", 
        "AGMRasterPortEraseProc", 
        "AGMRasterPortIsRasterPortProc", 
        "IsRasterPort", 
        "AGMRasterPortInterface", 
        "AGMNewResourcePortProc", 
        "AGMNewResourcePortInterface", 
        "AGMResourcePortGetNthSpotColorProcV2", 
        "GetNthSpotColor", 
        "AGMResourcePortAllow16BPCRasterPortProc", 
        "Allow16BPCRasterPort", 
        "AGMResourcePortHas16BPCImageProc", 
        "Has16BPCImage", 
        "AGMResourcePortMarksProcessPlatesNonWhiteProc", 
        "MarksProcessPlatesNonWhite", 
        "AGMResourcePortMarksProcessPlatesProc", 
        "MarksProcessPlates", 
        "AGMResourcePortHasGradientMeshProc", 
        "HasGradientMesh", 
        "AGMResourcePortHasGradientProc", 
        "HasGradient", 
        "AGMResourcePortHasTextProc", 
        "HasText", 
        "AGMResourcePortHasOverPrintProc", 
        "HasOverPrint", 
        "AGMResourcePortHasNonInkPreservingBlendModesProc", 
        "HasNonInkPreservingBlendModes", 
        "AGMResourcePortHasNonIsolatedBlendsProc", 
        "HasNonIsolatedBlends", 
        "AGMResourcePortHasNonNormalBlendModesProc", 
        "HasNonNormalBlendModes", 
        "AGMResourcePortHasTransparencyProc", 
        "HasTransparency", 
        "AGMResourcePortInterface", 
        "AGMGDIPortSetProgressProc", 
        "SetProgress", 
        "AGMGDIPortSetSmoothShadeResolutionProc", 
        "SetSmoothShadeResolution", 
        "AGMGDIPortSetColorSpaceProc", 
        "SetColorSpace", 
        "AGMGDIPortSetHDCProc", 
        "SetHDC", 
        "AGMGDIPortIsWinGDIPortProc", 
        "IsWinGDIPort", 
        "AGMGDIPortNewColorSpaceWinGDIPortProc", 
        "NewColorSpaceWinGDIPort", 
        "AGMGDIPortInterface", 
        "AGMUtilsMemStatsWriteProc", 
        "AGMMemStatsWrite", 
        "AGMUtilsGetAGMMemStatsNameProc", 
        "GetAGMMemStatsName", 
        "AGMUtilsGetAGMMemStatsNumProc", 
        "GetAGMMemStatsNum", 
        "AGMUtilsGetAGMMemStatsCurAllocProc", 
        "GetAGMMemStatsCurAlloc", 
        "AGMUtilsGetAGMMemStatsNumAllocsProc", 
        "GetAGMMemStatsNumAllocs", 
        "AGMUtilsGetAGMMemStatsProc", 
        "GetAGMMemStats", 
        "AGMUtilsGetAGMCounterNameProc", 
        "GetAGMCounterName", 
        "AGMUtilsGetAGMCounterNumProc", 
        "GetAGMCounterNum", 
        "AGMUtilsGetAGMCounterAccumulatorProc", 
        "GetAGMCounterAccumulator", 
        "AGMUtilsGetAGMCounterCountProc", 
        "GetAGMCounterCount", 
        "AGMUtilsGetAGMCounterProc", 
        "GetAGMCounter", 
        "AGMUtilsCTPythonCallbackProc", 
        "CTPythonCallback", 
        "AGMUtilsCTEnableWarningBroadcastProc", 
        "CTEnableWarningBroadcast", 
        "AGMUtilsCTEnableTagsProc", 
        "CTEnableTags", 
        "AGMUtilsSetClientOptionsProc", 
        "SetClientOptions", 
        "AGMUtilsGetGlobalPaletteProc", 
        "GetGlobalPalette", 
        "AGMUtilsFlushGlobalCachesProc", 
        "FlushGlobalCaches", 
        "AGMUtilsFlushXFormCacheProc", 
        "FlushXFormCache", 
        "AGMUtilsSetXFormCacheSizeMaxProc", 
        "SetXFormCacheSizeMax", 
        "AGMUtilsGetXFormCacheSizeUsedProc", 
        "GetXFormCacheSizeUsed", 
        "AGMUtilsGetXFormCacheSizeMaxProc", 
        "GetXFormCacheSizeMax", 
        "AGMUtilsResetDrawWindowProc", 
        "ResetDrawWindow", 
        "AGMUtilsSetUncalProfilePolicyV3", 
        "SetUncalProfilePolicy", 
        "AGMUtilsSetUncalProfile", 
        "SetUncalProfile", 
        "AGMUtilsWinInitImageV3", 
        "WinInitImage", 
        "AGMUtilsPaintImageV2", 
        "PaintImage", 
        "AGMUtilsAGMGradientGetColorStopV2", 
        "AGMGradientGetColorStop", 
        "AGMUtilsAGMGradientGetInfoV2", 
        "AGMGradientGetInfo", 
        "AGMUtilsAGMGradientRelease", 
        "AGMGradientRelease", 
        "AGMUtilsAGMGradientAddRef", 
        "AGMGradientAddRef", 
        "AGMUtilsAGMGradientSetColorStop", 
        "AGMGradientSetColorStop", 
        "AGMUtilsAGMGradientNewV2", 
        "AGMGradientNew", 
        "AGMUtilsUnregisterMonitorProc", 
        "UnregisterMonitorProc", 
        "AGMUtilsRegisterMonitorProc", 
        "RegisterMonitorProc", 
        "AGMUtilsInterface", 
        "AGMNewOPIProcV3", 
        "NewOPI", 
        "AGMNewOPIInterface", 
        "AGMOPISetEndDataCmt", 
        "SetEndDataCmt", 
        "AGMOPISetBeginDataCmt", 
        "SetBeginDataCmt", 
        "AGMOPIAppendTiffASCIIField", 
        "AppendTiffASCIIField", 
        "AGMOPIGetDataType", 
        "GetDataType", 
        "AGMOPIGetPageNumber", 
        "GetPageNumber", 
        "AGMOPIGetOmitImage", 
        "GetOmitImage", 
        "AGMOPIGetProxy", 
        "GetProxy", 
        "AGMOPIGetImageHeight", 
        "GetImageHeight", 
        "AGMOPIGetImageWidth", 
        "GetImageWidth", 
        "AGMOPIGetTiffASCIIField", 
        "GetTiffASCIIField", 
        "AGMOPIGetImageBounds", 
        "GetImageBounds", 
        "AGMOPIGetCropRect", 
        "GetCropRect", 
        "AGMOPIGetEndDataCmt", 
        "GetEndDataCmt", 
        "AGMOPIGetBeginDataCmt", 
        "GetBeginDataCmt", 
        "AGMOPIGetImageID", 
        "GetImageID", 
        "AGMOPIGetFileName", 
        "GetFileName", 
        "AGMOPIInterface", 
        "AGMNewEPSClientProcV4", 
        "NewEPSClient", 
        "AGMNewEPSClientInterface", 
        "AGMEPSContainerPlayEPSV2", 
        "PlayEPS", 
        "AGMEPSContainerInjectEPSContent", 
        "InjectEPSContent", 
        "AGMEPSContainerGetFontPSStream", 
        "GetFontPSStream", 
        "AGMEPSContainerGetOPI", 
        "AGMEPSContainerGetEPSResourceServer", 
        "GetEPSResourceServer", 
        "AGMEPSContainerGetInjectionType", 
        "GetInjectionType", 
        "AGMEPSContainerPlayArtworkV2", 
        "PlayArtwork", 
        "AGMEPSContainerGetType", 
        "AGMPrintDeviceControllerEmitType3GlyphDesc", 
        "EmitType3GlyphDesc", 
        "AGMPrintDeviceControllerGetFontSubstitutionPolicy", 
        "GetFontSubstitutionPolicy", 
        "AGMPrintDeviceControllerAbortJob", 
        "AbortJob", 
        "AGMPrintDeviceControllerGetProgress", 
        "GetProgress", 
        "AGMPrintDeviceControllerFontResStatusChng", 
        "FontResStatusChng", 
        "AGMPrintDeviceControllerQueryPrinterResV2", 
        "QueryPrinterRes", 
        "AGMPrintDeviceControllerGetPSVersion", 
        "GetPSVersion", 
        "AGMPrintDeviceControllerSetPSSupportLevel", 
        "SetPSSupportLevel", 
        "AGMPrintDeviceControllerGetPSSupportLevel", 
        "GetPSSupportLevel", 
        "AGMPrintDeviceControllerGetPSFontDownload", 
        "GetPSFontDownload", 
        "AGMPrintDeviceControllerGetDownloadAsianFonts", 
        "GetDownloadAsianFonts", 
        "AGMPrintDeviceControllerGetTTCIDFontAsType2", 
        "GetTTCIDFontAsType2", 
        "AGMPrintDeviceControllerGetTTFontDownload", 
        "GetTTFontDownload", 
        "AGMPrintDeviceControllerSetCanDoBinary", 
        "SetCanDoBinary", 
        "AGMPrintDeviceControllerGetCanDoBinary", 
        "GetCanDoBinary", 
        "AGMPrintDeviceControllerGetBinaryStream", 
        "GetBinaryStream", 
        "AGMPrintDeviceControllerGetASCIIStream", 
        "GetASCIIStream", 
        "AGMPrintDeviceControllerRegisterPSResource", 
        "RegisterPSResource", 
        "AGMPrintDeviceControllerFindPSResource", 
        "FindPSResource", 
        "AGMPrintDeviceControllerMakePSVMAvailV2", 
        "MakePSVMAvailV2", 
        "AGMPrintDeviceControllerMakePSVMAvail", 
        "MakePSVMAvail", 
        "AGMPrintMarksDrawV2Proc", 
        "DrawV2", 
        "AGMPrintMarksDrawProc", 
        "AGMPrintMarksMarkInfoProc", 
        "MarkInfo", 
        "AGMPrintMarksNewV2Proc", 
        "AGMPrintMarksNewProc", 
        "AGMPrintMarksInterface", 
        "AGMPrintInfoInfoProc", 
        "AGMPrintInfoNewProc", 
        "AGMPrintInfoInterface", 
        "AGMPrintPSResInfoGetClient", 
        "GetClient", 
        "AGMPrintPSResInfoProcessColorsUsed", 
        "ProcessColorsUsed", 
        "AGMPrintPSResInfoCMYKProcessColor", 
        "CMYKProcessColor", 
        "AGMPrintPSResInfoCMYKCustomColor", 
        "CMYKCustomColor", 
        "AGMPrintPSResInfoRGBColor", 
        "RGBColor", 
        "AGMPrintPSResInfoNInk", 
        "AGMPrintPSResInfoInk", 
        "AGMPrintPSResInfoProcSupplied", 
        "ProcSupplied", 
        "AGMPrintPSResInfoProcNeeded", 
        "ProcNeeded", 
        "AGMPrintPSResInfoFontSupplied", 
        "FontSupplied", 
        "AGMPrintPSResInfoFontNeeded", 
        "FontNeeded", 
        "AGMNewPrintPSResInfoClientProc", 
        "NewPrintPSResInfoClient", 
        "AGMNewPrintPSResInfoInterface", 
        "AGMPrintSessionRegisterResourcesProc", 
        "RegisterResources", 
        "AGMPrintSessionPreflightProc", 
        "Preflight", 
        "AGMPrintSessionPreflightPrintRecProc", 
        "PreflightPrintRec", 
        "AGMPrintSessionCreatePrinterListDictProc", 
        "CreatePrinterListDict", 
        "AGMPrintSessionGetAvailablePPDFilesProc", 
        "GetAvailablePPDFiles", 
        "AGMPrintSessionGetDirectFeatureAvailDictProc", 
        "GetDirectFeatureAvailDict", 
        "AGMPrintSessionGetExportFeatureAvailDictProc", 
        "GetExportFeatureAvailDict", 
        "AGMPrintSessionRestorePrintRecordProc", 
        "RestorePrintRecord", 
        "AGMPrintSessionNewPrintRecordDCProc", 
        "NewPrintRecordDC", 
        "AGMPrintSessionNewPrintRecordProc", 
        "NewPrintRecord", 
        "AGMPrintSessionNewDefaultPrintRecordProc", 
        "NewDefaultPrintRecord", 
        "AGMPrintSessionSetPrintPageParamsProc", 
        "SetPrintPageParams", 
        "AGMPrintSessionGetNextPrintEventProc", 
        "GetNextPrintEvent", 
        "AGMPrintSessionBeginPrintProcV1", 
        "BeginPrint", 
        "AGMPrintSessionBeginPrintPrintRecProcV1", 
        "BeginPrintPrintRec", 
        "AGMPrintSessionShowOSPrintDialogProc", 
        "ShowOSPrintDialog", 
        "AGMPrintSessionNewProc", 
        "AGMPrintSessionInterface", 
        "AGMPrintParamsFactoryCreateDefaultPrintPageParamsProc", 
        "CreateDefaultPrintPageParams", 
        "AGMPrintParamsFactoryCreateDefaultPrintJobParamsNonPSProc", 
        "CreateDefaultPrintJobParamsNonPS", 
        "AGMPrintParamsFactoryCreateDefaultPrintJobParamsProc", 
        "CreateDefaultPrintJobParams", 
        "AGMPrintParamsFactoryInterface", 
        "AGMPPDFactoryCreatePPDFromPPDFileProc", 
        "CreatePPDFromPPDFile", 
        "AGMPPDFactoryInterface", 
        "AGMPrintRecordGetPrintEnvironmentVariablesProc", 
        "GetPrintEnvironmentVariables", 
        "AGMPrintRecordFlattenProc", 
        "Flatten", 
        "AGMPrintRecordUpdatePrintRecordDictProc", 
        "UpdatePrintRecord", 
        "AGMPrintRecordGetPrintRecordDictProc", 
        "GetPrintRecordDict", 
        "AGMPrintRecordInterface", 
        "AGMTrapRecorderPortGetATRTransParencyTrappingDataProc", 
        "GetATRTransParencyTrappingData", 
        "AGMTrapRecorderPortGetTrapDisplayListProc", 
        "GetTrapDisplayList", 
        "AGMTrapRecorderPortNewPortProcV4", 
        "AGMTrapRecorderPortInterface", 
        "AGMPrintTrapPreviewerComputeAndInjectTraps", 
        "ComputeAndInjectTraps", 
        "AGMPrintTrapPreviewerGetTrapRecorderForPage", 
        "GetTrapRecorderForPage", 
        "AGMPrintTrapPreviewerNewTrapGeneratorProc", 
        "NewTrapGenerator", 
        "AGMPrintTrapPreviewerInterface", 
        "NewBasicGPColorConvSegmentProc", 
        "NewBasicGPColorConvSegment", 
        "NewBasicGPLineSegmentProc", 
        "NewBasicGPLineSegment", 
        "NewExternalGPColorConvSegmentProcV3", 
        "NewExternalGPColorConvSegment", 
        "NewExternalGPLineSegmentProcV3", 
        "NewExternalGPLineSegment", 
        "NewGPLineSegmentInterface", 
        "GPLineSegmentGetAlphaServer", 
        "GPLineSegmentGetColorServer", 
        "GPLineSegmentGetOverPrint", 
        "GPLineSegmentInitialize", 
        "Initialize", 
        "GPLineSegmentGetNextSegmentForMethod", 
        "GetNextSegmentForMethod", 
        "GPLineSegmentOverridesMethod", 
        "OverridesMethod", 
        "GPLineSegmentSetNextSegment", 
        "SetNextSegment", 
        "GPLineSegmentClone", 
        "GPColorConvSegmentCloneToNewCSPossible", 
        "CloneToNewCSPossible", 
        "GPColorConvSegmentGetCurrentOverPrintMode", 
        "GetCurrentOverPrintMode", 
        "GPColorConvSegmentGetCurrentOverPrint", 
        "GetCurrentOverPrint", 
        "GPColorConvSegmentConvertOneColor", 
        "GPColorConvSegmentConvertColors", 
        "GPColorConvSegmentUsesAGMColorConversion", 
        "UsesAGMColorConversion", 
        "GPColorConvSegmentWillConvertColorSpace", 
        "WillConvertColorSpace", 
        "GPColorConvSegmentWillConvert", 
        "WillConvert", 
        "GPColorConvSegmentConvertPaint", 
        "ConvertPaint", 
        "GPLineSegmentListGetNthGPLineSegmentProc", 
        "GetNthGPLineSegment", 
        "GPLineSegmentListReserveSizeProc", 
        "ReserveSize", 
        "GPLineSegmentListGetNumSegmentsProc", 
        "GetNumSegments", 
        "GPLineSegmentListAddGPLineSegmentProc", 
        "AddGPLineSegment", 
        "GPLineSegmentListProc", 
        "NewSegmentList", 
        "GPLineSegmentListInterface", 
        "GPLineErrorHandlerErrorProc", 
        "GPLineErrorHandlerNewProc", 
        "NewGPLineErrorHandler", 
        "GPLineErrorHandlerInterface", 
        "GPLineMgrCreateType3FontUnrollSegment", 
        "CreateType3FontUnrollSegment", 
        "GPLineMgrCreateForceOPMToZeroForCalCMYKSegment", 
        "CreateForceOPMToZeroForCalCMYKSegment", 
        "GPLineMgrCreateMTSegment", 
        "CreateMTSegment", 
        "GPLineMgrCreateDecodeNormalizeSegment", 
        "CreateDecodeNormalizeSegment", 
        "GPLineMgrCreateImageDownsampleSegment", 
        "CreateImageDownsampleSegment", 
        "GPLineMgrCreatePatternCollectorSegment", 
        "CreatePatternCollectorSegment", 
        "GPLineMgrCreatePatternDecoderSegment", 
        "CreatePatternDecoderSegment", 
        "GPLineMgrCreateEPSDecoderSegment", 
        "CreateEPSDecoderSegment", 
        "GPLineMgrCreateSpotNormalizeSegment", 
        "CreateSpotNormalizeSegment", 
        "GPLineMgrCreateEPSOnlyProcessingSegment", 
        "CreateEPSOnlyProcessingSegment", 
        "GPLineMgrCreateMUXTerminatorSegment", 
        "CreateMUXTerminatorSegment", 
        "GPLineMgrCreateColorConvCacheMUXSegment", 
        "CreateColorConvCacheMUXSegment", 
        "GPLineMgrCreateStripOverprintSegment", 
        "CreateStripOverprintSegment", 
        "GPLineMgrCreateAlphaStripSegment", 
        "CreateAlphaStripSegment", 
        "GPLineMgrCreateSimOPSegment", 
        "CreateSimOPSegment", 
        "GPLineMgrCreateInkManageSegment", 
        "CreateInkManageSegment", 
        "GPLineMgrCreateDPOESegment", 
        "CreateDPOESegment", 
        "GPLineMgrCreateTagUntagSegmentV2", 
        "CreateTagUntagSegment", 
        "GPLineMgrCreateProcessConvSegmentV2", 
        "CreateProcessConvSegment", 
        "GPLineMgrCreateGrayToKSegmentV2", 
        "CreateGrayToKSegment", 
        "GPLineMgrCreateProfileSwapPipe", 
        "CreateProfileSwapPipe", 
        "GPLineMgrInstallInAGMPort", 
        "InstallInAGMPort", 
        "GPLineMgrSetEntrySegment", 
        "SetEntrySegment", 
        "GPLineMgrGetEntrySegment", 
        "GetEntrySegment", 
        "GPLineMgrGetSegmentCount", 
        "GetSegmentCount", 
        "GPLineMgrGetNthSegment", 
        "GetNthSegment", 
        "GPLineMgrRemoveSegment", 
        "RemoveSegment", 
        "GPLineMgrInsertSegment", 
        "InsertSegment", 
        "GPLineMgrPrePendSegment", 
        "PrePendSegment", 
        "GPLineMgrAppendSegment", 
        "AppendSegment", 
        "GPLineMgrEnablePipeline", 
        "EnablePipeline", 
        "GPLineMgrIsPipelineEnabled", 
        "IsPipelineEnabled", 
        "GPLineMgrNewProc", 
        "NewMgr", 
        "GPLineMgrInterface", 
        "GPInkMgrUtilsValidateNChannelColorSpaceProc", 
        "ValidateNChannelColorSpace", 
        "GPInkMgrUtilsMapCompositePaintProc", 
        "MapCompositePaint", 
        "GPInkMgrUtilsMapShadingPaintProc", 
        "MapShadingPaint", 
        "GPInkMgrUtilsMapPaintProc", 
        "MapPaint", 
        "GPInkMgrUtilsMapImageProc", 
        "MapImage", 
        "GPInkMgrUtilsMapColorSpaceAndValueProc", 
        "MapColorSpaceAndValue", 
        "GPInkMgrUtilsNewProc", 
        "NewInkMgrUtils", 
        "GPInkMgrUtilsInterface", 
        "AGMGraphicBaseGetOutlining", 
        "GetOutlining", 
        "AGMGraphicBaseSetOutlining", 
        "SetOutlining", 
        "AGMGraphicBaseSetUserDataCallbackProc", 
        "SetUserDataCallbackProc", 
        "AGMGraphicBaseGetUserData", 
        "GetUserData", 
        "AGMGraphicBaseSetUserData", 
        "SetUserData", 
        "AGMGraphicBaseReplace", 
        "ReplaceThisGraphic", 
        "AGMGraphicBaseRemove", 
        "RemoveThisGraphic", 
        "AGMGraphicBasePrependSibling", 
        "PrependSiblingGraphic", 
        "AGMGraphicBaseAppendSibling", 
        "AppendSiblingGraphic", 
        "AGMGraphicBaseGetPreviousSibling", 
        "GetPrevSiblingGraphic", 
        "AGMGraphicBaseGetSibling", 
        "GetNextSiblingGraphic", 
        "AGMGraphicBaseGetLastChild", 
        "GetLastChildGraphic", 
        "AGMGraphicBaseGetFirstChild", 
        "GetFirstChildGraphic", 
        "AGMGraphicBaseGetParent", 
        "GetParentGraphic", 
        "AGMGraphicBaseInterface", 
        "AGMNewGraphicFillAndStrokeGroup", 
        "NewFillAndStrokeGroup", 
        "AGMNewGraphicGroupV2", 
        "NewGroup", 
        "AGMNewGraphicGroupInterface", 
        "AGMGraphicGroupGetDimming", 
        "GetDimming", 
        "AGMGraphicGroupSetDimming", 
        "SetDimming", 
        "AGMGraphicGroupIsSymbolInstance", 
        "IsSymbolInstance", 
        "AGMGraphicGroupIsSymbolDefinition", 
        "IsSymbolDefinition", 
        "AGMGraphicGroupAttachSymbol", 
        "AttachSymbol", 
        "AGMGraphicGetBinaryVisibility", 
        "GetBinaryVisibility", 
        "AGMGraphicSetBinaryVisibility", 
        "SetBinaryVisibility", 
        "AGMGraphicGetVisibility", 
        "AGMGraphicSetVisibility", 
        "AGMGraphicGroupIterateGraphics", 
        "IterateGraphics", 
        "AGMGraphicGroupAddDirtyRects", 
        "AddDirtyRects", 
        "AGMGraphicGroupClearDirtyRects", 
        "ClearDirtyRects", 
        "AGMGraphicGroupFlushCacheV2", 
        "FlushCache", 
        "AGMGraphicGroupIsFinalized", 
        "IsFinalized", 
        "AGMGraphicGroupFinalizeGroup", 
        "FinalizeGroup", 
        "AGMGraphicGroupPrependGraphic", 
        "PrependGraphic", 
        "AGMGraphicGroupAppendPathPoints", 
        "AppendPathPoints", 
        "AGMGraphicGroupAppendGraphicPath", 
        "AppendGraphicPath", 
        "AGMGraphicGroupAppendGraphic", 
        "AppendGraphic", 
        "AGMGraphicGroupGetBoundingBox", 
        "AGMGraphicGroupGetGroupNamedDict", 
        "GetGroupNamedDict", 
        "AGMGraphicGroupSetGroupNamedDict", 
        "SetGroupNamedDict", 
        "AGMGraphicGroupGetGroupColorSpace", 
        "GetGroupColorSpace", 
        "AGMGraphicGroupSetGroupColorSpace", 
        "SetGroupColorSpace", 
        "AGMGraphicGroupGetGroupGraphic", 
        "GetGroupGraphic", 
        "AGMGraphicGroupSetGroupGraphic", 
        "SetGroupGraphic", 
        "AGMGraphicGroupGetGroupMatrix", 
        "GetGroupMatrix", 
        "AGMGraphicGroupSetGroupMatrix", 
        "SetGroupMatrix", 
        "AGMGraphicGroupIsFillAndStroke", 
        "IsFillAndStroke", 
        "AGMGraphicGroupGetGroupOptions", 
        "GetGroupOptions", 
        "AGMGraphicGroupSetGroupOptions", 
        "SetGroupOptions", 
        "AGMGraphicGroupInterface", 
        "AGMNewGraphicNewAGMGraphicMetadataDict", 
        "NewAGMGraphicMetadataDict", 
        "AGMNewGraphicNewAGMGraphicMetadata", 
        "NewAGMGraphicMetadata", 
        "AGMNewGraphicNewAGMFullGraphicLeafV2", 
        "NewAGMFullGraphicLeaf", 
        "AGMNewGraphicNewAGMGraphicLeaf", 
        "NewAGMGraphicLeaf", 
        "AGMNewGraphicInterface", 
        "AGMGraphicGetDrawFixedSize", 
        "GetDrawFixedSize", 
        "AGMGraphicSetDrawFixedSize", 
        "SetDrawFixedSize", 
        "AGMGraphicGetUnderColorRemoval", 
        "AGMGraphicSetUnderColorRemoval", 
        "AGMGraphicGetBlackGeneration", 
        "AGMGraphicSetBlackGeneration", 
        "AGMGraphicGetOverPrintMode", 
        "AGMGraphicSetOverPrintMode", 
        "AGMGraphicGetRenderIntent", 
        "AGMGraphicSetRenderIntent", 
        "AGMGraphicFlushCache", 
        "AGMGraphicInPath", 
        "AGMGraphicGetBoundingBox", 
        "AGMGraphicGetMatteBeforeColorConvert", 
        "GetMatteBeforeColorConvert", 
        "AGMGraphicGetSourceCopy", 
        "GetSourceCopy", 
        "AGMGraphicSetSourceCopyV2", 
        "SetSourceCopy", 
        "AGMGraphicGetPath", 
        "GetPath", 
        "AGMGraphicSetPath", 
        "SetPath", 
        "AGMGraphicGetAlphaAIS", 
        "GetAlphaAIS", 
        "AGMGraphicSetAlphaAIS", 
        "SetAlphaAIS", 
        "AGMGraphicGetAlpha", 
        "AGMGraphicSetAlpha", 
        "AGMGraphicGetAlphaServer", 
        "AGMGraphicSetAlphaServer", 
        "AGMGraphicGetColorServerAIS", 
        "GetColorServerAIS", 
        "AGMGraphicSetColorServerAIS", 
        "SetColorServerAIS", 
        "AGMGraphicGetColorServer", 
        "AGMGraphicSetColorServer", 
        "AGMGraphicGetBlendingMode", 
        "AGMGraphicSetBlendingMode", 
        "AGMGraphicGetOverPrint", 
        "AGMGraphicSetOverPrint", 
        "AGMGraphicGetType", 
        "AGMGraphicInterface", 
        "AGMGraphicGetMetadataDict", 
        "GetMetadataDict", 
        "AGMGraphicGetMetadataGState", 
        "GetMetadataGState", 
        "AGMGraphicGetMetadataType", 
        "GetMetadataType", 
        "AGMGraphicMetadataInterface", 
        "AGMNewGraphicIteratorNewAGMGraphicIterator", 
        "NewAGMGraphicIterator", 
        "AGMNewGraphicIteratorInterface", 
        "AGMGraphicIteratorAbort", 
        "AGMGraphicIteratorInterface", 
        "couldn't load flattening port manager interface", 
        "couldn't load flattening settings manager interface", 
        "couldn't construct CAGMNewHalftoneList", 
        "Invalid CBIBError", 
        "couldn't construct NewGPLineSegment", 
        "AGMCCOInkList", 
        "AGMCCOPreserveBlack", 
        "AGMCCOOPPMixingBPC", 
        "AGMCCOOPPMixingRenderIntent", 
        "AGMCCOFastColorTransform", 
        "AGMCCODisableSameCsColorConv", 
        "AGMCCODICProfilePolicy", 
        "AGMCCOProfilePolicy", 
        "AGMCCOUseNewellBlending", 
        "AGMCCODefaultCMYKProfile", 
        "AGMCCODefaultRGBProfile", 
        "AGMCCODefaultLabProfile", 
        "AGMCCODefaultGrayProfile", 
        "AGMCCOPromoteNoneToSynthesizedSpot", 
        "AGMCCOPromoteSpotOnlyToNChannel", 
        "AGMCCOPromoteDeviceNUndefinedProcess", 
        "AGMCCOPromoteDeviceNUndefinedColorants", 
        "AGMCCOPromoteDeviceGrayToSeparationBlack", 
        "client getType bad params", 
        "client GetInjectionType bad params", 
        "client GetEPSResourceServer bad params", 
        "client GetOPI bad params", 
        "client GetFontPSStream bad params", 
        "client InjectEPSContent bad params", 
        "unknown BIB error", 
        "null container passed to CGPLineSegment", 
        "null GPLineSegment passed to CGPLineSegment constructor", 
        "client playEPS failed", 
        "Invalid CharString", 
        "Malloc failed in OutlineGetMemory", 
        "ErrID: %d; %s %s L:%d ", 
        "Cross error", 
        "CrossIsXtra test in FinishPath", 
        "left/right error", 
        "order error", 
        "odd number of intersections", 
        "flag error in CScan", 
        "invalid back link 2 error", 
        "invalid back link error", 
        "NULL cross in SetLeftFlag error", 
        "odd number of crosses on a scanline", 
        "known must not be an xtra cross", 
        "Dropout error 2", 
        "Dropout error", 
        "start after end", 
        "path direction error", 
        "DoXInflections 2 error", 
        "DoXInflections error", 
        "loop termination error", 
        "DeletePixel 3 error", 
        "DeletePixel 2 error", 
        "DeletePixel error", 
        "DoFixupAction 2 error", 
        "DoFixupAction error", 
        "CharBBox error", 
        "closefile", 
        "urrentfile", 
        "DOStartRearrangedFont", 
        "DOResourceSubCategory:", 
        "BeginData:", 
        "CheckSum", 
        "EndAdobeStdCompFont_BDY", 
        "OriginalFont:", 
        "CIDFontType", 
        "PGFontType", 
        "endrearrangedfont", 
        "CMapName", 
        "ompositeEncoding", 
        "ompositeFont", 
        "ompositeFont_BDY", 
        "erivedFont", 
        "rimogenitalFont", 
        "tdCompFont", 
        "Resource-Font", 
        "Resource-CIDFont", 
        "Resource-CMap", 
        "PS-Adobe-", 
        "beginrearrangedfont", 
        "noaccess", 
        "findencoding", 
        ".notdef", 
        "StandardEncoding", 
        "Binary", 
        "StartData", 
        "FontDirectory", 
        "Private", 
        "CharStrings", 
        "StandardCDevProc", 
        "findfont", 
        "usefont", 
        "usecmap", 
        "beginusematrix", 
        "beginpgfrange", 
        "beginnotdefrange", 
        "beginnotdefchar", 
        "begincodespacerange", 
        "begincidrange", 
        "begincidchar", 
        "beginbfrange", 
        "beginbfchar", 
        "WidthsOnly", 
        "UIDBase", 
        "Ordering", 
        "HostSupport", 
        "GlyphDirectory", 
        "GDBytes", 
        "Supplement", 
        "Registry", 
        "FDBytes", 
        "FDArray", 
        "CIDMapOffset", 
        "CIDFontVersion", 
        "CIDFontName", 
        "CIDCount", 
        "PrefEnc", 
        "FMapType", 
        "FDepVector", 
        "version", 
        "isFixedPitch", 
        "WeightVector", 
        "Weight", 
        "SubsVector", 
        "StrokeWidth", 
        "PrimogenitalFontName", 
        "PaintType", 
        "PGFArray", 
        "OrigFontType", 
        "Notice", 
        "FullName", 
        "FontType", 
        "FontName", 
        "FontMatrix", 
        "FamilyName", 
        "FSType", 
        "Encoding", 
        "CharOffsets", 
        "CDevProc", 
        "BlendDesignPositions", 
        "BlendDesignMap", 
        "BlendAxisTypes", 
        "AccentEncoding", 
        "UnderlineThickness", 
        "UnderlinePosition", 
        "FontBBox", 
        "subroutineNumberBias", 
        "lenBuildCharArray", 
        "initialRandomSeed", 
        "gSubNumberBias", 
        "UniqueID", 
        "ItalicAngle", 
        "SubrMapOffset", 
        "SubrCount", 
        "SDBytes", 
        "RunInt", 
        "RndStemUp", 
        "PGFontID", 
        "LanguageGroup", 
        "ForceBoldThreshold", 
        "ExpansionFactor", 
        "nominalWidthX", 
        "defaultWidthY", 
        "defaultWidthX", 
        "defaultSidebearingY", 
        "defaultSidebearingX", 
        "VToHOrigin", 
        "StemSnapV", 
        "StemSnapH", 
        "OtherBlues", 
        "HBaselineShift", 
        "ForceBold", 
        "FamilyOtherBlues", 
        "FamilyBlues", 
        "BlueShift", 
        "BlueScale", 
        "BlueFuzz", 
        "BlueValues", 
        "RearrangedFont", 
        "germandbls", 
        "oslash", 
        "lslash", 
        "dotlessi", 
        "ordmasculine", 
        "Oslash", 
        "Lslash", 
        "ordfeminine", 
        "emdash", 
        "ogonek", 
        "hungarumlaut", 
        "cedilla", 
        "dieresis", 
        "dotaccent", 
        "macron", 
        "circumflex", 
        "questiondown", 
        "perthousand", 
        "ellipsis", 
        "guillemotright", 
        "quotedblright", 
        "quotedblbase", 
        "quotesinglbase", 
        "bullet", 
        "paragraph", 
        "periodcentered", 
        "daggerdbl", 
        "dagger", 
        "endash", 
        "guilsinglright", 
        "guilsinglleft", 
        "guillemotleft", 
        "quotedblleft", 
        "quotesingle", 
        "currency", 
        "section", 
        "florin", 
        "fraction", 
        "sterling", 
        "exclamdown", 
        "asciitilde", 
        "braceright", 
        "braceleft", 
        "quoteleft", 
        "underscore", 
        "asciicircum", 
        "bracketright", 
        "backslash", 
        "bracketleft", 
        "question", 
        "greater", 
        "semicolon", 
        "period", 
        "hyphen", 
        "asterisk", 
        "parenright", 
        "parenleft", 
        "quoteright", 
        "ampersand", 
        "percent", 
        "dollar", 
        "numbersign", 
        "quotedbl", 
        "exclam", 
        "EdgeList would overflow", 
        "sidebearing or width override out of bounds", 
        "GCDoLock failed in DoTriXLock", 
        "not found after insert", 
        "GCDoLock failed in DoTriYLock", 
        "Postpass failed GCDoLock in RBLock", 
        "not found after insert", 
        "GCDoLock failed in Postpass of RXLock", 
        "%!PS-Adobe-3.0 Resource-Font", 
        "%!PS-Adobe-3.0 Resource-CIDFont", 
        "%!PS-Adobe-Resource-CIDFont", 
        "%!PS-Adobe-3.0 Resource-CMap", 
        "%!FontType 1", 
        "%!FontType1", 
        "%!PS-AdobeFont", 
        "end currentfile eexec", 
        "mark currentfile closefile", 
        "0000000000000000000000000000000000000000000000000000000000000000", 
        "cleartomark", 
        "cannot access font", 
        "Korea1", 
        "Japan2", 
        "Japan1", 
        "Tcaron", 
        "afii10071", 
        "afii10049", 
        "ALBAYAN", 
        "<Cannot access font", 
        "cannot access sfnt data", 
        "missing maxp", 
        "invalid stream", 
        "cannot resize holder to be smaller", 
        "can't get sfnt table", 
        "can't read sfnt", 
        "can't open font", 
        "can't find font", 
        "PostScript", 
        "WinATMDataHandler", 
        "Invalid font index", 
        "WinATMHandler", 
        "Software\\Microsoft\\Windows NT\\CurrentVersion\\Type 1 Installer\\Type 1 Fonts", 
        "Adobe Type Manager", 
        "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Font Drivers", 
        "Settings", 
        "atm.ini", 
        " 0@P`pp", 
        "    0000@@@@@PPPP````ppppp", 
        "unsupported grid ratio (6)", 
        "unsupported anisotropic ratio", 
        "unsupported grid ratio", 
        "Downsample filter pad requires 32-bit pixel format", 
        "unsupported XRatio for ColorDDR", 
        "ATM Parse Error", 
        "invalid font type", 
        "?invalid matrix", 
        "Unable to create cfr context", 
        "Cannot read CFF stream", 
        "cannot read stream", 
        "bad count for ReadN", 
        "not CID font", 
        "CFFIndexedArray index out of range", 
        "Invalid charset", 
        "CID font with standard charset??", 
        "%Locale:", 
        "%!Adobe-FontList 1.11", 
        "CTFontID too short", 
        "CTFontID string too long", 
        "FontID: no UTF16 str terminator", 
        "CTFontID unexpected char", 
        "FID.1:", 
        "ExtendedArabic", 
        "Vietnamese", 
        "EastEuropeanRoman", 
        "Mongolian", 
        "Tibetan", 
        "SimplifiedChinese", 
        "Armenian", 
        "Georgian", 
        "Laotian", 
        "Burmese", 
        "Sinhalese", 
        "Malayalam", 
        "Kannada", 
        "Telugu", 
        "Bengali", 
        "Gujarati", 
        "Gurmukhi", 
        "Devanagari", 
        "RightLeft", 
        "Cyrillic", 
        "Hebrew", 
        "Arabic", 
        "Korean", 
        "TraditionalChinese", 
        "Japanese", 
        "Invalid", 
        "WinName:", 
        "AngleClass:", 
        "WidthClass:", 
        "WeightClass:", 
        "FileModTime:", 
        "FileLength:", 
        "isCFF:", 
        "UsesStandardEncoding:", 
        "MMAxisName:", 
        "NumMMAxes:", 
        "TTCOffset:", 
        "sfntResource", 
        "sfntData", 
        "POSTResource", 
        "DataFormat:", 
        "UseCMap:", 
        "Ordering:", 
        "Registry:", 
        "CMapName:", 
        "FontType:", 
        "WritingScript:", 
        "StyleBits:", 
        "MenuName:", 
        "FullNameNative:", 
        "StyleNameNative:", 
        "FamilyNameNative:", 
        "FullName:", 
        "StyleName:", 
        "FamilyName:", 
        "FontName:", 
        "OutlineFileName:", 
        "Bitmap", 
        "ComponentFont:", 
        "Rearranged", 
        "TrueType", 
        "Handler:", 
        "%EndFont", 
        "%BeginFont", 
        "%EndFont", 
        "%BeginFont", 
        "startkey", 
        "StreamHandler", 
        "DirectoryHandler", 
        "InProcServer32", 
        "{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}", 
        "DllGetClassObject", 
        "WinTTHandler", 
        "Unable to load required component 'Unicows.dll'.", 
        "CoolType", 
        "unicows.dll", 
        "Font Capture", 
        "CoolTypeFontChange", 
        "Service Pack 3", 
        "Service Pack 2", 
        "Service Pack 1", 
        "cannot get text metrics", 
        "cannot get text extent", 
        "cannot setup dc", 
        "ATCV table major version number is not 1", 
        "Invalid table", 
        "component too high", 
        "required DictVal not provided", 
        "KSCms-UHC-V", 
        "KSCpc-EUC-V", 
        "KSCms-UHC-H", 
        "KSCpc-EUC-H", 
        "GBK-EUC-V", 
        "GBpc-EUC-V", 
        "GBK-EUC-H", 
        "GBpc-EUC-H", 
        "ETen-B5-V", 
        "B5pc-V", 
        "ETen-B5-H", 
        "B5pc-H", 
        "90msp-RKSJ-V", 
        "90msp-RKSJ-H", 
        "90ms-RKSJ-V", 
        "90pv-RKSJ-V", 
        "90ms-RKSJ-H", 
        "83pv-RKSJ-H", 
        "90pv-RKSJ-H", 
        "bad exception", 
        "endcodespacerange", 
        "<%02x><%02x>", 
        "<%04x><%04x>", 
        "<%08x><%08x>", 
        "%d begincodespacerange", 
        "100 begincodespacerange", 
        "Invalid range", 
        "couldn't attach", 
        "invalid parent CMap", 
        "-UTF16-", 
        "-UCS2-", 
        "valid fontset required for streamed CMap", 
        "Error parsing CMap", 
        "missing codespace map", 
        "Invalid AA Type", 
        "unknown type", 
        "Invalid Technology", 
        "HKscs-B5-H", 
        "GBK2K-H", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " &   ! ", 
        " 9 : T", 
        "-UTF16-H", 
        "-UCS2-H", 
        "DFMaruGothic-Lt-WIN-RKSJ-H", 
        "DFPOP1-SB-WIN-RKSJ-H", 
        "DFLeiSho-SB-WIN-RKSJ-H", 
        "DFKaiSho-Md-WIN-RKSJ-H", 
        "DFGyoSho-Lt-WIN-RKSJ-H", 
        "RKSJ-V", 
        "RKSJ-H", 
        "HKscs-B5-V", 
        "GBK2K-V", 
        "Weiss-Italic", 
        "Weiss-ExtraBold", 
        "Weiss-Bold", 
        "Stencil", 
        "StempelSchneidler-Roman", 
        "StempelSchneidler-Medium", 
        "StempelSchneidler-MedItalic", 
        "StempelSchneidler-LightItalic", 
        "StempelSchneidler-Light", 
        "StempelSchneidler-Italic", 
        "StempelSchneidler-BoldItalic", 
        "StempelSchneidler-Bold", 
        "StempelSchneidler-BlackItalic", 
        "StempelSchneidler-Black", 
        "SimonciniGaramond-Italic", 
        "SimonciniGaramond-Bold", 
        "SimonciniGaramond", 
        "Serifa-Roman", 
        "Serifa-LightItalic", 
        "Serifa-Light", 
        "Serifa-Italic", 
        "Serifa-Bold", 
        "Serifa-Black", 
        "PrestigeElite-Slanted", 
        "PrestigeElite-BoldSlanted", 
        "PrestigeElite-Bold", 
        "PrestigeElite", 
        "Orator-Slanted", 
        "Orator", 
        "NewsGothic-Oblique", 
        "NewsGothic-BoldOblique", 
        "NewsGothic-Bold", 
        "NewsGothic", 
        "LetterGothic-Slanted", 
        "LetterGothic-BoldSlanted", 
        "LetterGothic-Bold", 
        "LetterGothic", 
        "Impressum-Roman", 
        "Impressum-Italic", 
        "Impressum-Bold", 
        "Futura-Oblique", 
        "Futura-LightOblique", 
        "Futura-Light", 
        "Futura-HeavyOblique", 
        "Futura-Heavy", 
        "Futura-ExtraBoldOblique", 
        "Futura-ExtraBold", 
        "Futura-CondensedOblique", 
        "Futura-CondensedLightOblique", 
        "Futura-CondensedLight", 
        "Futura-CondensedExtraBold", 
        "Futura-CondensedBoldOblique", 
        "Futura-CondensedBold", 
        "Futura-Condensed", 
        "Futura-CondExtraBoldObl", 
        "Futura-BookOblique", 
        "Futura-Book", 
        "Futura-BoldOblique", 
        "Futura-Bold", 
        "Futura", 
        "Folio-Medium", 
        "Folio-Light", 
        "Folio-ExtraBold", 
        "Folio-BoldCondensed", 
        "Folio-Bold", 
        "Courier-Oblique", 
        "Courier-BoldOblique", 
        "Courier-Bold", 
        "Courier", 
        "Charme", 
        "CenturyOldStyle-Regular", 
        "CenturyOldStyle-Italic", 
        "CenturyOldStyle-Bold", 
        "Candida-Roman", 
        "Candida-Italic", 
        "Candida-Bold", 
        "BrushScript", 
        "BellCentennial-SubCaption", 
        "BellCentennial-NameAndNumber", 
        "BellCentennial-BoldListingAlt", 
        "BellCentennial-BoldListing", 
        "BellCentennial-Address", 
        "BauerBodoni-RomanSC", 
        "BauerBodoni-Roman", 
        "BauerBodoni-ItalicOsF", 
        "BauerBodoni-Italic", 
        "BauerBodoni-BoldOsF", 
        "BauerBodoni-BoldItalicOsF", 
        "BauerBodoni-BoldItalic", 
        "BauerBodoni-BoldCond", 
        "BauerBodoni-Bold", 
        "BauerBodoni-BlackItalic", 
        "BauerBodoni-BlackCond", 
        "BauerBodoni-Black", 
        "trademark of Adobe", 
        "Type3FontInfo::SetFontMatrix already called", 
        "Type3FontInfo::SetFontBBox already called", 
        "SVGFontInfo::SetUnitsPerEm already called", 
        "vector<T> too long", 
        "asking for program base when it isn't loaded", 
        "no component", 
        "matrix cannot be converted to fixed point", 
        "attempt to reinitialize fFindOrFaux", 
        "ct_CffProgram", 
        "ct_CFFFontDesc", 
        "ct_CTFontID", 
        "ct_UniPrivateAreaMap", 
        "ct_isWinHKSCS", 
        "ct_stemv", 
        "ct_ValidGlyphIDRanges", 
        "ct_menunames", 
        "ct_tthead", 
        "ct_OTGAcc", 
        "ct_VertMortTable", 
        "ct_mortTable", 
        "ct_OTFeaturesByLangSys", 
        "ct_OTFFeatures", 
        "ct_baselines", 
        "ct_OS2VendorID", 
        "ct_OS2fsSelection", 
        "ct_MMMasterDesignVector", 
        "ct_MMExtrapLimits", 
        "ct_BASETable", 
        "ct_GDEFTable", 
        "ct_GPOSTable", 
        "ct_GSUBTable", 
        "ct_rearrangedprogram", 
        "ct_CIDprogram", 
        "ct_type1accentmap", 
        "ct_type1accencencode", 
        "ct_sfntkerntable", 
        "ct_platformtype1bytemap", 
        "ct_defaulttype1bytemap", 
        "ct_type1program", 
        "ct_FONDPSName", 
        "ct_fauxbasefont", 
        "ct_hasWidthsOnly", 
        "ct_SubstituteFontStyle", 
        "ct_WasEmbedded", 
        "ct_TrademarkString", 
        "ct_CopyrightString", 
        "ct_versionString", 
        "ct_version", 
        "ct_CMapFromFONDName", 
        "ct_unitsPerEm", 
        "ct_ATCATCV", 
        "ct_ATCCFMA", 
        "ct_ATCRLBL", 
        "ct_italicTogglePSName", 
        "ct_boldTogglePSName", 
        "ct_NumATCComponents", 
        "ct_ATCMatrices", 
        "ct_ATCComponentDicts", 
        "ct_ATCEncodings", 
        "ct_hasoutlines", 
        "ct_availablebitmapsizes", 
        "ct_ideoUnderline", 
        "ct_underlineposition", 
        "ct_icfbox", 
        "ct_embox", 
        "ct_horizontalmetrics", 
        "ct_notdefglyphid", 
        "ct_charsetvariant", 
        "ct_fullpath", 
        "ct_codepages", 
        "ct_hasproproman", 
        "ct_cjkhasprophorizmetrics", 
        "ct_haspropvertmetrics", 
        "ct_syntheticstyle", 
        "ct_fauxinfo", 
        "ct_installedmminstancenames", 
        "ct_installedmminstances", 
        "ct_defaultdesignvector", 
        "ct_platformtype1encoding", 
        "ct_defaulttype1encoding", 
        "ct_stylebits", 
        "ct_numglyphs", 
        "ct_supplement", 
        "ct_ordering", 
        "ct_registry", 
        "ct_availableCMaps", 
        "ct_availablecmaps", 
        "ct_pssafefontname", 
        "ct_pssafecharstringnames", 
        "ct_charstringnames", 
        "ct_usesstandardencoding", 
        "ct_designaxeslimits", 
        "ct_fonttype", 
        "ct_italicangle", 
        "ct_fontbbox", 
        "ct_winmenuname", 
        "ct_stylenameNative", 
        "ct_familynameNative", 
        "ct_fullnameNative", 
        "ct_stylename", 
        "ct_familyname", 
        "ct_fullname", 
        "ct_fontstatus", 
        "Identity-V", 
        "Identity-H", 
        "Identity", 
        "cannot modify a component list after it is used to construct a font", 
        "bad lenDesignVector", 
        "UniJIS-UCS2-H", 
        "UniJISB-UCS2-H", 
        "UniJIS-UCS2-V", 
        "UniJIS-UTF16-H", 
        "UniJIS-UTF16-V", 
        "UniCNS-UCS2-H", 
        "UniCNS-UCS2-V", 
        "UniCNS-UTF16-H", 
        "UniCNS-UTF16-V", 
        "UniKS-UCS2-H", 
        "UniKS-UCS2-V", 
        "UniKS-UTF16-H", 
        "UniKS-UTF16-V", 
        "UniGB-UCS2-H", 
        "UniGB-UCS2-V", 
        "UniGB-UTF16-H", 
        "UniGB-UTF16-V", 
        "makeotf.lib", 
        "Core 1.0.", 
        "Type3FontInfo::GetNthGlyphInfo glyph out of range", 
        "SVG string is of zero length", 
        "non-empty CTComponentFonts required to create a composite font", 
        "AdobeSerifMM", 
        "AdobeSansMM", 
        "n out of range", 
        "ctorProc must succeed", 
        "size too small", 
        "Symbol", 
        "SymbolMT", 
        "ZapfDingbats", 
        "can't convert design vector", 
        "?CoolType does not support mm cff", 
        "SVG font: reached limit for number of glyphs", 
        "matrix too big", 
        "client induced error", 
        "invalid encoding", 
        "array too short", 
        "CT out of memory", 
        "CT bad param: ", 
        "CT generic", 
        "CT4 unknown error", 
        "CT4 invalid bytes", 
        "CT4 value processed", 
        "CT4 invalid font type", 
        "CT4 unsupported feature", 
        "CT4 some bytes mapped close", 
        "CT4 some bytes not mapped", 
        "CT4 invalid translator", 
        "CT4 invalid encoding", 
        "CT4 invalid glyph id", 
        "CT4 invalid matrix", 
        "yacute", 
        "Yacute", 
        "multiply", 
        "threequarters", 
        "onehalf", 
        "onequarter", 
        "onesuperior", 
        "threesuperior", 
        "twosuperior", 
        "brokenbar", 
        "zcaron", 
        "scaron", 
        "Zcaron", 
        "Scaron", 
        "Ugrave", 
        "Ucircumflex", 
        "Uacute", 
        "Ograve", 
        "Ocircumflex", 
        "Oacute", 
        "Igrave", 
        "Idieresis", 
        "Icircumflex", 
        "Iacute", 
        "Egrave", 
        "Edieresis", 
        "Aacute", 
        "Ecircumflex", 
        "Acircumflex", 
        "Ydieresis", 
        "ydieresis", 
        "lozenge", 
        "divide", 
        "Otilde", 
        "Atilde", 
        "Agrave", 
        "approxequal", 
        "radical", 
        "logicalnot", 
        "integral", 
        "product", 
        "summation", 
        "partialdiff", 
        "greaterequal", 
        "lessequal", 
        "plusminus", 
        "infinity", 
        "notequal", 
        "trademark", 
        "copyright", 
        "registered", 
        "degree", 
        "udieresis", 
        "ucircumflex", 
        "ugrave", 
        "uacute", 
        "otilde", 
        "odieresis", 
        "ocircumflex", 
        "ograve", 
        "oacute", 
        "ntilde", 
        "idieresis", 
        "icircumflex", 
        "igrave", 
        "iacute", 
        "edieresis", 
        "ecircumflex", 
        "egrave", 
        "eacute", 
        "ccedilla", 
        "atilde", 
        "adieresis", 
        "acircumflex", 
        "agrave", 
        "aacute", 
        "Udieresis", 
        "Odieresis", 
        "Ntilde", 
        "Eacute", 
        "Ccedilla", 
        "Adieresis", 
        "CTPrintDeviceControllerInterface", 
        "instance was not a PrintDeviceController object", 
        "Type3FontInfo: font matrix not set", 
        "too many design axes", 
        "no current point", 
        "path is immutable", 
        "read on write-only stream", 
        "can't write", 
        "invalid BPP", 
        "Cinvalid glyphID", 
        " get exec", 
        "could not get font resource", 
        "Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end", 
        "Adobe_CoolType_Core begin /$GetaTint SetSubstituteStrategy end", 
        "Adobe_CoolType_Core begin /$None SetSubstituteStrategy end", 
        "setglobal", 
        "currentglobal true setglobal", 
        "?unsupported CTAGMSetupInfo version", 
        "can't get rearranged program", 
        ">write", 
        "BufferedTable: invalid access", 
        "SfntStream: written size mismatch", 
        "buffered table: accessing beyond table end", 
        "no valid data in dual table", 
        "KernPairTable::GetNth: can't find", 
        "failed to get GPOS table", 
        "invalid unitsPerEm", 
        "incompatible custom kern version", 
        "failed to get head table", 
        "failed to initialize sfnt read", 
        "sfwWriteTables failed", 
        "sfwRegisterTable failed", 
        "failed to initialize sfnt write", 
        "JIS X 0208", 
        "JIS X 0213", 
        "GB 18030", 
        "zeropersian", 
        "Abreve", 
        "Romanian", 
        "Dslash", 
        "Dcroat", 
        "Croatian", 
        "Central European", 
        "Icelandic", 
        "element", 
        "uogonek", 
        "Baltic", 
        "alefmaddaabovearabic", 
        "afii57410", 
        "alefhebrew", 
        "afii57664", 
        "Idotaccent", 
        "Turkish", 
        "upsilondieresis", 
        "Western", 
        "iocyrillic", 
        "IAcyrillic", 
        "ncaron", 
        "East European", 
        "Traditional Chinese", 
        "Simplified Chinese", 
        "akatakana", 
        "kokaithai", 
        "dmacron", 
        "ccaron", 
        "Ccaron", 
        "cacute", 
        "Cacute", 
        "scedilla", 
        "Scedilla", 
        "gbreve", 
        "Gbreve", 
        "nobreakspace", 
        "nonmarkingreturn", 
        "Type3FontInfo: font bbox not set", 
        "eCCRun", 
        "matching glyph name source info??", 
        "0snapped to well-known embox", 
        "precisely at well-known embox", 
        "not near well-known embox", 
        "dereference null pointer", 
        "cannot fetch default design vector", 
        "index out of range", 
        "trying to fetch type1 program for non legacy type1", 
        "looking for registry of non-cid font?", 
        "looking for ordering of non-cid font?", 
        "looking for supplement of non-cid font?", 
        "no SING table in a SING font?", 
        "unrecognized SING table", 
        "trying to get atc info for non-atc", 
        "negative units per em", 
        "non-positive units per em", 
        "0123456789ABCDEF", 
        "EnfourGaiji-", 
        "unable to fetch glyphids", 
        "trying to get component info for non-atc", 
        "non-rearranged font", 
        "can't fetch cmaps", 
        "trying to fetch extrap data for non t1 mm", 
        "ATC font with no components??", 
        "T1P: Accent Encoding Error", 
        "T1P: Platform Encoding Error", 
        "T1P: Encoding Error", 
        "T1P: EM Units <= 0", 
        "T1P: Parse Error", 
        "T1P: ATM Parse Error", 
        "CIDP: EM Units <= 0", 
        "CIDP: Parse Error", 
        "CIDP: ATM Parse Error", 
        "ATCP: EM Units <= 0", 
        "ATCP: Parse Error", 
        "ATCP: ATM Parse", 
        "no rearranged program", 
        "no type1 program?", 
        "LoadT1Basics called incorrectly", 
        "FontTech not handled", 
        "fetching encoding vector for non-type1", 
        "attempt to fetch encoding vector for non-type1", 
        "trying to get cid info for non-legacy cid", 
        "fetching atc program for non-atc", 
        "byte maps only available for type1 fonts", 
        "unsupported fonttype", 
        "unknown format", 
        "cannot get design axes for a non-mm font", 
        "cannot get limits for non-mm font", 
        "%s.g%04X", 
        "Cannot find glyph names", 
        "uni%02X%02X", 
        "cannot fetch cff glyphnames", 
        "glyphnames only available for type1 or truetype", 
        "font too short", 
        "invalid fDataOffset", 
        "no replacement CMap", 
        "can't get indexed font", 
        "invalid cid index or invalid count", 
        "invalid component index", 
        "caching mm info for non-mm", 
        "integer overflow", 
        "Could not find component font", 
        "ATC font must be in a fontset to find its components", 
        "can't get num glyphs", 
        "can't get component", 
        "can't get indexed encoding", 
        "couldn't read charstring", 
        "number of cache objects must be non-0", 
        "missing tree", 
        "invalid CID subrs", 
        "invalid replacement CMap", 
        "endcmap", 
        "CMapName currentdict /CMap defineresource pop", 
        "%%EndResource", 
        "can't stream code space", 
        "1 begincodespacerange", 
        "<00> <ff>", 
        "endcodespacerange", 
        "%s) def", 
        "/Ordering (%s) def", 
        "/Supplement %d def", 
        "end def", 
        "/CIDSystemInfo 3 dict dup begin", 
        "/Registry (", 
        "/CMapVersion 1.000 def", 
        "/CMapType 1 def", 
        "/UIDOffset 0 def", 
        "/WMode 0 def", 
        "/CIDInit /ProcSet findresource begin", 
        "12 dict begin", 
        "begincmap", 
        "/CMapName /", 
        "%%Version: 1", 
        "%%Title: (", 
        "%!PS-Adobe-3.0 Resource-CMap", 
        "%%DocumentNeededResources: ProcSet (CIDInit)", 
        "%%IncludeResource: ProcSet (CIDInit)", 
        "%%BeginResource: CMap (", 
        "font with no charstrings?", 
        "cannot load CFF charstrings/subrs", 
        "cannot get info for cid 0", 
        "bad font index in CIDMap entry", 
        "negative charstring length in CIDMap entry", 
        "invalid fd or gd bytes", 
        "invalid base font index", 
        "CSS (internal): CTCSSGenericFamily out of bounds", 
        "invalid CTCSSFontStyle", 
        "invalid CTCSSFontVariant", 
        "invalid CTCSSFontWeight", 
        "invalid CTCSSFontStretch", 
        "kCTCSSFontStretch_All not allowed in CSS font request", 
        "only one font-width allowed in CSS font request", 
        "kCTCSSFontWeight_All not allowed in CSS font request", 
        "only one font-weight allowed in CSS font request", 
        "only one font-variant allowed in CSS font request", 
        "kCTCSSFontStyle_All not allowed in CSS font request", 
        "only one font-style allowed in CSS font request", 
        "at least one font-family required in CSS font request", 
        "at least one font-style required in CSS font properties", 
        "at least one font-family required in CSS font properties", 
        "invalid CTCSSGenericFamily", 
        "GetNextFontPartition: cannot compute character boundaries", 
        "New York", 
        "Adobe ", 
        "Bauer ", 
        "Berthold ", 
        "Club Type ", 
        "ITC New ", 
        "Linotype ", 
        "Monotype ", 
        "Simoncini ", 
        "Stempel ", 
        "index is out of range", 
        "can't create font group list", 
        "Adding new FontGroup failed", 
        "Cannot enumerate a font with no font name or no family name", 
        "WinMenu: Adding new FontGroup failed", 
        "Cannot enumerate a font with no font name or no menu name", 
        "Invalid baselines or writing direction", 
        "DoFeature: invalid font", 
        "cannot add fonts to the system context", 
        "invalid strategy given to FontSet::FindFont", 
        "Probable invalid access", 
        "Negative gsubParams->choiceIndex", 
        "GetNthFeatureResult: index out of range", 
        "Error: OTGlyphAccess: expecting only 1 GID", 
        "GSUBAlternatives probable access violation", 
        "GetFeatureResult: only 1 feature at a time, please", 
        "AppleMyungjo", 
        "AppleGothic", 
        "RFHonMincho-XB-83pv-RKSJ-H", 
        "RFHonMincho-Bd-83pv-RKSJ-H", 
        "RFHonMincho-Md-83pv-RKSJ-H", 
        "RFHonMincho-Lt-83pv-RKSJ-H", 
        "RFHeiseiMin-W9-83pv-RKSJ-H", 
        "RFHeiseiMin-W3-83pv-RKSJ-H", 
        "RFHeiseiMG-W4-83pv-RKSJ-H", 
        "RFHeiseiKG-W9-83pv-RKSJ-H", 
        "RFHeiseiKG-W5-83pv-RKSJ-H", 
        "RFShokeiGS-Md-83pv-RKSJ-H", 
        "RFShino-Bd-83pv-RKSJ-H", 
        "RFShino-Md-83pv-RKSJ-H", 
        "RFHagoromo-Bd-83pv-RKSJ-H", 
        "RFHagoromo-Md-83pv-RKSJ-H", 
        "RFBrush-UB-83pv-RKSJ-H", 
        "RFFine-ME-83pv-RKSJ-H", 
        "RFFine-MB-83pv-RKSJ-H", 
        "PS-NOW-MU-83pv-RKSJ-H", 
        "PS-NOW-MM-83pv-RKSJ-H", 
        "PS-NOW-GU-83pv-RKSJ-H", 
        "PS-NOW-GM-83pv-RKSJ-H", 
        "PS-NOW-GE-83pv-RKSJ-H", 
        "PS-NOW-GB-83pv-RKSJ-H", 
        "PS-NOW-MB-83pv-RKSJ-H", 
        "RFSirius-XB-83pv-RKSJ-H", 
        "RFSirius-Bd-83pv-RKSJ-H", 
        "RFSirius-Md-83pv-RKSJ-H", 
        "RFSirius-Lt-83pv-RKSJ-H", 
        "RFSan-Bd-83pv-RKSJ-H", 
        "RFSan-Md-83pv-RKSJ-H", 
        "RFGothic-XB-83pv-RKSJ-H", 
        "RFGothic-Bd-83pv-RKSJ-H", 
        "RFGothic-Md-83pv-RKSJ-H", 
        "RFGothic-Lt-83pv-RKSJ-H", 
        "RFWoody-GM-83pv-RKSJ-H", 
        "NSimSun", 
        "SimSun", 
        "SimHei", 
        "0:0>0>0A0", 
        "2 2C2`2{2", 
        "NIS-NPUP-83pv-RKSJ-H", 
        "NIS-NPU-83pv-RKSJ-H", 
        "attempt to get component from non-ATC", 
        "non-invertible component matrix", 
        "invalid glyphid", 
        "Cannot use platform to rasterize bitmap font", 
        "no fontdicts in cid cff?", 
        "internal inconsistency: secondary ddr needs secondary ddr??", 
        "Cannot render Type 3 glyph.", 
        "glyph should be in the cache but isn't", 
        "@too many masters", 
        "Warning: unrecognized font format", 
        "inconsistent number of glyphs in font", 
        "unknown CFF font format", 
        "inconsistent number of glyphs in cff font", 
        "Warning: CFF MM unsupported", 
        "invalid glyph id", 
        "unknown path type", 
        "/CIDFont", 
        "ct_MakeBold", 
        "ct_VMDictPut", 
        "Adobe_CoolType_Utility_T42", 
        "1.23 0", 
        "Adobe_CoolType_Utility_MAKEOCF", 
        "2.29 0", 
        "Adobe_CoolType_Core", 
        "%%EndResource", 
        "2 copy currentdict put", 
        "2 copy get{forall}def", 
        "2 mul dict", 
        "2 copy get dup length 4 index length add exch maxlength 1 index lt", 
        "2 copy get dup maxlength exch length 4 index length add lt", 
        "Level2? not", 
        "{2 copy 4 index length dict put}", 
        "2 copy known not", 
        "/$DictAdd", 
        "$DictAdd", 
        "Adobe_CoolType_Data/InVMFontsByCMap get exch", 
        "1 dict dup begin exch 1 index gcheck def end exch", 
        "exch/FontName 2 copy known", 
        "/$AddInVMFont", 
        "}bind put", 
        "{$Strategy/$BuildFont get exec}", 
        "currentdict/$Strategy known", 
        "$doSmartSub", 
        "{dup $inVMIndex $AddInVMFont}", 
        "$inVMIndex null ne", 
        "$substituteFound $depth 0 eq and", 
        "/$depth $depth 1 sub def", 
        "scfindfont", 
        "/$depth $depth 1 add def", 
        "/$substituteFound false def", 
        "/$fontname 1 index dup type/stringtype ne{$str cvs}if def", 
        "$depth 0 eq", 
        "Adobe_CoolType_Core/findfont", 
        "Adobe_CoolType_Core_Defined not", 
        "{exch pop}", 
        "{exch pop}", 
        "$str cvs print(.\\n)print", 
        "{dup/FontName get}{(unspecified font)}", 
        "dup/FontName known", 
        "( substitution revised, using )print", 
        "$origfontname $str cvs print", 
        "$origfontnamefound ne", 
        "dup/FontName known{dup/FontName get}{null}ifelse", 
        "currentdict", 
        "forall", 
        "{1 index/FID eq{pop pop}{def}ifelse}", 
        "dup maxlength 1 add dict", 
        "pop dup $findfontByEnum findfont", 
        "3 index length $slen gt or and", 
        "$sname null ne", 
        "$slen 0 gt", 
        "exch pop", 
        "/$origfontname 4 index def/$substituteFound true def", 
        "/$origfontnamefound 2 index def", 
        "{/noname true}", 
        "{dup/FontName get dup 3 index ne}", 
        "dup/FontName known", 
        "dup systemfindfont", 
        "/scfindfont", 
        "Adobe_CoolType_Core/scfindfont/systemfindfont load put", 
        "bind readonly def", 
        "{$findfontByEnum}", 
        "/$slen 0 def", 
        "{//SubstituteFont exec}", 
        "{pop pop $findfontByEnum}", 
        "{pop pop pop $findfontByEnum}", 
        "ifelse", 
        "{pop pop pop $findfontByEnum}", 
        "dup type/booleantype eq", 
        "ifelse", 
        "true exit", 
        "$findfontByROS", 
        "/CMap findresource/CIDSystemInfo get{def}forall", 
        "dup/$cmapname exch def", 
        "4 1 roll pop pop pop", 
        "pop pop", 
        "dup/CMap resourcestatus", 
        "putinterval", 
        "exch 1 index exch 3 index exch", 
        "getinterval", 
        "4 3 roll add", 
        "4 index", 
        "$str cvs dup length", 
        "exch 1 sub -1 0", 
        "2 index", 
        "2 index length", 
        "exch length", 
        "4 2 roll pop pop", 
        "{pop pop pop pop pop $findfontByEnum}", 
        "stopped", 
        "{dup cvi}", 
        "3 1 roll pop", 
        "3 1 roll search", 
        "dup(-)search", 
        "128 string cvs", 
        "$findfontByROS", 
        "/CMap findresource/CIDSystemInfo get{def}forall", 
        "dup/$cmapname exch def", 
        "pop pop", 
        "dup/CMap resourcestatus", 
        "exch pop exch pop", 
        "{pop pop false}", 
        "ifelse", 
        "{exch pop true exit}", 
        "GlobalFontDirectory 1 index known", 
        "FontDirectory 1 index known", 
        "{exch pop true exit}", 
        "GlobalFontDirectory 1 index known", 
        "currentglobal", 
        "false exch", 
        "1 index 2 copy known", 
        "Adobe_CoolType_Data/InVMFontsByCMap get", 
        "{$sname}", 
        "{dup $str cvs dup length $slen sub $slen getinterval cvn}", 
        "$sname null eq", 
        "$slen 0 gt and", 
        "$sname null ne or", 
        "dup length $slen gt", 
        "/$substituteFound true def", 
        "$SubstituteFont", 
        "pop pop", 
        "/CMap/Category resourcestatus", 
        "/SubstituteFont", 
        "{Adobe_CoolType_Core}", 
        "{$error}", 
        "{pop $error/SubstituteFont known}", 
        "currentdict/$error known currentdict/languagelevel known and dup", 
        "{$fontname $findfontByEnum}", 
        "{$buildfontname}", 
        "$str/CIDFont resourceforall", 
        "{pop restore}", 
        "{exch restore exch pop true exit}", 
        "exch/Ordering get Ordering eq and and", 
        "dup/Registry get Registry eq", 
        "exch/CIDSystemInfo get", 
        "{true}", 
        "{dup/WidthsOnly get not}", 
        "dup/CIDFont findresource", 
        "save exch", 
        "false(*)", 
        "{$str cvs $buildfontname}", 
        "forall", 
        "{exch pop true exit}", 
        "exch restore", 
        "exch pop", 
        "{false}", 
        "{dup/WidthsOnly get}", 
        "dup/WidthsOnly known", 
        "1 index/CIDFont findresource", 
        "dup/CIDFont resourcestatus", 
        "false exch", 
        "{pop pop[]}", 
        "{pop pop[]}", 
        "get Ordering 2 copy known", 
        "$ROS Registry 2 copy known", 
        "/$fontname exch def", 
        "/$findfontByROS", 
        "$str exch 0 exch getinterval cvn", 
        "$cmapname length add", 
        "$str 1 index $cmapname $fontpat cvs putinterval", 
        "$str 1 index(-)putinterval 1 add", 
        "length", 
        "{pop pop pop pop pop}", 
        "{pop pop 3 2 roll putinterval cvn/$cmapname exch def}", 
        "anchorsearch", 
        "1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch", 
        "4 2 roll add 1 add 2 copy(-)putinterval", 
        "dup 4 index 1 add Ordering putinterval", 
        "dup 4 index(-)putinterval", 
        "dup 5 1 roll dup 0 Registry putinterval", 
        "3 copy length 2 add add add string", 
        "Registry length Ordering length Supplement 8 string cvs", 
        "dup/CIDFont findresource/CIDSystemInfo get", 
        "/$buildfontname", 
        "{$Strategies/$Type3Underprint get exec}", 
        "3 copy put pop pop", 
        "/copied exch definefont", 
        "dup/FontName/copied put", 
        "2 copy get $deepcopyfont", 
        "0 1 2 index length 1 sub", 
        "/FDepVector FDepVector copyarray", 
        "1 dict dup/FontName/copied put copyfont", 
        "dup/FontType get 0 eq", 
        "/$deepcopyfont", 
        "/$cmapname null def", 
        "end def", 
        "[/MKai-Medium/MHei-Medium]def", 
        " [/STSong-Light/STHeiti-Regular]def", 
        "/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def", 
        " /HeiseiMaruGo-W4/Jun101-Light]def", 
        " /GothicBBB-Medium/HeiseiKakuGo-W5", 
        "/Japan1 [/Ryumin-Light/HeiseiMin-W3", 
        "/Adobe 4 dict dup", 
        "/$ROS 1 dict dup", 
        "}bind def", 
        "{/Courier}", 
        "{$match(fonts/)anchorsearch pop pop cvn}", 
        "$match false ne", 
        "/$slen 0 def", 
        "cleartomark", 
        "forall", 
        "{begin false}", 
        "{true}", 
        "{pop false}", 
        "1 index eq", 
        "$SubstituteFont/$dstack get", 
        "currentdict", 
        "cleardictstack", 
        "stopped", 
        "$str filenameforall", 
        "{/$match exch def exit}", 
        "$fontpat 0 $slen 7 add getinterval", 
        "$SubstituteFont/$dstack countdictstack array dictstack put", 
        "/$match false def", 
        "$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval", 
        "{pop $sname}", 
        "{$str cvs dup length $slen sub $slen getinterval}", 
        "$sname null eq", 
        "dup/$fontname exch def", 
        "dup type/stringtype eq{cvn}if", 
        "/$findfontByEnum", 
        "/$Oblique SetSubstituteStrategy", 
        "end def", 
        "/$BuildFont{}bind def", 
        "/$None", 
        "exch setglobal", 
        "FontName currentdict", 
        "4 2 roll def", 
        "matrix concatmatrix readonly", 
        "[1 0 ItalicAngle dup sin exch cos div 1 0 0]", 
        "/FontMatrix FontMatrix", 
        "/ItalicAngle $italicangle def", 
        "ifelse", 
        "{2 dict}", 
        "{FontInfo null copyfont}", 
        "/FontInfo currentdict/FontInfo known", 
        "/currentdistillerparams where", 
        "/FontName $fontname dup type/stringtype eq{cvn}if def", 
        "{/unnamedfont}", 
        "dup type/stringtype eq{cvn}if", 
        "FontName", 
        "currentdict/FontName known", 
        "/FontBasedOn", 
        "null copyfont", 
        "currentglobal exch dup gcheck setglobal", 
        "1 dict dup", 
        "/$Oblique", 
        "end def", 
        "grestore", 
        "forall", 
        "stroke", 
        "fill grestore", 
        "ifelse", 
        "{.8 setgray}", 
        "{.2 setcolor}", 
        "Level2?", 
        "closepath", 
        "0 y 4 div rlineto", 
        "dup 0 rlineto", 
        "0 y 4 div neg rlineto", 
        "y mul 8 div 120 sub x 10 div exch moveto", 
        "x .8 mul", 
        "10 setlinewidth", 
        "{0 setgray}", 
        "setcolorspace", 
        "[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]", 
        "Level2?", 
        "{/x -1000 def 500 120 translate}", 
        "{/y 1000 def}", 
        "x abs y abs gt", 
        "/$Underprint", 
        "dup/FontBasedOn get 1 index def", 
        "definefont", 
        "dup/FontName $fontname dup type/stringtype eq{cvn}if put", 
        "exch 1 index exch/FontBasedOn exch put", 
        "{$deepcopyfont}", 
        "null copyfont", 
        "1 index get", 
        "Adobe_CoolType_Data/InVMDeepCopiedFonts get", 
        "1 index/FontName get known", 
        "Adobe_CoolType_Data/InVMDeepCopiedFonts get", 
        "{/unnamedfont}", 
        "dup type/stringtype eq{cvn}if", 
        "dup/FontName get", 
        "dup/FontName known", 
        "$fontname exch", 
        "/$WMode exch def", 
        "{dup/WMode get}", 
        "dup/WMode known", 
        "/$BuildFont", 
        "2 dict dup", 
        "/$GetaTint", 
        "}bind def", 
        "exch setglobal", 
        "currentdict", 
        "}bind def", 
        "x y moveto", 
        "0 0 moveto cc show", 
        "$SubstituteFont/$Strategy get/$Underprint get exec", 
        "x y setcharwidth", 
        "cc stringwidth/y exch def/x exch def", 
        "UseFont 1000 scalefont setfont", 
        "/cc exch def", 
        "1 string dup 0 3 index put exch pop", 
        "CCInfo", 
        "/BuildChar", 
        "end def", 
        "/y 0 def", 
        "/x 0 def", 
        "/cc null def", 
        "/CCInfo 7 dict dup", 
        "/FontBBox[0 0 0 0]def", 
        "/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def", 
        "/FontMatrix[.001 0 0 .001 0 0]def", 
        "/FontType 3 def", 
        "/FontName $fontname dup type/stringtype eq{cvn}if def", 
        "if def", 
        "/UseFont exch definefont", 
        "dup/WMode $WMode put", 
        "dup length dict copy", 
        "$WMode 0 ne", 
        "/UseFont exch", 
        "11 dict", 
        "currentglobal exch false setglobal", 
        "/$Type3Underprint", 
        "/$Strategies 10 dict dup", 
        "/$dstack null def", 
        "/$italicangle 26.5 def", 
        "/$depth 0 def", 
        "/$doSmartSub true def", 
        "/$inVMIndex null def", 
        "/$substituteFound false def", 
        "/$fontname null def", 
        "/$match false def", 
        "/$sname null def", 
        "/$slen 0 def", 
        "/$fontpat 128 string def", 
        "/$str 128 string def", 
        "$SubstituteFont", 
        "userdict", 
        "countdictstack array dictstack 0 get", 
        "if not", 
        "{pop pop false}", 
        "{get/Error eq}", 
        "currentdistillerparams/CannotEmbedFontPolicy 2 copy known", 
        "/currentdistillerparams where dup", 
        "ifelse def", 
        "{pop pop{pop/Courier}bind}", 
        "dup $error exch 2 copy known", 
        "/SubstituteFont", 
        "1 dict", 
        "userdict/$SubstituteFont 25 dict put", 
        "setpacking", 
        "setglobal", 
        "null copyfont definefont pop", 
        "currentglobal false setglobal 3 1 roll", 
        "findfont ", 
        "pop pop pop pop/Unknown", 
        "pop pop/Unknown", 
        "add ?str1 exch 0 exch getinterval cvn", 
        "exch dup length exch ?str1 exch 3 index exch putinterval", 
        "?str1 exch(-)putinterval", 
        "?str1 cvs length dup 1 add exch", 
        "dup type/nametype eq", 
        "{pop/Default}", 
        "exch 2 copy known not", 
        "ct_StyleDicts $regOrdering", 
        "$styleArray exch get", 
        "0 1 $styleArray length 1 sub", 
        "/$regOrdering 2 index def", 
        "/$styleArray 1 index def", 
        "$SubstituteFont", 
        "{pop true}", 
        "6 1 roll pop pop pop pop pop false", 
        "dup/FontType get 3 eq", 
        "1 index", 
        "findfont", 
        "5 1 roll pop pop pop pop", 
        "/$doSmartSub true def", 
        "exch pop", 
        "{pop false 2 index isWidthsOnlyFont not and}", 
        "/currentdistillerparams where", 
        "1 index/DistillerFauxFont known not and", 
        "dup/FontName get $fontname eq", 
        "dup/FontName known", 
        "$substituteFound", 
        " findfont", 
        "/$doSmartSub false def", 
        "/$fontname 1 index def", 
        "/$substituteFound false def", 
        "/?str1 256 string def", 
        " setglobal", 
        " pop pop pop", 
        " ifelse", 
        "definefont ", 
        "currentdict", 
        "ct_CopyFont", 
        "dup length dict begin", 
        "{exch pop", 
        "2 index 2 index eq", 
        " ct_MakeBoldFont ", 
        " ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put", 
        "dup/_fauxfont known not 1 index/SubstMaster known not and", 
        "{ct_MakeBoldFont}ct_Type0CopyFont definefont", 
        "ct_BoldBaseFont/_setwidthProc 3 -1 roll load put", 
        "{/ct_Type0WMode1WidthProc}", 
        "{/ct_Type0WidthProc}", 
        "ifelse ", 
        "{true}", 
        "{version 0 4 getinterval cvi 2015 ge}", 
        "version length 4 ge", 
        "dup/WMode known{dup/WMode get 1 eq}{false}ifelse", 
        " /FontType get 0 eq", 
        "currentglobal 5 1 roll", 
        "findfont", 
        "1 index", 
        "1 index ", 
        "/ct_MakeBold{", 
        "definefont", 
        "ct_BoldBaseFont", 
        "/CIDFont defineresource", 
        "/_basefonto exch def", 
        "/_basefont exch def", 
        "/_Type0Identity/Identity-H 3 -1 roll[exch]composefont", 
        "ct_DefineIdentity-H", 
        "dup/CIDSystemInfo get/CIDSystemInfo exch def", 
        "dup length 3 add dict copy begin", 
        "ct_BoldBaseCIDFont", 
        "dup/FontType get dup 9 ge exch 11 le and ", 
        "/dummybold currentdict", 
        "/StrokeWidth .03 0 FontMatrix idtransform pop def", 
        "/PaintType 2 def", 
        "ct_CopyFont", 
        "dup dup length 3 add dict", 
        "definefont", 
        "currentdict ", 
        "/ct_SyntheticBold true def", 
        "/ct_StrokeWidth .03 0 FontMatrix idtransform pop def ", 
        "ct_CopyFont ", 
        "dup length 3 add dict begin ", 
        " dup/ct_SyntheticBold known", 
        "/ct_MakeBoldFont", 
        "currentdict", 
        "/FDepVector exch def", 
        "forall ", 
        " ifelse ", 
        "2 index exec", 
        "/_ctBaseFont exch", 
        "/_ctType0 exch definefont", 
        "1 index ct_Type0CopyFont ", 
        " dup/FontType get 0 eq", 
        "FDepVector ", 
        "ct_CopyFont", 
        "dup length dict", 
        "/ct_Type0CopyFont ", 
        "}forall", 
        "{def}{pop pop}ifelse", 
        "1 index/FID ne 2 index/UniqueID ne and", 
        "/ct_CopyFont{", 
        "Level2?{setglobal}if", 
        "_bcstr2 dup _setwidthProc", 
        "_bcstr2 0 3 -1 roll 256 idiv put", 
        "_bcstr2 1 2 index 256 mod put", 
        "exch begin", 
        "/BuildGlyph", 
        "/_bcstr2 2 string def", 
        "/_setwidthProc/ct_Type0WidthProc load def", 
        "/CIDFontName/ct_BoldBaseCIDFont def", 
        "/CIDFontType 1 def", 
        "/ct_BoldBaseCIDFont ", 
        " ifelse", 
        " CMapName currentdict/CMap defineresource pop", 
        " endcmap", 
        " endcidrange", 
        " <0000><FFFF>0", 
        " 1 begincidrange", 
        " endcodespacerange", 
        " <0000><FFFF>", 
        " 1 begincodespacerange", 
        " /CMapType 1 def", 
        " /CMapVersion 1.000 def", 
        " /CMapName/Identity-H def", 
        " end def", 
        " /Supplement 0 def", 
        " /Ordering(Identity)def", 
        " /Registry(Adobe)def", 
        " /CIDSystemInfo 3 dict dup begin", 
        " begincmap", 
        " 12 dict begin", 
        "/CIDInit/ProcSet findresource begin", 
        "/Identity-H/CMap resourcestatus", 
        "/ct_DefineIdentity-H", 
        "systemdict/composefont known", 
        " currentdict", 
        "moveto", 
        "_basefonto setfont", 
        "moveto", 
        "3 copy ", 
        "_setwidthProc", 
        "_bcstr1 dup 0 4 -1 roll put", 
        "_basefont setfont", 
        "exch begin", 
        "/BuildChar", 
        "/_bcstr1 1 string def", 
        "/_setwidthProc/ct_BoldRomanWidthProc load def", 
        "/Encoding cHexEncoding def ", 
        "/FontBBox[0 0 1 1]def", 
        "/FontMatrix[1 0 0 1 0 0]def", 
        "/FontType 3 def", 
        " 11 dict begin", 
        "/ct_BoldBaseFont ", 
        "/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def", 
        "/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6", 
        "/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3", 
        "/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0", 
        "/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD", 
        "/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA", 
        "/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97", 
        "/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84", 
        "/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71", 
        "/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E", 
        "/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B", 
        "/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38", 
        "/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25", 
        "[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12", 
        "/cHexEncoding", 
        " setcachedevice", 
        " 5 -1 roll true charpath pathbbox", 
        "moveto ", 
        "2 copy", 
        " pop 2 div neg -0.88", 
        " dup stringwidth ", 
        "/ct_Type0WMode1WidthProc ", 
        " setcachedevice2", 
        " 7 index 2 div .88 ", 
        " 0 -1 ", 
        " 2 index true charpath pathbbox", 
        " dup stringwidth 0 0 moveto ", 
        "/ct_Type0WidthProc ", 
        "stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth", 
        "/ct_BoldRomanWidthProc ", 
        "Level2?{currentglobal true setglobal}if", 
        "/SansSerif/MHei-Medium def", 
        "/Serif/MKai-Medium def", 
        " /Adobe-CNS1 4 dict dup begin", 
        "/SansSerif/STHeiti-Regular def", 
        "/Serif/STSong-Light def", 
        " /Adobe-GB1 4 dict dup begin", 
        "/Default Serif def", 
        "/RoundSansSerif SansSerif def", 
        "/SansSerif/HYGoThic-Medium def", 
        "/Serif/HYSMyeongJo-Medium def", 
        " /Adobe-Korea1 4 dict dup begin", 
        " ifelse", 
        "}ifelse", 
        " /RoundSansSerif exch def", 
        " ifelse", 
        " {SansSerif}", 
        " {pop pop pop pop/Jun101-Light}", 
        "{pop}{", 
        "}stopped", 
        "(fonts/Jun101-Light-83pv-RKSJ-H)status", 
        "/SansSerif/GothicBBB-Medium def", 
        "/Serif/Ryumin-Light def", 
        "/Default Serif def", 
        "/RoundSansSerif exch def", 
        "{SansSerif}", 
        "{pop pop/Jun101-Light}", 
        "/Jun101-Light-RKSJ-H/Font resourcestatus", 
        "ifelse", 
        "{SansSerif}", 
        "{pop pop/Jun101-Light}", 
        "/Jun101-Light-RKSJ-H/Font resourcestatus", 
        "/HeiseiMaruGo-W4/CIDFont resourcestatus", 
        "{pop pop/HeiseiMaruGo-W4}", 
        "/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus", 
        "{/GothicBBB-Medium}", 
        "{/GothicBBB-Medium}", 
        "/HeiseiKakuGo-W5/CIDFont resourcestatus", 
        "{pop pop/HeiseiKakuGo-W5}", 
        "/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus", 
        "/SansSerif", 
        "{/Ryumin-Light}", 
        "ifelse", 
        "{/Ryumin-Light}", 
        "/HeiseiMin-W3/CIDFont resourcestatus", 
        "pop pop", 
        "/CIDFont/Category resourcestatus", 
        "{pop pop/HeiseiMin-W3}", 
        "/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus", 
        "/Serif", 
        " Level2?", 
        " /Adobe-Japan1 4 dict dup begin", 
        "/ct_StyleDicts 4 dict dup begin", 
        "{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}", 
        "dup/FDArray known", 
        "{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}", 
        "dup/FDepVector known", 
        "{pop pop true}", 
        "dup/WidthsOnly known", 
        "/isWidthsOnlyFont", 
        "/$inVMIndex null def", 
        "/$slen 0 def", 
        "/$sname null def", 
        "{pop/Courier findfont}", 
        "@Stopped", 
        "1 index exch 8 exch dup length string cvs putinterval cvn", 
        "1 index 0(BadFont:)putinterval", 
        "dup length 8 add string exch", 
        "@Stopped", 
        "{findfont}", 
        "ifelse def", 
        "{$sname}", 
        "dup length $slen sub $slen getinterval cvn", 
        "1 index $str cvs", 
        "$sname null eq", 
        "/$inVMIndex", 
        "/$slen exch def", 
        "/$sname exch def", 
        "{null}", 
        "{dup length exch}", 
        "dup type/stringtype eq", 
        "{pop pop}", 
        "{pop pop pop}", 
        "/$Strategy exch def", 
        "{dup/$Init get exec}", 
        "dup/$Init known", 
        "currentdict", 
        "{def}forall", 
        "2 copy maxlength exch maxlength add dict", 
        "2 copy known", 
        "exch $Strategies exch ", 
        "currentdict/$Strategies known", 
        "{0 dict}", 
        "dup type/dicttype ne", 
        "$SubstituteFont", 
        "/SetSubstituteStrategy", 
        "definefont ct_VMDictPut", 
        "currentdict", 
        "/FontName 1 index dup type/stringtype eq{cvn}if def dup", 
        "/Encoding exch dup length array copy def", 
        "/FontReferenced exch def", 
        "forall", 
        "ifelse", 
        "{pop pop}", 
        "2 index/Encoding ne and", 
        "1 index/FID ne", 
        "dup dup maxlength 2 add dict", 
        " dup gcheck setglobal", 
        " {findfont}", 
        "dup type/nametype eq", 
        " 4 1 roll", 
        "currentglobal", 
        "pop pop pop", 
        "{2 copy get 3 index 3 1 roll put}", 
        "0 1 255", 
        "/Encoding get exch", 
        "1 index findfont", 
        "pop false", 
        "4 index findfont/CharStrings get length", 
        "/CharStrings get length", 
        "dup/CharStrings known", 
        "1 index dup type/nametype eq", 
        "{pop false}", 
        "{findfont}", 
        "2 index dup type/nametype eq", 
        "3 index findfont/FontReferenced get", 
        "{false}", 
        "{SharedFontDirectory 3 index get/FontReferenced known}", 
        "SharedFontDirectory 3 index known", 
        "{FontDirectory 3 index get/FontReferenced known}", 
        "FontDirectory 3 index known", 
        "{false}", 
        "{SharedFontDirectory 3 index get/FontReferenced known}", 
        "SharedFontDirectory 3 index known", 
        "currentglobal", 
        "/newencodedfont", 
        "dup length array copy", 
        "dup gcheck setglobal", 
        "currentglobal exch", 
        "/copyarray", 
        "exch setglobal", 
        "currentdict", 
        "{{def}forall}", 
        "dup null eq", 
        "forall", 
        "1 index/FID eq", 
        "2 index length add 1 add dict", 
        "dup null eq{0}{dup length}ifelse", 
        "1 index gcheck setglobal", 
        "currentglobal 3 1 roll", 
        "/copyfont", 
        "{pop}ndf", 
        "/undefinefont", 
        "ifelse", 
        "/systemfindfont exch def", 
        "/findfont 1 index def", 
        "{/systemfindfont exch def}", 
        "/globaldict where{pop end}if", 
        "dup where pop exch get", 
        "/globaldict where{/globaldict get begin}if", 
        "userdict", 
        "/findfont systemdict", 
        "{dup xcheck{bind}if def}", 
        "{pop pop pop}", 
        "1 index where", 
        "{pop pop}", 
        "{undef}", 
        "userdict/Adobe_CoolType_Core 2 copy known", 
        "systemdict/languagelevel get 2 ge", 
        "systemdict/languagelevel known", 
        "/unload", 
        "SharedFontDirectory begin", 
        "Adobe_CoolType_LVMFonts begin", 
        "Adobe_CoolType_GVMFonts begin", 
        "Adobe_CoolType_Core begin", 
        "currentdict Adobe_CoolType_Core eq", 
        "setglobal", 
        "/InVMDeepCopiedFonts 10 dict def", 
        "/InVMFontsByCMap 10 dict def", 
        "/@dictStackLevel 0 def", 
        "/@dictStackCountByLevel 32 dict def", 
        "/@opStackLevel 0 def", 
        "/@opStackCountByLevel 32 dict def", 
        "/charcode 2 string def", 
        "/CC 0 def", 
        "/AddWidths? false def", 
        " {2 copy 10 dict put}", 
        " userdict/Adobe_CoolType_Data 2 copy known not", 
        "currentglobal false setglobal", 
        "/.n/.notdef def", 
        "/rp/repeat load def", 
        "/sh/show load def", 
        "/@cshow/cshow load def", 
        "/@xyshow/xyshow load def", 
        "/@yshow/yshow load def", 
        "/@xshow/xshow load def", 
        "/ash/ashow load def", 
        "/wsh/widthshow load def", 
        "/awsh/awidthshow load def", 
        "/chp/charpath load def", 
        "/ur/undefineresource load def", 
        "/uf{dup undefinefont ct_VMDictUndef}bind def", 
        "/msf{makefont setfont}bind def", 
        "/nf/newencodedfont load def", 
        "/mo/moveto load def", 
        "CTWorkAroundBugs", 
        "Adobe_CoolType_Core", 
        "setglobal", 
        "stopped pop", 
        "{cleartomark}", 
        "stopped", 
        "128 string/CMap resourceforall", 
        "ifelse", 
        "ifelse", 
        "{stop}", 
        "{exit}", 
        "pop CTHasResourceForAllBug", 
        "/CMap undefineresource", 
        "dup/CMap findresource gcheck setglobal", 
        "pop dup 0 eq exch 1 eq or", 
        "ifelse", 
        "{resourcestatus}", 
        "{CTResourceStatus}", 
        "dup/CMap CTHasResourceStatusBug", 
        "currentglobal", 
        "pop pop", 
        "/cid_PreLoad/ProcSet resourcestatus", 
        "/CTWorkAroundBugs", 
        "}bind def", 
        "{{3 2 roll pop true}{cleartomark false}ifelse}", 
        "{cleartomark false}", 
        "({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec", 
        "/Category findresource", 
        "mark 3 1 roll", 
        "/CTResourceStatus", 
        "{cleartomark currentglobal not}", 
        "{cleartomark true}", 
        "stopped", 
        "{/steveamerige/Category resourcestatus}", 
        "/CTHasResourceStatusBug", 
        "true setglobal", 
        "{false}", 
        "{pop exit}", 
        "currentdict 1 index eq", 
        " /@shouldNotDisappearDictValue known", 
        "currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get ne dup", 
        "@_RestoreStackLevels", 
        "stopped pop", 
        "{(*){pop stop}128 string/Category resourceforall}", 
        "count @_SaveStackLevels", 
        "Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put", 
        "/@shouldNotDisappearDictValue true def", 
        "1 dict dup", 
        "Level2?", 
        "/CTHasResourceForAllBug", 
        "argCount 1 sub exch sub get", 
        "args exch", 
        "@opStackCountByLevel @opStackLevel 1 sub get", 
        "{@_PopStackLevels false}", 
        "{@_RestoreStackLevels true}", 
        "stopped", 
        "@_SaveStackLevels", 
        "/@#Stopped", 
        "0 @#Stopped", 
        "/@Stopped", 
        "cvx $error/errorname get errordict exch get exec", 
        "/@ReRaise", 
        "exch cvx exch errordict exch get exec", 
        "/@Raise", 
        "/@_PopStackLevels", 
        "ifelse", 
        "{{end}repeat}", 
        "countdictstack exch sub dup 0 gt", 
        "@dictStackCountByLevel @dictStackLevel get", 
        "/@dictStackLevel @dictStackLevel 1 sub def", 
        "args 0 argCount getinterval{}forall", 
        "{{pop}repeat}", 
        "count restCount sub dup 0 gt", 
        "@opStackCountByLevel @opStackLevel get", 
        "/@opStackLevel @opStackLevel 1 sub def", 
        "/@_RestoreStackLevels", 
        "@vmState setglobal", 
        "/@dictStackLevel @dictStackLevel 1 add def", 
        "@dictStackCountByLevel exch @dictStackLevel exch put", 
        "countdictstack 1 sub", 
        "/@opStackLevel @opStackLevel 1 add def", 
        "/restCount exch def", 
        "astore pop", 
        "args exch 0 exch getinterval ", 
        "dup 0 gt", 
        "dup/argCount exch def", 
        "{pop count}", 
        "1 index lt", 
        "count 1 sub", 
        "1 index exch/args exch put", 
        "1 index exch 0 exch putinterval", 
        "dup length 5 add array exch", 
        "get dup/args get dup length 3 index lt", 
        "put get", 
        "5 add array put", 
        "7 index", 
        "3 dict dup/args", 
        "2 copy", 
        "2 copy known not", 
        "@opStackLevel", 
        "@opStackCountByLevel", 
        "/@vmState currentglobal def false setglobal", 
        "Adobe_CoolType_Data", 
        "/@_SaveStackLevels", 
        "GlyphProcs exch get exec", 
        "exch begin", 
        "/BuildGlyph", 
        "1 index/BuildGlyph get exec", 
        "1 index/Encoding get exch get", 
        "/BuildChar", 
        "/ct_T3Defs", 
        "/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def", 
        "/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def", 
        "/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def", 
        "/_ct_i _ct_i 2 add def", 
        "rmoveto", 
        "_ct_x _ct_y moveto", 
        "{pop pop pop}", 
        "{_ct_na _ct_i 1 add get}stopped ", 
        "/ct_xyshow", 
        "0 exch", 
        "/ct_yshow", 
        "}bind def", 
        "@cshow", 
        "/_ct_x exch def", 
        "/_ct_y exch def", 
        "currentpoint", 
        "/_ct_i _ct_i 1 add def", 
        "ifelse", 
        "rmoveto", 
        "_ct_x _ct_y moveto", 
        "{pop pop}", 
        "{_ct_na _ct_i get}stopped ", 
        "ct_str1 show", 
        "ct_str1 exch 0 exch put", 
        "pop pop", 
        "/_ct_x exch def", 
        "/_ct_y exch def", 
        "currentpoint", 
        "/_ct_i 0 def", 
        "/_ct_na exch def", 
        "/ct_xshow", 
        "/ct_str1 1 string def", 
        "}ifelse", 
        "ifelse", 
        "{Adobe_CoolType_LVMFonts exch undef}", 
        "dup Adobe_CoolType_LVMFonts exch known", 
        "{Adobe_CoolType_GVMFonts exch undef}", 
        "dup Adobe_CoolType_GVMFonts exch known", 
        "/ct_VMDictUndef", 
        "}bind def", 
        "3 1 roll put", 
        "dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse", 
        "/ct_VMDictPut", 
        "{userdict/Adobe_CoolType_LVMFonts 10 dict put}", 
        "userdict/Adobe_CoolType_LVMFonts known not", 
        "{userdict/Adobe_CoolType_GVMFonts 10 dict put}", 
        "userdict/Adobe_CoolType_GVMFonts known not", 
        "/@dictStackLevel 0 def", 
        "/@dictStackCountByLevel 32 dict def", 
        "/@opStackLevel 0 def", 
        "/@opStackCountByLevel 32 dict def", 
        " begin", 
        "{2 copy 10 dict put}", 
        "userdict/Adobe_CoolType_Data 2 copy known not", 
        "currentglobal false setglobal", 
        "true setpacking", 
        "currentpacking", 
        "/SharedFontDirectory 0 dict def", 
        "/setpacking/pop load def", 
        "/currentpacking false def", 
        "/gcheck{pop false}bind def", 
        "/setglobal/pop load def", 
        "/currentglobal false def", 
        "Level2? not", 
        "if def", 
        "{pop systemdict/languagelevel get 2 ge}", 
        "systemdict/languagelevel known dup", 
        "/Level2?", 
        "/Adobe_CoolType_Version 2.30 def", 
        "userdict/Adobe_CoolType_Core 70 dict dup begin put", 
        "{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}", 
        "Adobe_CoolType_Core_Defined", 
        "/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def", 
        "/Adobe_CoolType_Passthru currentdict def", 
        "10 dict begin", 
        "%%Version: 2.30 0", 
        "%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.", 
        "%%BeginResource: procset Adobe_CoolType_Core 2.30 0", 
        "<%02x><%02x> ", 
        "<%04x><%04x> ", 
        "<%08x><%08x> ", 
        "endbfrange", 
        "<%04x>", 
        "<%02x>", 
        "%d beginbfrange", 
        "endbfchar", 
        "%d beginbfchar", 
        "endcidrange", 
        "%d begincidrange", 
        "%ld usefont", 
        "cmap table is too small", 
        "cmap format is not 0", 
        "wrong cmap format", 
        "bad address in cmap", 
        "cmap is not format 2", 
        "invalid cmap format", 
        "Unknown cmap Table", 
        "kCTCodePageJapaneseX0213 code<->glyphID conversions not supported anymore", 
        "pv-RKSJ-H", 
        "B5pc-EUC-H", 
        "missed loading bytemap", 
        "GetUIInfo failed", 
        "invalid CMap stream", 
        "invalid TTC index", 
        "invalid sfnt data", 
        "invalid font data", 
        "Can't get glyph ids", 
        "design vector too long", 
        "invalid translator", 
        "unsupported reverse unicode map", 
        "cannot construct reverse unicode map -- missing CMap", 
        "UniHojo-UCS2-H", 
        "unavailable CMap", 
        "invalid glyph ID", 
        "fBitmapCMap is valid???", 
        "No Font", 
        "cannot get uni map", 
        "invalid translator id", 
        "code page does not have predef translator", 
        "shouldn't get here", 
        "invalid font given with font dependent encoding", 
        "attempt to read a write-only stream", 
        "attempt to call seek on a write-only stream", 
        "attempt to call tell on a write-only stream", 
        "attempting to write on a read-only stream", 
        "invalid 4-byte utf16", 
        "attempt to fetch a PDC from a seekable stream", 
        "cannot compute character boundaries", 
        "Unable to create UFL context", 
        "UFLSupportPSStream::InitFont should not be reachable", 
        "%.128s-Identity-%s", 
        "Cannot download font", 
        "Download failed", 
        "Error in MM Design vector required for UFL", 
        " setcharwidth", 
        "setcachedevice", 
        "%%BeginFile: MMFauxFont.prc", 
        "%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. ", 
        "%%All Rights Reserved.", 
        "userdict /ct_EuroDict 10 dict put", 
        "ct_EuroDict begin", 
        "/ct_CopyFont ", 
        "    { 1 index /FID ne {def} {pop pop} ifelse} forall", 
        "/ct_GetGlyphOutline", 
        "   gsave", 
        "   initmatrix newpath", 
        "   exch findfont dup ", 
        "   length 1 add dict ", 
        "   begin ", 
        "/Encoding Encoding dup length array copy ", 
        "4 -1 roll", 
        "0 exch put   ", 
        "   end", 
        "   /ct_EuroFont exch definefont", 
        "   1000 scalefont setfont", 
        "   0 0 moveto", 
        "       <00> stringwidth ", 
        "       <00> false charpath", 
        "       pathbbox", 
        "       [", 
        "       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall", 
        "   grestore", 
        "   counttomark 8 add", 
        "/ct_MakeGlyphProc", 
        "   ] cvx", 
        "   /ct_PSBuildGlyph cvx", 
        "/ct_PSBuildGlyph ", 
        "gsave ", 
        "8 -1 roll pop ", 
        "7 1 roll ", 
        "        6 -2 roll ct_FontMatrix transform 6 2 roll", 
        "        4 -2 roll ct_FontMatrix transform 4 2 roll", 
        "        ct_FontMatrix transform ", 
        "currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  ", 
        "dup  9 1 roll ", 
        "currentdict /StrokeWidth 2 copy known  ", 
        "get 2 div   ", 
        "0 ct_FontMatrix dtransform pop", 
        "5 1 roll  ", 
        "4 -1 roll 4 index sub   ", 
        "4 1 roll   ", 
        "3 -1 roll 4 index sub  ", 
        "3 1 roll   ", 
        "exch 4 index add exch  ", 
        "4 index add  ", 
        "5 -1 roll pop  ", 
        "pop pop ", 
        "ifelse  ", 
        "}       ", 
        "    if  ", 
        "setcachedevice  ", 
        "        ct_FontMatrix concat", 
        "        ct_PSPathOps begin ", 
        "{ get }  ", 
        "{ pop pop 0 }  ", 
        "    ifelse  ", 
        "setlinewidth stroke  ", 
        "    fill  ", 
        "ifelse  ", 
        "    grestore", 
        "} def ", 
        "/ct_PSPathOps 4 dict dup begin ", 
        "/m {moveto} def ", 
        "/l {lineto} def ", 
        "/c {curveto} def ", 
        "/cp {closepath} def ", 
        "/ct_matrix1000 [1000 0 0 1000 0 0] def", 
        "/ct_AddGlyphProc  ", 
        "   2 index findfont dup length 4 add dict ", 
        "ct_CopyFont ", 
        "/CharStrings CharStrings dup length 1 add dict copy", 
        "      begin", 
        "         3 1 roll def  ", 
        "         currentdict ", 
        "      end ", 
        "      def", 
        "      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def", 
        "      /ct_PSBuildGlyph /ct_PSBuildGlyph load def", 
        "      /ct_PSPathOps /ct_PSPathOps load def", 
        "      currentdict", 
        "   definefont pop", 
        "systemdict /languagelevel known", 
        "/ct_AddGlyphToPrinterFont {", 
        "2 copy", 
        "ct_GetGlyphOutline 3 add -1 roll restore ", 
        "ct_MakeGlyphProc ", 
        "ct_AddGlyphProc", 
        "    pop pop restore", 
        "Adobe_CTFauxDict /$$$FONTNAME get", 
        "Adobe_CTFauxDict /$$$SUBSTITUTEBASE get", 
        "ct_EuroDict exch get", 
        "} ifelse", 
        "/AdobeSansMM ", 
        "556 0 24 -19 541 703 ", 
        "541 628 m ", 
        "510 669 442 703 354 703 c ", 
        "201 703 117 607 101 444 c ", 
        "50 444 l ", 
        "25 372 l ", 
        "97 372 l ", 
        "97 301 l ", 
        "49 301 l ", 
        "24 229 l ", 
        "103 229 l ", 
        "124 67 209 -19 350 -19 c ", 
        "435 -19 501 25 509 32 c ", 
        "509 131 l ", 
        "492 105 417 60 343 60 c ", 
        "267 60 204 127 197 229 c ", 
        "406 229 l ", 
        "430 301 l ", 
        "191 301 l ", 
        "191 372 l ", 
        "455 372 l ", 
        "479 444 l ", 
        "194 444 l ", 
        "201 531 245 624 348 624 c ", 
        "433 624 484 583 509 534 c ", 
        "556 0 m ", 
        "ct_PSBuildGlyph", 
        "/AdobeSerifMM ", 
        "500 0 10 -12 484 692 ", 
        "347 298 m ", 
        "171 298 l ", 
        "170 310 170 322 170 335 c ", 
        "170 362 l ", 
        "362 362 l ", 
        "374 403 l ", 
        "172 403 l ", 
        "184 580 244 642 308 642 c ", 
        "380 642 434 574 457 457 c ", 
        "481 462 l ", 
        "474 691 l ", 
        "449 691 l ", 
        "433 670 429 657 410 657 c ", 
        "394 657 360 692 299 692 c ", 
        "204 692 94 604 73 403 c ", 
        "22 403 l ", 
        "10 362 l ", 
        "70 362 l ", 
        "69 352 69 341 69 330 c ", 
        "69 319 69 308 70 298 c ", 
        "22 298 l ", 
        "10 257 l ", 
        "73 257 l ", 
        "97 57 216 -12 295 -12 c ", 
        "364 -12 427 25 484 123 c ", 
        "458 142 l ", 
        "425 101 384 37 316 37 c ", 
        "256 37 189 84 173 257 c ", 
        "335 257 l ", 
        "500 0 m ", 
        "ct_PSBuildGlyph ", 
        "%%EndFile", 
        "%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0", 
        "%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.", 
        "%%Version: 1.23 0", 
        "systemdict/languagelevel known dup", 
        "{currentglobal false setglobal}", 
        "{false}", 
        "userdict/Adobe_CoolType_Utility 2 copy known", 
        "{2 copy get dup maxlength 27 add dict copy}", 
        "{27 dict}", 
        "ifelse put", 
        "Adobe_CoolType_Utility", 
        "/@eexecStartData", 
        " <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E", 
        " 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C", 
        " 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def", 
        "/@recognizeCIDFont null def", 
        "/ct_Level2? exch def", 
        "/ct_Clone? 1183615869 internaldict dup", 
        "/CCRun known not", 
        "exch/eCCRun known not", 
        "ct_Level2? and or def", 
        "ct_Level2?", 
        "{globaldict begin currentglobal true setglobal}", 
        "/ct_AddStdCIDMap", 
        "ct_Level2?", 
        "Adobe_CoolType_Utility/@recognizeCIDFont currentdict put", 
        "((Hex)57 StartData", 
        " 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0", 
        " 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60", 
        " d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8", 
        " cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec", 
        "stopped", 
        " cleartomark", 
        " Adobe_CoolType_Utility/@recognizeCIDFont get", 
        " countdictstack dup array dictstack", 
        " exch 1 sub -1 0", 
        " 2 copy get 3 index eq", 
        "{1 index length exch sub 1 sub{end}repeat exit}", 
        " ifelse", 
        " pop pop", 
        " Adobe_CoolType_Utility/@eexecStartData get eexec", 
        "{cleartomark}", 
        "Adobe_CoolType_Utility/@eexecStartData get eexec", 
        "ifelse bind def", 
        "userdict/cid_extensions known", 
        "dup{cid_extensions/cid_UpdateDB known and}if", 
        " cid_extensions", 
        "/cid_GetCIDSystemInfo", 
        " 1 index type/stringtype eq", 
        "{exch cvn exch}", 
        " cid_extensions", 
        " begin", 
        " dup load 2 index known", 
        " 2 copy", 
        " cid_GetStatusInfo", 
        " dup null ne", 
        " 1 index load", 
        " 3 index get", 
        " dup null eq", 
        " {pop pop cid_UpdateDB}", 
        " 1 index/Created get eq", 
        " {exch pop exch pop}", 
        " {pop cid_UpdateDB}", 
        "{pop cid_UpdateDB}", 
        " ifelse", 
        "{cid_UpdateDB}", 
        " ifelse", 
        "{end setglobal}", 
        "/ct_UseNativeCapability? systemdict/composefont known def", 
        "/ct_MakeOCF 35 dict def", 
        "/ct_Vars 25 dict def", 
        "/ct_GlyphDirProcs 6 dict def", 
        "/ct_BuildCharDict 15 dict dup", 
        "/dst_string 1500 string def", 
        "/nullstring()def", 
        "/usewidths? true def", 
        "end def", 
        "ct_Level2?{setglobal}{pop}ifelse", 
        "ct_GlyphDirProcs", 
        "/GetGlyphDirectory", 
        "systemdict/languagelevel known", 
        "{pop/CIDFont findresource/GlyphDirectory get}", 
        "1 index/CIDFont findresource/GlyphDirectory", 
        "get dup type/dicttype eq", 
        "dup dup maxlength exch length sub 2 index lt", 
        "dup length 2 index add dict copy 2 index", 
        "/CIDFont findresource/GlyphDirectory 2 index put", 
        "exch pop exch pop", 
        "currentglobal false setglobal", 
        "3 dict begin", 
        "/vm exch def", 
        "{1 dict begin}", 
        "/$ exch def", 
        "vm setglobal", 
        "/gvm currentglobal def", 
        "$ gcheck setglobal", 
        "?{$ begin}if", 
        "/?{$ type/dicttype eq}def", 
        "userdict/Adobe_CoolType_Data known", 
        "Adobe_CoolType_Data/AddWidths? known", 
        " currentdict Adobe_CoolType_Data", 
        " begin", 
        "AddWidths?", 
        "Adobe_CoolType_Data/CC 3 index put", 
        "?{def}{$ 3 1 roll put}ifelse", 
        "CC charcode exch 1 index 0 2 index 256 idiv put", 
        "1 index exch 1 exch 256 mod put", 
        "stringwidth 2 array astore", 
        "currentfont/Widths get exch CC exch put", 
        "{?{def}{$ 3 1 roll put}ifelse}", 
        "{?{def}{$ 3 1 roll put}ifelse}", 
        "ifelse", 
        "{?{def}{$ 3 1 roll put}ifelse}", 
        "?{end}if", 
        "{gvm setglobal}", 
        "/:{string currentfile exch readstring pop}executeonly def", 
        "ct_MakeOCF", 
        "/ct_cHexEncoding", 
        "[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12", 
        "/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25", 
        "/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38", 
        "/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B", 
        "/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E", 
        "/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71", 
        "/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84", 
        "/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97", 
        "/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA", 
        "/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD", 
        "/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0", 
        "/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3", 
        "/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6", 
        "/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def", 
        "/ct_CID_STR_SIZE 8000 def", 
        "/ct_mkocfStr100 100 string def", 
        "/ct_defaultFontMtx[.001 0 0 .001 0 0]def", 
        "/ct_1000Mtx[1000 0 0 1000 0 0]def", 
        "/ct_raise{exch cvx exch errordict exch get exec stop}bind def", 
        "/ct_reraise", 
        "{cvx $error/errorname get(Error: )print dup(", 
        " )cvs print", 
        "errordict exch get exec stop", 
        "}bind def", 
        "/ct_cvnsi", 
        "1 index add 1 sub 1 exch 0 4 1 roll", 
        "2 index exch get", 
        "exch 8 bitshift", 
        "exch pop", 
        "/ct_GetInterval", 
        "Adobe_CoolType_Utility/ct_BuildCharDict get", 
        "/dst_index 0 def", 
        "dup dst_string length gt", 
        "{dup string/dst_string exch def}", 
        "1 index ct_CID_STR_SIZE idiv", 
        "/arrayIndex exch def", 
        "2 index arrayIndex get", 
        "2 index", 
        "arrayIndex ct_CID_STR_SIZE mul", 
        "dup 3 index add 2 index length le", 
        "2 index getinterval", 
        "dst_string dst_index 2 index putinterval", 
        "length dst_index add/dst_index exch def", 
        "1 index length 1 index sub", 
        "dup 4 1 roll", 
        "getinterval", 
        "pop dup dst_index add/dst_index exch def", 
        "/arrayIndex arrayIndex 1 add def", 
        "2 index dup length arrayIndex gt", 
        " {arrayIndex get}", 
        "pop pop pop", 
        "dst_string 0 dst_index getinterval", 
        "/ct_resourcestatus", 
        "currentglobal mark true setglobal", 
        "{/unknowninstancename/Category resourcestatus}", 
        "{cleartomark setglobal true}", 
        "{cleartomark currentglobal not exch setglobal}", 
        "mark 3 1 roll/Category findresource", 
        "ct_Vars/vm currentglobal put", 
        "({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec", 
        "{cleartomark false}", 
        "{{3 2 roll pop true}{cleartomark false}ifelse}", 
        "ct_Vars/vm get setglobal", 
        "{{resourcestatus}}", 
        "ifelse bind def", 
        "/CIDFont/Category ct_resourcestatus", 
        "currentglobal true setglobal", 
        "/Generic/Category findresource", 
        "dup length dict copy", 
        "dup/InstanceType/dicttype put", 
        "/CIDFont exch/Category defineresource pop", 
        "setglobal", 
        "ct_UseNativeCapability?", 
        "/CIDInit/ProcSet findresource begin", 
        "12 dict begin", 
        "begincmap", 
        "/CIDSystemInfo 3 dict dup begin", 
        " /Registry(Adobe)def", 
        " /Ordering(Identity)def", 
        " /Supplement 0 def", 
        "end def", 
        "/CMapName/Identity-H def", 
        "/CMapVersion 1.000 def", 
        "/CMapType 1 def", 
        "1 begincodespacerange", 
        "<0000><FFFF>", 
        "endcodespacerange", 
        "1 begincidrange", 
        "<0000><FFFF>0", 
        "endcidrange", 
        "endcmap", 
        "CMapName currentdict/CMap defineresource pop", 
        "/ct_Category 2 dict begin", 
        "/CIDFont 10 dict def", 
        "/ProcSet", 
        "2 dict def", 
        "/defineresource", 
        "ct_Category 1 index 2 copy known", 
        "dup dup maxlength exch length eq", 
        "dup length 10 add dict copy", 
        "ct_Category 2 index 2 index put", 
        "3 index 3 index put", 
        "pop exch pop", 
        "{pop pop/defineresource/undefined ct_raise}", 
        "}bind def", 
        "/findresource", 
        "2 index 2 copy known", 
        "{get 3 1 roll pop pop}", 
        "{pop pop/findresource/undefinedresource ct_raise}", 
        "{pop pop/findresource/undefined ct_raise}", 
        "/resourcestatus", 
        "2 index known", 
        "exch pop exch pop", 
        "0 -1 true", 
        "/ct_resourcestatus/resourcestatus load def", 
        "/ct_CIDInit 2 dict", 
        "/ct_cidfont_stream_init", 
        "dup(Binary)eq", 
        "currentfile", 
        "ct_Level2?", 
        "{cid_BYTE_COUNT()/SubFileDecode filter}", 
        "stopped", 
        "{pop pop pop}", 
        "/readstring load", 
        "dup(Hex)eq", 
        "{null exch/ASCIIHexDecode filter/readstring}", 
        "{pop exch pop(>)exch/readhexstring}", 
        "{(>)exch/readhexstring}", 
        "/StartData/typecheck ct_raise", 
        "cid_BYTE_COUNT ct_CID_STR_SIZE le", 
        "2 copy cid_BYTE_COUNT string exch exec", 
        "1 array dup", 
        "3 -1 roll", 
        "0 exch put", 
        "cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi", 
        "dup array exch 2 sub 0 exch 1 exch", 
        "2 copy", 
        "5 index", 
        "ct_CID_STR_SIZE", 
        "string", 
        "6 index exec", 
        "2 index", 
        "cid_BYTE_COUNT ct_CID_STR_SIZE mod string", 
        "3 index exec", 
        "1 index exch", 
        "1 index length 1 sub", 
        "exch put", 
        "cid_CIDFONT exch/GlyphData exch put", 
        "2 index null eq", 
        "pop pop pop", 
        "pop/readstring load", 
        "1 string exch", 
        "3 copy exec", 
        "dup length 0 eq", 
        "pop pop pop pop pop", 
        "true exit", 
        "4 index", 
        "pop pop pop pop", 
        "false exit", 
        "/StartData", 
        "dup/FDArray get 0 get/FontMatrix get", 
        "0 get 0.001 eq", 
        "dup/CDevProc known not", 
        "/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known", 
        "{pop pop pop pop pop 0 -1000 7 index 2 div 880}", 
        "/CDevProc", 
        " pop pop pop pop pop", 
        " 1 cid_temp/cid_CIDFONT get", 
        "/FDArray get 0 get", 
        "/FontMatrix get 0 get div", 
        " 7 index 2 div", 
        " 1 index 0.88 mul", 
        "/cid_temp 15 dict def", 
        "cid_temp", 
        "/cid_CIDFONT exch def", 
        "3 copy pop", 
        "dup/cid_BYTE_COUNT exch def 0 gt", 
        "ct_cidfont_stream_init", 
        "FDArray", 
        "/Private get", 
        "dup/SubrMapOffset known", 
        "/Subrs SubrCount array def", 
        "SubrMapOffset", 
        "SubrCount", 
        "SDBytes", 
        "ct_Level2?", 
        "currentdict dup/SubrMapOffset undef", 
        "dup/SubrCount undef", 
        "/SDBytes undef", 
        "/cid_SD_BYTES exch def", 
        "/cid_SUBR_COUNT exch def", 
        "/cid_SUBR_MAP_OFFSET exch def", 
        "/cid_SUBRS exch def", 
        "cid_SUBR_COUNT 0 gt", 
        "GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval", 
        "0 cid_SD_BYTES ct_cvnsi", 
        "0 1 cid_SUBR_COUNT 1 sub", 
        "exch 1 index", 
        "cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add", 
        "GlyphData exch cid_SD_BYTES ct_GetInterval", 
        "0 cid_SD_BYTES ct_cvnsi", 
        "cid_SUBRS 4 2 roll", 
        "GlyphData exch", 
        "4 index", 
        "1 index", 
        "ct_GetInterval", 
        "dup length string copy put", 
        "cleartomark pop pop", 
        "CIDFontName currentdict/CIDFont defineresource pop", 
        "end end", 
        "{cleartomark/StartData ct_reraise}", 
        "end def", 
        "/ct_saveCIDInit", 
        "/CIDInit/ProcSet ct_resourcestatus", 
        "{true}", 
        "{/CIDInitC/ProcSet ct_resourcestatus}", 
        "pop pop", 
        "/CIDInit/ProcSet findresource", 
        "ct_UseNativeCapability?", 
        "{pop null}", 
        "{/CIDInit ct_CIDInit/ProcSet defineresource pop}", 
        "{/CIDInit ct_CIDInit/ProcSet defineresource pop null}", 
        "ct_Vars exch/ct_oldCIDInit exch put", 
        "/ct_restoreCIDInit", 
        "ct_Vars/ct_oldCIDInit get dup null ne", 
        "{/CIDInit exch/ProcSet defineresource pop}", 
        "/ct_BuildCharSetUp", 
        "1 index", 
        "CIDFont", 
        "Adobe_CoolType_Utility/ct_BuildCharDict get", 
        "/ct_dfCharCode exch def", 
        "/ct_dfDict exch def", 
        "CIDFirstByte ct_dfCharCode add", 
        "dup CIDCount ge", 
        "{pop 0}", 
        "/cid exch def", 
        "GlyphDirectory cid 2 copy known", 
        "{pop pop nullstring}", 
        "dup length FDBytes sub 0 gt", 
        "FDBytes 0 ne", 
        "{0 FDBytes ct_cvnsi}", 
        "{pop 0}", 
        "/fdIndex exch def", 
        "dup length FDBytes sub FDBytes exch getinterval", 
        "/charstring exch def", 
        "cid 0 eq", 
        "{/charstring nullstring def exit}", 
        "/cid 0 def", 
        "/ct_SetCacheDevice", 
        "0 0 moveto", 
        "dup stringwidth", 
        "3 -1 roll", 
        "true charpath", 
        "pathbbox", 
        "0 -1000", 
        "7 index 2 div 880", 
        "setcachedevice2", 
        "/ct_CloneSetCacheProc", 
        "stringwidth", 
        "pop -2 div -880", 
        "0 -1000 setcharwidth", 
        "usewidths?", 
        "currentfont/Widths get cid", 
        "2 copy known", 
        "{get exch pop aload pop}", 
        "{pop pop stringwidth}", 
        "{stringwidth}", 
        "setcharwidth", 
        "0 0 moveto", 
        "/ct_Type3ShowCharString", 
        "ct_FDDict fdIndex 2 copy known", 
        "currentglobal 3 1 roll", 
        "1 index gcheck setglobal", 
        "ct_Type1FontTemplate dup maxlength dict copy", 
        "FDArray fdIndex get", 
        "dup/FontMatrix 2 copy known", 
        "{pop pop ct_defaultFontMtx}", 
        "/FontMatrix exch dup length array copy def", 
        "/Private get", 
        "/Private exch def", 
        "/Widths rootfont/Widths get def", 
        "/CharStrings 1 dict dup/.notdef", 
        "<d841272cf18f54fc13>dup length string copy put def", 
        "/ct_Type1Font exch definefont", 
        "dup 5 1 roll put", 
        "dup/CharStrings get 1 index/Encoding get", 
        "ct_dfCharCode get charstring put", 
        "rootfont/WMode 2 copy known", 
        "{pop pop 0}", 
        "1000 scalefont setfont", 
        "ct_str1 0 ct_dfCharCode put", 
        "ct_str1 exch ct_dfSetCacheProc", 
        "ct_SyntheticBold", 
        "currentpoint", 
        "ct_str1 show", 
        "newpath", 
        "ct_str1 true charpath", 
        "ct_StrokeWidth setlinewidth", 
        "stroke", 
        "{ct_str1 show}", 
        "/ct_Type4ShowCharString", 
        "ct_dfDict ct_dfCharCode charstring", 
        "FDArray fdIndex get", 
        "dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not", 
        "{ct_1000Mtx matrix concatmatrix concat}", 
        "/Private get", 
        "Adobe_CoolType_Utility/ct_Level2? get not", 
        "ct_dfDict/Private", 
        "3 -1 roll", 
        "1183615869 internaldict/superexec get exec", 
        "1183615869 internaldict", 
        "Adobe_CoolType_Utility/ct_Level2? get", 
        "{1 index}", 
        "{3 index/Private get mark 6 1 roll}", 
        "dup/RunInt known", 
        "{/RunInt get}", 
        "{pop/CCRun}", 
        "get exec", 
        "/ct_BuildCharIncremental", 
        "Adobe_CoolType_Utility/ct_MakeOCF get begin", 
        "ct_BuildCharSetUp", 
        "ct_ShowCharString", 
        "{stop}", 
        "/BaseFontNameStr(BF00)def", 
        "/ct_Type1FontTemplate 14 dict", 
        "/FontType 1 def", 
        "/FontMatrix [0.001 0 0 0.001 0 0]def", 
        "/FontBBox [-250 -250 1250 1250]def", 
        "/Encoding ct_cHexEncoding def", 
        "/PaintType 0 def", 
        "/BaseFontTemplate 11 dict", 
        "/BuildChar/ct_BuildCharIncremental load def", 
        "ct_Clone?", 
        "/FontType 3 def", 
        "/ct_ShowCharString/ct_Type3ShowCharString load def", 
        "/ct_dfSetCacheProc/ct_CloneSetCacheProc load def", 
        "/ct_SyntheticBold false def", 
        "/ct_StrokeWidth 1 def", 
        "/FontType 4 def", 
        "/Private 1 dict dup/lenIV 4 put def", 
        "/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def", 
        "/PaintType 0 def", 
        "/ct_ShowCharString/ct_Type4ShowCharString load def", 
        "/ct_str1 1 string def", 
        "/BaseFontDictSize BaseFontTemplate length 5 add def", 
        "/ct_matrixeq", 
        "true 0 1 5", 
        "dup 4 index exch get exch 3 index exch get eq and", 
        "dup not", 
        "{exit}", 
        "exch pop exch pop", 
        "/ct_makeocf", 
        "15 dict", 
        "exch/WMode exch def", 
        "exch/FontName exch def", 
        "/FontType 0 def", 
        "/FMapType 2 def", 
        "dup/FontMatrix known", 
        "{dup/FontMatrix get/FontMatrix exch def}", 
        "{/FontMatrix matrix def}", 
        "/bfCount 1 index/CIDCount get 256 idiv 1 add", 
        "dup 256 gt{pop 256}if def", 
        "/Encoding", 
        "256 array 0 1 bfCount 1 sub{2 copy dup put pop}for", 
        "bfCount 1 255{2 copy bfCount put pop}for", 
        "/FDepVector bfCount dup 256 lt{1 add}if array def", 
        "BaseFontTemplate BaseFontDictSize dict copy", 
        "/CIDFont exch def", 
        "CIDFont/FontBBox known", 
        "{CIDFont/FontBBox get/FontBBox exch def}", 
        "CIDFont/CDevProc known", 
        "{CIDFont/CDevProc get/CDevProc exch def}", 
        "BaseFontNameStr 3(0)putinterval", 
        "0 1 bfCount dup 256 eq{1 sub}if", 
        "FDepVector exch", 
        "2 index BaseFontDictSize dict copy", 
        "dup/CIDFirstByte exch 256 mul def", 
        "FontType 3 eq", 
        "{/ct_FDDict 2 dict def}", 
        "1 index 16", 
        "BaseFontNameStr 2 2 getinterval cvrs pop", 
        "BaseFontNameStr exch definefont", 
        "ct_Clone?", 
        "{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}", 
        "FontName", 
        "currentdict", 
        "dup 1000 scalefont setfont", 
        "ct_BuildCharDict", 
        "/usewidths? false def", 
        "currentfont/Widths get", 
        "exch/CIDFont get/GlyphDirectory get", 
        "dup charcode exch 1 index 0 2 index 256 idiv put", 
        "1 index exch 1 exch 256 mod put", 
        "stringwidth 2 array astore def", 
        "/usewidths? true def", 
        "grestore", 
        "{exch pop}", 
        "currentglobal true setglobal", 
        "/ct_ComposeFont", 
        "2 index/CMap ct_resourcestatus", 
        "{pop pop exch pop}", 
        "/CIDInit/ProcSet findresource", 
        "12 dict", 
        "begincmap", 
        "/CMapName 3 index def", 
        "/CMapVersion 1.000 def", 
        "/CMapType 1 def", 
        "exch/WMode exch def", 
        "/CIDSystemInfo 3 dict dup", 
        "/Registry(Adobe)def", 
        "/Ordering", 
        "CMapName ct_mkocfStr100 cvs", 
        "(Adobe-)search", 
        "pop pop", 
        "(-)search", 
        "dup length string copy", 
        "exch pop exch pop", 
        "{pop(Identity)}", 
        "{pop (Identity)}", 
        "/Supplement 0 def", 
        "1 begincodespacerange", 
        "<0000><FFFF>", 
        "endcodespacerange", 
        "1 begincidrange", 
        "<0000><FFFF>0", 
        "endcidrange", 
        "endcmap", 
        "CMapName currentdict/CMap defineresource pop", 
        "composefont", 
        "3 2 roll pop", 
        "0 get/CIDFont findresource", 
        "ct_makeocf", 
        "/ct_MakeIdentity", 
        "1 index/CMap ct_resourcestatus", 
        "/CIDInit/ProcSet findresource begin", 
        "12 dict begin", 
        "begincmap", 
        "/CMapName 2 index def", 
        "/CMapVersion 1.000 def", 
        "/CMapType 1 def", 
        "/CIDSystemInfo 3 dict dup", 
        "/Registry(Adobe)def", 
        "/Ordering", 
        "CMapName ct_mkocfStr100 cvs", 
        "(Adobe-)search", 
        "pop pop", 
        "(-)search", 
        "{dup length string copy exch pop exch pop}", 
        "{pop(Identity)}", 
        "{pop(Identity)}", 
        "/Supplement 0 def", 
        "1 begincodespacerange", 
        "<0000><FFFF>", 
        "endcodespacerange", 
        "1 begincidrange", 
        "<0000><FFFF>0", 
        "endcidrange", 
        "endcmap", 
        "CMapName currentdict/CMap defineresource pop", 
        "exch pop", 
        "currentdict readonly pop", 
        "%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0", 
        "%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.", 
        "%%Version: 1.0 0", 
        "userdict/ct_T42Dict 15 dict put", 
        "ct_T42Dict begin", 
        "/Is2015?", 
        " version", 
        "/AllocGlyphStorage", 
        " Is2015?", 
        "{string}forall", 
        " }ifelse", 
        "/Type42DictBegin", 
        "25 dict begin", 
        " /FontName exch def", 
        " /CharStrings 256 dict ", 
        " /.notdef 0 def", 
        " currentdict ", 
        "end def", 
        " /Encoding exch def", 
        " /PaintType 0 def", 
        " /FontType 42 def", 
        " /FontMatrix[1 0 0 1 0 0]def", 
        " 4 array astore cvx/FontBBox exch def", 
        " /sfnts", 
        "/Type42DictEnd ", 
        " currentdict dup/FontName get exch definefont end", 
        "ct_T42Dict exch", 
        "dup/FontName get exch put", 
        "/RD{string currentfile exch readstring pop}executeonly def", 
        "/PrepFor2015", 
        "Is2015?", 
        "/GlyphDirectory ", 
        " dict def", 
        " sfnts 0 get", 
        " 2 index", 
        "(glyx)", 
        " putinterval", 
        " 2 index ", 
        "(locx)", 
        "}ifelse", 
        "/AddT42Char", 
        "/GlyphDirectory get ", 
        "/sfnts get", 
        "4 index", 
        "3 index", 
        " 2 index", 
        "putinterval", 
        "}ifelse", 
        "/T0AddT42Mtx2", 
        "/CIDFont findresource/Metrics2 get begin def end", 
        "%%BeginResource: file Pscript_T3Hdr PSVER", 
        "systemdict/languagelevel known{currentglobal true setglobal}if", 
        "userdict/ct_T3HdrDict 13 dict put", 
        "ct_T3HdrDict begin", 
        "32/FontType resourcestatus", 
        "pop pop ", 
        "false ", 
        " false", 
        "}exec/Is2016andT32? exch pop false def", 
        "Is2016andT32? ", 
        "/CIDInit/ProcSet findresource begin", 
        " 10 dict begin", 
        " begincmap", 
        "/CIDSystemInfo 3 dict dup begin", 
        "/Registry(Adobe)def", 
        "/Ordering(Identity)def", 
        "/Supplement 0 def", 
        " end def", 
        "/CMapType 0 def", 
        "/WMode 0 def", 
        " 1 begincodespacerange", 
        "<0000><ffff>", 
        " endcodespacerange", 
        " 1 begincidrange", 
        "<0000><ffff>0", 
        " endcidrange", 
        " endcmap", 
        "/DrvSBCMap currentdict/CMap defineresource pop", 
        "/T32RsrcBegin", 
        " Is2016andT32?{", 
        " /BitmapFontInit/ProcSet findresource begin", 
        "/T32RsrcEnd", 
        "/AddT32Char", 
        " 6 1 roll", 
        " 0 get", 
        " 7 1 roll", 
        " pop pop", 
        " 5 1 roll", 
        " findfont/TT32R get", 
        " addglyph", 
        "/AddT3Char", 
        " findfont dup", 
        " 5 2 roll", 
        " exch dup", 
        " length 0 gt{", 
        " 1 index", 
        " 4 exch put", 
        " (imagemask)cvx cvn 5 exch put", 
        " 3 -1 roll", 
        "/CharProcs get 3 1 roll", 
        "/Metrics get 3 1 roll put", 
        "/AddT3T32Char ", 
        "Is2016andT32?{", 
        "load def", 
        "/GreNewFontT32", 
        " 5 dict", 
        " begin", 
        " /FontMatrix exch def", 
        " /FontBBox exch def", 
        " exch pop", 
        " /CIDFontType 4 def", 
        " currentdict", 
        " /CIDFont defineresource", 
        " 3 -1 roll dup", 
        " /DrvSBCMap", 
        " 5 -1 roll[exch]", 
        " composefont", 
        " dup length dict copy dup/FID undef begin", 
        " exch/TT32R exch def currentdict end definefont ", 
        " /BitmapFontInit/ProcSet findresource begin", 
        " /TT32R get[14 0 0 0 0 0]<>0 4 -1 roll addglyph", 
        "}bind def ", 
        "/GreNewFontT3", 
        " 11 dict", 
        " /FontType 3 def", 
        " /CharProcs 129 dict def", 
        " CharProcs/.notdef{}put", 
        " /Metrics 129 dict def", 
        " Metrics/.notdef 3 -1 roll put", 
        " /BuildChar", 
        " userdict begin", 
        "/char exch def", 
        "/fontdict exch def", 
        "/charname fontdict/Encoding get char get def", 
        "fontdict/Metrics get charname 2 copy known", 
        "get aload pop", 
        "pop/.notdef get aload pop", 
        " }ifelse", 
        "setcachedevice", 
        "fontdict", 
        " Encoding char get", 
        " CharProcs exch 2 copy known", 
        "pop/.notdef get", 
        " /FontName 1 index def", 
        " definefont pop", 
        "/GreNewFont", 
        " Is2016andT32?", 
        "GreNewFontT32 ", 
        "GreNewFontT3", 
        "/CopyT3Hdr", 
        "dup maxlength dict begin", 
        " 1 index/FID ne", 
        "{pop pop}ifelse", 
        "}forall", 
        " currentdict end", 
        " 4 1 roll", 
        "Is2016andT32?", 
        "/CIDFont findresource removeall", 
        "/CIDFont undefineresource", 
        "undefinefont", 
        "pop UDF", 
        "systemdict/languagelevel known{setglobal}if", 
        "%%BeginResource: file Pscript_CFF PSVER", 
        "userdict/ct_CffDict 6 dict put", 
        "ct_CffDict begin", 
        "/F0Subr", 
        " systemdict/internaldict known ", 
        "1183615869 systemdict/internaldict get exec ", 
        "/FlxProc known{save true}{false}ifelse", 
        "userdict/internaldict known not ", 
        " userdict/internaldict ", 
        "count 0 eq ", 
        "{/internaldict errordict/invalidaccess get exec}if ", 
        " dup type/integertype ne ", 
        " dup 1183615869 eq", 
        "{pop 0}", 
        "{/internaldict errordict/invalidaccess get exec}", 
        " ifelse ", 
        " dup 14 get 1 25 dict put ", 
        " bind executeonly put ", 
        " 1183615869 userdict/internaldict get exec ", 
        " systemdict/internaldict known not ", 
        "{100 dict/begin cvx/mtx matrix/def cvx}if ", 
        " systemdict/currentpacking known{currentpacking true setpacking}if ", 
        " systemdict/internaldict known{", 
        " 1183615869 systemdict/internaldict get exec ", 
        " dup/$FlxDict known not{", 
        " dup dup length exch maxlength eq ", 
        "{pop userdict dup/$FlxDict known not", 
        "{100 dict begin/mtx matrix def ", 
        " dup/$FlxDict currentdict put end}if}", 
        " dup/$FlxDict currentdict put end}", 
        "}if/$FlxDict get begin}if ", 
        " grestore ", 
        "/exdef{exch def}def ", 
        "/dmin exch abs 100 div def ", 
        "/epX exdef/epY exdef ", 
        "/c4y2 exdef/c4x2 exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef ", 
        "/c3y2 exdef/c3x2 exdef/c3y1 exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef ", 
        "/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def/c2y2 c4y2 def ", 
        "/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def ", 
        "/PickCoords{", 
        "{c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}", 
        "{c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}", 
        "/y5 exdef/x5 exdef/y4 exdef/x4 exdef/y3 exdef/x3 exdef ", 
        "/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0 exdef ", 
        " mtx currentmatrix pop ", 
        " mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or ", 
        "{/flipXY -1 def}", 
        "{mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or ", 
        "{/flipXY 1 def}", 
        "{/flipXY 0 def}", 
        " ifelse}", 
        "/erosion 1 def ", 
        " 1183615869 systemdict/internaldict get exec dup ", 
        "/erosion known ", 
        "{/erosion get/erosion exch def}", 
        " yflag ", 
        " flipXY 0 eq c3y2 c4y2 eq or ", 
        "{false PickCoords}", 
        "/shrink c3y2 c4y2 eq ", 
        "{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse def ", 
        "/yshrink{c4y2 sub shrink mul c4y2 add}def ", 
        "/c1y0 c3y0 yshrink def/c1y1 c3y1 yshrink def ", 
        "/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def ", 
        "/c1x0 c3x0 def/c1x1 c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def ", 
        "/dY 0 c3y2 c1y2 sub round ", 
        " dtransform flipXY 1 eq{exch}if pop abs def ", 
        " dY dmin lt PickCoords ", 
        " y2 c1y2 sub abs 0.001 gt{", 
        " c1x2 c1y2 transform flipXY 1 eq{exch}if ", 
        "/cx exch def/cy exch def ", 
        "/dY 0 y2 c1y2 sub round dtransform flipXY 1 eq{exch}", 
        " if pop def ", 
        " dY round dup 0 ne ", 
        "{/dY exdef}", 
        "{pop dY 0 lt{-1}{1}ifelse/dY exdef}", 
        " ifelse ", 
        "/erode PaintType 2 ne erosion 0.5 ge and def ", 
        " erode{/cy cy 0.5 sub def}if ", 
        "/ey cy dY add def", 
        "/ey ey ceiling ey sub ey floor add def", 
        " erode{/ey ey 0.5 add def}if", 
        " ey cx flipXY 1 eq{exch}if itransform exch pop ", 
        " y2 sub/eShift exch def ", 
        "/y1 y1 eShift add def/y2 y2 eShift add def/y3 y3 ", 
        " eShift add def ", 
        "}ifelse ", 
        " flipXY 0 eq c3x2 c4x2 eq or ", 
        "{/shrink c3x2 c4x2 eq ", 
        "{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def ", 
        "/xshrink{c4x2 sub shrink mul c4x2 add}def ", 
        "/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def ", 
        "/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def ", 
        "/c1y0 c3y0 def/c1y1 c3y1 def/c2y0 c4y0 def/c2y1 c4y1 def ", 
        "/dX c3x2 c1x2 sub round 0 dtransform ", 
        " flipXY -1 eq{exch}if pop abs def ", 
        " dX dmin lt PickCoords ", 
        " x2 c1x2 sub abs 0.001 gt{", 
        " c1x2 c1y2 transform flipXY -1 eq{exch}if ", 
        "/cy exch def/cx exch def", 
        "/dX x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}if pop def ", 
        " dX round dup 0 ne ", 
        "{/dX exdef}", 
        "{pop dX 0 lt{-1}{1}ifelse/dX exdef}", 
        "/erode PaintType 2 ne erosion .5 ge and def ", 
        " erode{/cx cx .5 sub def}if ", 
        "/ex cx dX add def ", 
        "/ex ex ceiling ex sub ex floor add def ", 
        " erode{/ex ex .5 add def}if ", 
        " ex cy flipXY -1 eq{exch}if itransform pop ", 
        " x2 sub/eShift exch def ", 
        "/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add def ", 
        "}ifelse ", 
        " x2 x5 eq y2 y5 eq or ", 
        "{x5 y5 lineto}", 
        "{x0 y0 x1 y1 x2 y2 curveto ", 
        " x3 y3 x4 y4 x5 y5 curveto}", 
        " epY epX", 
        " systemdict/currentpacking known{exch setpacking}if", 
        "/exec cvx/end cvx ", 
        " executeonly ", 
        " exch ", 
        "{pop true exch restore}", 
        "{1183615869 userdict/internaldict get exec ", 
        " exch/FlxProc exch put true}", 
        "{1183615869 systemdict/internaldict get exec ", 
        " dup length exch maxlength eq ", 
        "{false}", 
        " ifelse}", 
        "}ifelse ", 
        " systemdict/internaldict known ", 
        "{1183615869 systemdict/internaldict get exec/FlxProc get exec}", 
        "{1183615869 userdict/internaldict get exec/FlxProc get exec}", 
        " ifelse", 
        "}executeonly def", 
        "/F1Subr", 
        "{gsave currentpoint newpath moveto}bind def ", 
        "/F2Subr", 
        "{currentpoint grestore gsave currentpoint newpath moveto}bind def", 
        "/HSSubr ", 
        "systemdict/internaldict known not", 
        "{pop 3}", 
        "{1183615869 systemdict/internaldict get exec", 
        " dup/startlock known", 
        "{/startlock get exec}", 
        "{dup/strtlck known", 
        "{/strtlck get exec}", 
        " ifelse}", 
        " ifelse", 
        "Minion Cyr Bold", 
        "Minion Cyr Regular", 
        "NimbusSanPEEUltLig", 
        "NimbusSanPEELigCon", 
        "NimbusSanPEELig", 
        "NimbusSanPEECon", 
        "NimbusSanPEEBlaCon", 
        "NimbusSanPEEBla", 
        "NimbusSanPEE", 
        "Frutiger CE 95", 
        "Frutiger CE 55", 
        "Frutiger CE 45", 
        "Helvetica CE Narrow", 
        "NIS-Numeric", 
        "AdobeSansXMM", 
        "Reporter Two", 
        "Reporter", 
        "Reporter-Two", 
        "Bauer Bodoni Roman", 
        "Bauer Bodoni", 
        "MT Extra Plain", 
        "MT Extra", 
        "Mt-ExtraPlain", 
        "Century Schoolbook Bold", 
        "Century Schoolbook", 
        "CenturySchoolbook-Bold", 
        "Letter Gothic Bold", 
        "Letter Gothic", 
        "Goudy Old Style", 
        "Al Bayan Bold", 
        "ALBAYANBold", 
        "Al Bayan Plain", 
        "Al Bayan", 
        "ALBAYANPlain", 
        "Seibi Kaisho Light", 
        "Seibi Kaisho", 
        "NIS-BK-83pv-RKSJ-H", 
        "Rudelsberg Plain", 
        "Rudelsberg", 
        "HYHaeSo-Medium-HanjaB", 
        "HYPillGi", 
        "HYPillGi-Light", 
        "HYHaeSo Medium", 
        "HYHaeSo", 
        "HYHaeSo-Medium", 
        "HYHeadLine Bold", 
        "HYHeadLine-Bold", 
        "HYHeadLine Medium", 
        "HYHeadLine", 
        "HYHeadLine-Medium", 
        "HYShortSamul Bold", 
        "HYShortSamul-Bold", 
        "HYShortSamul Light", 
        "HYShortSamul-Light", 
        "HYShortSamul Medium", 
        "HYShortSamul", 
        "HYShortSamul-Medium", 
        "HYYeatGul Bold", 
        "HYYeatGul-Bold", 
        "HYYeatGul Medium", 
        "HYYeatGul", 
        "HYYeatGul-Medium", 
        "HYPost Bold", 
        "HYPost-Bold", 
        "HYPost Light", 
        "HYPosT-Light", 
        "HYPost Medium", 
        "HYPost", 
        "HYPosT-Medium", 
        "HYYeaSo Medium", 
        "HYYeaSo", 
        "HYYeaSo-Medium", 
        "HYYeasoL Bold", 
        "HYYeasoL", 
        "HYYeasoL-Bold", 
        "HYWulNun Bold", 
        "HYWulNun-Bold", 
        "HYWulNun Extra", 
        "HYWulNun-Extra", 
        "HYWulNun Light", 
        "HYWulNun-Light", 
        "HYWulNun Medium", 
        "HYWulNun", 
        "HYWulNun-Medium", 
        "HYSeNse Bold", 
        "HYSeNse-Bold", 
        "HYSeNse Light", 
        "HYSeNse", 
        "HYSeNse-Light", 
        "HYGoThic Light", 
        "HYGoThic-Light", 
        "HYMyeongJo Light", 
        "HYMyeongJo-Light", 
        "HYSupunG Bold", 
        "HYSupunG-Bold", 
        "HYSupunG Extra", 
        "HYSupunG-Extra", 
        "HYSupunG Light", 
        "HYSupunG-Light", 
        "HYSupunG Medium", 
        "HYSupunG", 
        "HYSupunG-Medium", 
        "HYSooN MyeongJo", 
        "HYSooN", 
        "HYSooN-MyeongJo", 
        "HYKHeadLine Bold", 
        "HYKHeadLine-Bold", 
        "HYKHeadLine Medium", 
        "HYKHeadLine", 
        "HYKHeadLine-Medium", 
        "HYGoThic Extra", 
        "HYGoThic-Extra", 
        "HYMyeongJo Extra", 
        "HYMyeongJo-Extra", 
        "HYGungSo Bold", 
        "HYGungSo", 
        "HYGungSo-Bold", 
        "HYGraPhic Bold", 
        "HYGraPhic-Bold", 
        "HYGraPhic Medium", 
        "HYGraPhic", 
        "HYGraPhic-Medium", 
        "HYLongSamul Bold", 
        "HYLongSamul-Bold", 
        "HYLongSamul Light", 
        "HYLongSamul-Light", 
        "HYLongSamul Medium", 
        "HYLongSamul", 
        "HYLongSamul-Medium", 
        "HYRGoThic Bold", 
        "HYRGoThic-Bold", 
        "HYRGoThic Medium", 
        "HYRGoThic", 
        "HYRGoThic-Medium", 
        "HYMokGak Bold", 
        "HYMokGak", 
        "HYMokGak-Bold", 
        "HYPMokGak Bold", 
        "HYPMokGak", 
        "HYPMokGak-Bold", 
        "HYMokPan Bold", 
        "HYMokPan-Bold", 
        "HYMokPan Light", 
        "HYMokPan", 
        "HYMokPan-Light", 
        "HYPMokPan Bold", 
        "HYPMokPan-Bold", 
        "HYBackSong Bold", 
        "HYBackSong", 
        "HYBackSong-Bold", 
        "HYBuDle Medium", 
        "HYBuDle", 
        "HYBuDle-Medium", 
        "HYBuwhaL Bold", 
        "HYBuwhaL-Bold", 
        "HYBuwhaL Light", 
        "HYBuwhaL-Light", 
        "HYBuwhaL Medium", 
        "HYBuwhaL", 
        "HYBuwhaL-Medium", 
        "HYSinGraPhic Medium", 
        "HYSinGraPhic", 
        "HYSinGraPhic-Medium", 
        "HYSinMyeongJo Medium", 
        "HYSinMyeongJo-Medium", 
        "HYSinMun MyeongJo", 
        "MyeongJo", 
        "HYSinMun", 
        "HYSinMun-MyeongJo", 
        "HYGoThic Medium", 
        "HYGoThic-Medium", 
        "HYMyeongJo Medium", 
        "HYMyeongJo-Medium", 
        "HYCrysTal Bold", 
        "HYCrysTal-Bold", 
        "HYCrysTal Light", 
        "HYCrysTal-Light", 
        "HYCrysTal Medium", 
        "HYCrysTal", 
        "HYCrysTal-Medium", 
        "HYTaJa Bold", 
        "HYTaJa-Bold", 
        "HYTaJa Light", 
        "HYTaJa-Light", 
        "HYTaJa Medium", 
        "HYTaJa", 
        "HYTaJa-Medium", 
        "HYTaJaFull Bold", 
        "HYTaJaFull-Bold", 
        "HYTaJaFull Light", 
        "HYTaJaFull-Light", 
        "HYTaJaFull Medium", 
        "HYTaJaFull", 
        "HYTaJaFull-Medium", 
        "HYGoThic Bold", 
        "HYGoThic", 
        "HYGoThic-Bold", 
        "HYMyeongJo Bold", 
        "HYMyeongJo-Bold", 
        "HYTeBack Bold", 
        "HYTeBack", 
        "HYTeBack-Bold", 
        "HYMyeongJo Ultra", 
        "HYMyeongJo", 
        "HYMyeongJo-Ultra", 
        "HYSinMyeongJo Bold", 
        "HYSinMyeongJo", 
        "HYSinMyeongJo-Bold", 
        "HYTeGoThic Bold", 
        "HYTeGoThic", 
        "HYTeGoThic-Bold", 
        "GulimChe", 
        "GungsuhChe", 
        "DotumChe", 
        "YentiEG Light GB", 
        "YentiEG", 
        "YentiEG-Light-GB", 
        "ChunsungCSEG Bold GB", 
        "ChunsungCSEG", 
        "ChunsungCSEG-Bold-GB", 
        "BatangChe", 
        "HYPMokPan Light", 
        "HYPMokPan", 
        "HYPMokPan-Light", 
        "Regular", 
        "PTBarnum", 
        "HFrankfurter Normal", 
        "HFrankfurter", 
        "HFrankfurter-Normal", 
        "Frankfurter Normal", 
        "Normal", 
        "Frankfurter", 
        "Frankfurter-Normal", 
        "HYHaeSo-Medium-HanjaA", 
        "HYSinMyeongJo-Medium-HanjaA", 
        "HYSinMyeongJo-Medium-HanjaB", 
        "HYHaeSo-Medium-HanjaC", 
        "Medium", 
        "HYSinMyeongJo-Medium-HanjaC", 
        "Univers-UltraCondensed", 
        "name too long", 
        "style name too long", 
        "family name too long", 
        "Adobe Corporate ID", 
        "Italic", 
        "SimSun-18030", 
        "NSimSun-18030", 
        "tchehmeeminitialarabic", 
        "shaddafathatanarabic", 
        "reshtserehebrew", 
        "reshtsere#", 
        "reshshevahebrew", 
        "reshsheva#", 
        "reshsegolhebrew", 
        "reshsegol#", 
        "reshqubutshebrew", 
        "reshqubuts#", 
        "reshqamatshebrew", 
        "reshqamats#", 
        "reshpatahhebrew", 
        "reshpatah#", 
        "reshholamhebrew", 
        "reshholam#", 
        "reshhiriqhebrew", 
        "reshhiriq#", 
        "reshhatafsegolhebrew", 
        "reshhatafsegol#", 
        "reshhatafpatahhebrew", 
        "reshhatafpatah#", 
        "rehyehaleflamarabic", 
        "qoftserehebrew", 
        "qoftsere#", 
        "qofshevahebrew", 
        "qofsheva#", 
        "qofsegolhebrew", 
        "qofsegol#", 
        "qofqubutshebrew", 
        "qofqubuts#", 
        "qofqamatshebrew", 
        "qofqamats#", 
        "qofpatahhebrew", 
        "qofpatah#", 
        "qofholamhebrew", 
        "qofholam#", 
        "qofhiriqhebrew", 
        "qofhiriq#", 
        "qofhatafsegolhebrew", 
        "qofhatafsegol#", 
        "qofhatafpatahhebrew", 
        "qofhatafpatah#", 
        "noonhehinitialarabic", 
        "lammeemkhahinitialarabic", 
        "lammeemjeeminitialarabic", 
        "lamedholamhebrew", 
        "lamedholamdageshhebrew", 
        "lamedholamdagesh#", 
        "lamedholam#", 
        "hamzasukunarabic", 
        "hamzalowkasratanarabic", 
        "hamzalowkasraarabic", 
        "hamzafathatanarabic", 
        "hamzafathaarabic", 
        "hamzadammatanarabic", 
        "hamzadammaarabic", 
        "finalkafshevahebrew", 
        "finalkafsheva#", 
        "finalkafqamatshebrew", 
        "finalkafqamats#", 
        "dalettserehebrew", 
        "dalettsere#", 
        "daletshevahebrew", 
        "daletsheva#", 
        "daletsegolhebrew", 
        "daletsegol#", 
        "daletqubutshebrew", 
        "daletqubuts#", 
        "daletqamatshebrew", 
        "daletqamats#", 
        "daletpatahhebrew", 
        "daletpatah#", 
        "daletholamhebrew", 
        "daletholam#", 
        "dalethiriqhebrew", 
        "dalethiriq#", 
        "dalethatafsegolhebrew", 
        "dalethatafsegol#", 
        "dalethatafpatahhebrew", 
        "dalethatafpatah#", 
        "miotified", 
        "glittle", 
        "iiotified", 
        "mallhiragana", 
        "katakana", 
        "mhalfwidth", 
        "yekorean", 
        "okorean", 
        "yabengali", 
        "faarmenian", 
        "[gurmukhi", 
        "0Vragana", 
        "katakana", 
        "qefgadol", 
        "6dagesh", 
        "bopomofo", 
        "~caron", 
        "umflex", 
        "|accent", 
        "descender", 
        "ieresis", 
        "0\\hiragana", 
        "katakana", 
        "bengali", 
        "gujarati", 
        "frmukhi", 
        "inferior", 
        "0oldstyle", 
        "persian", 
        " psuperior", 
        "widthjoiner", 
        "nonjoiner", 
        "hbopomofo", 
        "jearmenian", 
        "descender", 
        "ieresis", 
        "0Xihiragana", 
        "katakana", 
        "linebelow", 
        "0^ohiragana", 
        "katakana", 
        "retroflexhook", 
        "stroke", 
        "0Zuhiragana", 
        "katakana", 
        "katakana", 
        "fhalfwidth", 
        "'waenthai", 
        "superior", 
        "turned", 
        "=abovecmb", 
        "bopomofo", 
        "circle", 
        "dieresis", 
        "otaccent", 
        "meharmenian", 
        "superior", 
        "3Naadosquare", 
        "bengali", 
        "1Rekorean", 
        "gujarati", 
        "/rmukhi", 
        "&hamzaabovearabic#", 
        "iragana", 
        "katakana", 
        "halfwidth", 
        "1Qorean", 
        "Nmakkanthai", 
        "smallhiragana", 
        "katakana", 
        "lhalfwidth", 
        "circle", 
        "wumflex", 
        "dieresis", 
        "otaccent", 
        "barree", 
        "&hamzaabove", 
        "Xsolated", 
        "threedotsbelow", 
        "1Vkorean", 
        "1Uokorean", 
        "rinhieuhkorean", 
        "rahbenyomo", 
        "udieresis", 
        "sieungkorean", 
        "pansioskorean", 
        "sioskorean", 
        "uiarmenian", 
        "1bkorean", 
        "&/nyang", 
        "wnarmenian", 
        "9dagesh", 
        "\u001fpatah", 
        "hiragana", 
        "ikorean", 
        "katakana", 
        "halfwidth", 
        "1[orean", 
        "smallhiragana", 
        "katakana", 
        "nhalfwidth", 
        "tgreek", 
        "yaekorean", 
        "korean", 
        "ingthai", 
        "zogegrammeni", 
        "Egreekcmb", 
        "superior", 
        "uhiragana", 
        "ikorean", 
        "katakana", 
        "halfwidth", 
        "1`orean", 
        ")belowcmb", 
        "lowmod", 
        "~warmenian", 
        "ikatakana", 
        "ramabengali", 
        "gujarati", 
        "sargabengali", 
        "gujarati", 
        "xoarmenian", 
        "icediterationhiragana", 
        "katakana", 
        "markkana", 
        "halfwidth", 
        "katakana", 
        "}tilde", 
        "uhiragana", 
        "katakana", 
        "1Yekorean", 
        "hiragana", 
        "katakana", 
        "halfwidth", 
        "1Xorean", 
        "smallhiragana", 
        "katakana", 
        "3Wttosquare", 
        "vedash", 
        "4yunderscorevertical", 
        "$hamzaabove", 
        "bsquare", 
        "circle", 
        "uumflex", 
        "dieresis", 
        "otaccent", 
        "ehiragana", 
        "ierstrass", 
        "katakana", 
        "1^orean", 
        "1]okorean", 
        "hitebullet", 
        "circle", 
        "inverse", 
        "ornerbracketleft", 
        "Cketleftvertical", 
        "ketright", 
        "Dketrightvertical", 
        "diamond", 
        "containingblacksmalldiamond", 
        "ownpointingsmalltriangle", 
        "ngtriangle", 
        "leftpointingsmalltriangle", 
        "ngtriangle", 
        "nticularbracketleft", 
        "bracketright", 
        "rightpointingsmalltriangle", 
        "ingtriangle", 
        "smallsquare", 
        "&:ilingface", 
        "telephone", 
        "ortoiseshellbracketleft", 
        "ellbracketright", 
        "uppointingsmalltriangle", 
        "triangle", 
        "ihiragana", 
        "katakana", 
        "1_orean", 
        "ohiragana", 
        "$uparen", 
        "!qroman", 
        "stroke", 
        "uperior", 
        "!Tirds", 
        "engali", 
        "1(opomofo", 
        "umflex", 
        "wbelow", 
        "Qdattadeva", 
        "qblacute#", 
        "ieresis", 
        "sbelow", 
        "macron", 
        "otbelow", 
        "ujarati", 
        "rmukhi", 
        "0Fhiragana", 
        "ookabove", 
        "dotbelow", 
        "hookabove", 
        "qungarumlaut", 
        "invertedbreve", 
        "katakana", 
        "shalfwidth", 
        "1\\orean", 
        "kmacron", 
        "{dieresis", 
        "Atragurmukhi", 
        "_nderscore", 
        "3vertical", 
        "versal", 
        "sogonek", 
        "perdot", 
        "dieresis", 
        "tackbelowcmb", 
        "sragurmukhi", 
        "^short", 
        "0Emallhiragana", 
        "katakana", 
        "ihalfwidth", 
        "traight", 
        "stroke", 
        "itilde", 
        "yacute", 
        "ubelow", 
        "ubengali", 
        "gujarati", 
        "rmukhi", 
        "Bmatragurmukhi", 
        "vowelsignbengali", 
        "gujarati", 
        "vowelsignbengali", 
        "gujarati", 
        "5adeva", 
        "gujarati", 
        "5rmukhi", 
        "katakana", 
        "5dagesh", 
        "circle", 
        "dotbelow", 
        "katakana", 
        "|rticalbar#", 
        "lineabovecmb", 
        "\"<operator", 
        "4verlaycmb", 
        ">verticalcmb", 
        "mescircle", 
        "ppigurmukhi", 
        "tlocyrilliccmb", 
        "wnarmenian", 
        "olinebelow", 
        "ioarmenian", 
        "0hhiragana", 
        "katakana", 
        "halfwidth", 
        "nebarextrahighmod", 
        "lowmod", 
        "highmod", 
        "lowmod", 
        "midmod", 
        "3'square", 
        "patakthai", 
        "rtoiseshellbracketleft", 
        "]acketleftsmall", 
        "9acketleftvertical", 
        "acketright", 
        "^acketrightsmall", 
        ":acketrightvertical", 
        "taothai", 
        "palatalhook", 
        "!\"rademark", 
        "etroflexhook", 
        "Fdagesh", 
        "narrow", 
        "quarter", 
        "uperior", 
        "tabengali", 
        "gujarati", 
        "\u001frmukhi", 
        "habengali", 
        "gujarati", 
        " rmukhi", 
        "0duhiragana", 
        "katakana", 
        "halfwidth", 
        "0csmallhiragana", 
        "katakana", 
        "ohalfwidth", 
        "$kwelvecircle", 
        "!{roman", 
        "$sntycircle", 
        "SDhangzhou", 
        "bengali", 
        "$acircle", 
        "inversesansserif", 
        " %otenleader", 
        " %leader", 
        "0vertical", 
        "gujarati", 
        "hrmukhi", 
        "0\"ngzhou", 
        "2!ideographicparen", 
        "nferior", 
        "numeratorbengali", 
        "2oldstyle", 
        "solated", 
        "0fragana", 
        "solated", 
        ")marbuta", 
        "solated", 
        "katakana", 
        "halfwidth", 
        "!!lephone", 
        "ishagedola", 
        "qetana", 
        "$incircle", 
        "2)ideographicparen", 
        "$}paren", 
        "!yroman", 
        "8dagesh", 
        "habengali", 
        "gujarati", 
        "%rmukhi", 
        "nthakhatlowleftthai", 
        "rightthai", 
        "upperleftthai", 
        "reexists", 
        "\"4fore", 
        "symbolgreek", 
        "2yieuthacirclekorean", 
        "parenkorean", 
        "2kcirclekorean", 
        "1Lkorean", 
        "parenkorean", 
        "$lrteencircle", 
        "onangmonthothai", 
        "phuthaothai", 
        "thahanthai", 
        "ongthai", 
        "ungthai", 
        "lsseparator", 
        "ltorpersian", 
        "bengali", 
        "$bcircle", 
        "inversesansserif", 
        "!\\eighths", 
        "gujarati", 
        "irmukhi", 
        "0#ngzhou", 
        "2\"ideographicparen", 
        "nferior", 
        "numeratorbengali", 
        "3oldstyle", 
        "$vparen", 
        "quarters", 
        "emdash", 
        "!rroman", 
        "superior", 
        "zsquare", 
        "0aihiragana", 
        "katakana", 
        "halfwidth", 
        "2peutacirclekorean", 
        "parenkorean", 
        "2bcirclekorean", 
        "17korean", 
        "parenkorean", 
        "0belowcmb", 
        "`doublecmb", 
        "(salathai", 
        "*uathai", 
        " hackarabic#", 
        "&`suitblack", 
        "&dwhite", 
        ";quarebelowcmb", 
        "diagonalcrosshatchfill", 
        "horizontalfill", 
        "capital", 
        "squared", 
        "orthogonalcrosshatchfill", 
        "upperlefttolowerrightfill", 
        "righttolowerleftfill", 
        "verticalfill", 
        "whitewithsmallblack", 
        "rsquare", 
        "sabengali", 
        "gujarati", 
        "1Ingcieuckorean", 
        "hieuhkorean", 
        "ieungkorean", 
        "12kiyeokkorean", 
        "1enieunkorean", 
        "1Cpieupkorean", 
        "1Fsioskorean", 
        "18tikeutkorean", 
        "uperior", 
        "terling", 
        "6rokelongoverlaycmb", 
        "5shortoverlaycmb", 
        "notequal", 
        "orequal", 
        "\"{cceeds", 
        "0Yhiragana", 
        "katakana", 
        "}halfwidth", 
        "mmation", 
        "perset", 
        "notequal", 
        "orequal", 
        "vsquare", 
        "3|youwaerasquare", 
        "abengali", 
        "ckdown", 
        "gujarati", 
        "$rmukhi", 
        "0_ragana", 
        "3}isyouerasquare", 
        "katakana", 
        "halfwidth", 
        "@tweel", 
        "Jdages", 
        "opomofo", 
        "ecaron", 
        "cedilla#", 
        "qumflexbelow", 
        "commaaccent", 
        "dieresis", 
        "kotaccent", 
        "mbelow", 
        "descender", 
        "fthyphen#", 
        "whaarmenian", 
        "bengali", 
        "adamma", 
        "`fatha", 
        "tanarabic_", 
        "bkasra", 
        "medium", 
        "gujarati", 
        "6rmukhi", 
        "lshelet", 
        "bopomofo", 
        "icoptic", 
        "narrow", 
        "quarter", 
        "imacoptic", 
        "Idagesh", 
        ",shindot", 
        "-indot", 
        "*shindot", 
        "+indot", 
        "lunatesymbolgreek", 
        "0Whiragana", 
        "katakana", 
        "|halfwidth", 
        "\"<milar", 
        "2tosacirclekorean", 
        "parenkorean", 
        "1~cieuckorean", 
        "2frclekorean", 
        "1zkiyeokkorean", 
        "1Eorean", 
        "1{nieunkorean", 
        "parenkorean", 
        "1}ieupkorean", 
        "1|tikeutkorean", 
        "bengali", 
        "$ecircle", 
        "inversesansserif", 
        "gujarati", 
        "lrmukhi", 
        "0&ngzhou", 
        "2%ideographicparen", 
        "nferior", 
        "6oldstyle", 
        "$yparen", 
        "!uroman", 
        " vsuperior", 
        "$oteencircle", 
        "urrencydenominatorbengali", 
        "dotaccent", 
        "&:mileface", 
        "ofpasuq", 
        "thyphen", 
        "0]hiragana", 
        "katakana", 
        "halfwidth", 
        "8liduslongoverlaycmb", 
        "7shortoverlaycmb", 
        ")rusithai", 
        "signbengali", 
        "vocalicbengali", 
        "gujarati", 
        "vowelsignbengali", 
        "Cgndeva", 
        "gngujarati", 
        "abengali", 
        "edotaccent", 
        "gujarati", 
        "8rmukhi", 
        "0Uhiragana", 
        "katakana", 
        "{halfwidth", 
        "llallahoualayhewasallam", 
        "Adagesh", 
        "2raaathai", 
        "Aethai", 
        "Dimaimalaithai", 
        "Cuanthai", 
        "3mthai", 
        "@ethai", 
        "iileftthai", 
        "leftthai", 
        "Bothai", 
        "ueeleftthai", 
        "leftthai", 
        "9uthai", 
        "bopomofo", 
        "acaron", 
        "gdotaccent", 
        "_edilla", 
        "dieresis", 
        "]umflex", 
        "ommaaccent", 
        "adotaccent", 
        "cbelow", 
        "idotaccent", 
        "<eagullbelowcmb", 
        " 3cond", 
        "tonechinese", 
        "narrow", 
        "quarter", 
        "}harmenian", 
        "0[iragana", 
        "katakana", 
        "~halfwidth", 
        ";micolon", 
        "Tsmall", 
        "voicedmarkkana", 
        "anahalfwidth", 
        "3\"ntisquare", 
        "3#osquare", 
        "bengali", 
        "$fcircle", 
        "inversesansserif", 
        "!^eighths", 
        "gujarati", 
        "mrmukhi", 
        "0'ngzhou", 
        "2&ideographicparen", 
        "nferior", 
        "7oldstyle", 
        "$zparen", 
        "!vroman", 
        " wsuperior", 
        "$pteencircle", 
        "9olam_", 
        "9hebrew_", 
        "7patah_", 
        "7hebrew_", 
        "8qamats_", 
        "8hebrew_", 
        ";ubuts_", 
        ";hebrew_", 
        "6segol_", 
        "6hebrew_", 
        "0heva_", 
        "0hebrew_", 
        "5tsere_", 
        "5hebrew_", 
        "\"=versedtilde", 
        "mugrash", 
        "logicalnot", 
        "~fishhook", 
        "reversed", 
        "habengali", 
        "{turned", 
        "superior", 
        "symbolgreek", 
        "tichookmod", 
        "2qieulacirclekorean", 
        "parenkorean", 
        "2ccirclekorean", 
        "1@hieuhkorean", 
        "1:kiyeokkorean", 
        "1isioskorean", 
        "19orean", 
        "1;mieumkorean", 
        "1lpansioskorean", 
        "renkorean", 
        "1?hieuphkorean", 
        "1<ieupkorean", 
        "1ksioskorean", 
        "1=sioskorean", 
        "1>thieuthkorean", 
        "1jikeutkorean", 
        "1myeorinhieuhkorean", 
        "\"\u001fghtangle", 
        "tackbelowcmb", 
        "riangle", 
        "hiragana", 
        "katakana", 
        "halfwidth", 
        "%belowcmb", 
        "halfleft", 
        "Yarmenian", 
        "belowcmb", 
        "centered", 
        "9belowcmb", 
        "centered", 
        "vertedbreve", 
        "3Qttorusquare", 
        "_linebelow", 
        "|ongleg", 
        "zturned", 
        "ohiragana", 
        "katakana", 
        "halfwidth", 
        "#ruathai", 
        "rabengali", 
        "\\gurmukhi", 
        "vocalicbengali", 
        "gujarati", 
        "vowelsignbengali", 
        "Digndeva", 
        "igngujarati", 
        "superior", 
        "tblock", 
        "yurned", 
        "superior", 
        "uhiragana", 
        "katakana", 
        "halfwidth", 
        "peemarkbengali", 
        "uarter", 
        "rneypara", 
        "bopomofo", 
        "circle", 
        "Gdagesh", 
        "\"hatafpatah_", 
        "\"hebrew_", 
        "!segol_", 
        "!hebrew_", 
        "$iriq_", 
        "$hebrew_", 
        ")olam_", 
        ")hebrew_", 
        "'patah_", 
        "'hebrew_", 
        "(qamats_", 
        "(hebrew_", 
        "+ubuts_", 
        "+hebrew_", 
        "&segol_", 
        "&hebrew_", 
        " heva_", 
        " hebrew_", 
        "%tsere_", 
        "%hebrew_", 
        "&iuarternote", 
        "narrow", 
        "quarter", 
        "?estion", 
        "^menian", 
        "~greek", 
        "?small", 
        "\"otedbl", 
        "reversed", 
        "reversed", 
        "reversed", 
        "singlbase", 
        "|aarmenian", 
        "bengali", 
        "overssquare", 
        "dsquare", 
        "square", 
        "gujarati", 
        "0rmukhi", 
        "hiragana", 
        "katakana", 
        "halfwidth", 
        "lowerdiagonalbengali", 
        "middlediagonalbengali", 
        "dshorn", 
        "bopomofo", 
        "Ycaron", 
        "Wedilla#", 
        "Wommaaccent", 
        "dblgrave", 
        "Yotaccent", 
        "[below", 
        "]macron", 
        " ;eferencemark", 
        "lexsubset", 
        "perset", 
        "gistered", 
        "menian", 
        "iragana", 
        "katakana", 
        "halfwidth", 
        "Hdagesh", 
        "2hatafpatah_", 
        "2hebrew_", 
        "1segol_", 
        "1hebrew_", 
        "4iriq_", 
        "4hebrew_", 
        "inferior", 
        "Rsmall", 
        "uperior", 
        "Bspomenigreekcmb", 
        "pendicular", 
        " 0thousand", 
        "fsquare", 
        "habengali", 
        "gujarati", 
        "+rmukhi", 
        "2zeuphacirclekorean", 
        "parenkorean", 
        "2lcirclekorean", 
        "1Mkorean", 
        "parenkorean", 
        "xlatin", 
        ":nthuthai", 
        "symbolgreek", 
        "phanthai", 
        "ungthai", 
        " samphaothai", 
        "2seupacirclekorean", 
        "parenkorean", 
        "1vcieuckorean", 
        "2erclekorean", 
        "1rkiyeokkorean", 
        "1Borean", 
        "parenkorean", 
        "1tsioskiyeokkorean", 
        "1Dorean", 
        "1utikeutkorean", 
        "1wthieuthkorean", 
        "1sikeutkorean", 
        "0thiragana", 
        "katakana", 
        "symbolgreek", 
        "wrarmenian", 
        "\u001fbelowcmb", 
        "circle", 
        "bsmall", 
        " zuperior", 
        "square", 
        "0}ohiragana", 
        "&\u001fintingindexdownwhite", 
        "leftwhite", 
        "rightwhite", 
        "upwhite", 
        "katakana", 
        "plathai", 
        "stalmark", 
        "0 face", 
        "\"zrecedes", 
        "scription", 
        "imemod", 
        " 5reversed", 
        "jective", 
        "longedkana", 
        "pellor", 
        "rsubset", 
        "perset", 
        "\"7ortion", 
        "lipneumatacyrilliccmb", 
        "square", 
        "0wuhiragana", 
        "katakana", 
        "vsquare", 
        "wsquare", 
        "Xadeva", 
        "narrow", 
        "narrow", 
        "quarter", 
        "ogonek", 
        "macron", 
        "urmukhi", 
        "Kmatragurmukhi", 
        "enbullet", 
        "#%tion", 
        "rdfeminine", 
        "masculine", 
        "\"\u001fthogonal", 
        "shortdeva", 
        "Jvowelsigndeva", 
        "0Imallhiragana", 
        "katakana", 
        "khalfwidth", 
        "trokeacute#", 
        "uperior", 
        "Macute", 
        "Odieresis", 
        "1!ubopomofo", 
        " >verline", 
        "Jcenterline", 
        "Idashed", 
        "Lblwavy", 
        "score#", 
        "owelsignbengali", 
        "gujarati", 
        "aampssquare", 
        "3+sentosquare", 
        "bengali", 
        "gedown", 
        "ujarati", 
        "*rmukhi", 
        "0qhiragana", 
        "/iyannoithai", 
        "katakana", 
        "latalizationcyrilliccmb", 
        "nsioskorean", 
        "ragraph", 
        "\"%llel", 
        "(enleft", 
        ">altone", 
        "inferior", 
        "Ysmall", 
        " }uperior", 
        "5vertical", 
        ")right", 
        "?altone", 
        "inferior", 
        "Zsmall", 
        " ~uperior", 
        "6vertical", 
        "tialdiff", 
        "narrow", 
        "quarter", 
        "bopomofo", 
        "circle", 
        "Wdotaccent", 
        "Ddagesh", 
        "3;ezisquare", 
        "Cfinaldagesh", 
        "zmenian", 
        "0zragana", 
        "katakana", 
        "middlehook", 
        "jsmall", 
        "armenian", 
        "centered", 
        "ahalfwidth", 
        "0lhiragana", 
        "katakana", 
        "halfwidth", 
        "tabengali", 
        "gujarati", 
        "<rmukhi", 
        "#mbersign", 
        "_small", 
        "teralsigngreek", 
        "ulowergreek", 
        "@dagesh", 
        "vsquare", 
        "wsquare", 
        "yabengali", 
        "gujarati", 
        "rmukhi", 
        "-ngthai", 
        "ubarred", 
        "dieresis", 
        "engali", 
        "opomofo", 
        "candradeva", 
        "gujarati", 
        "Ivowelsigndeva", 
        "ngujarati", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "Qdblacute#", 
        "ieresis", 
        "otbelow", 
        "1Zkorean", 
        "ujarati", 
        "harmenian", 
        "0Jiragana", 
        "ookabove", 
        "dotbelow", 
        "hookabove", 
        "Qungarumlaut", 
        "nvertedbreve", 
        "katakana", 
        "uhalfwidth", 
        "1Worean", 
        "Mmacron", 
        "Sacute", 
        "Qgrave", 
        "wlatinclosed", 
        "{round", 
        "}titlo", 
        "gujarati", 
        "bengali", 
        "$`circle", 
        "inversesansserif", 
        " $otenleader", 
        "![eighth", 
        "fitted", 
        "gujarati", 
        "grmukhi", 
        "0!ngzhou", 
        "2 ideographicparen", 
        "nferior", 
        "numeratorbengali", 
        "1oldstyle", 
        "$tparen", 
        "quarter", 
        "!proman", 
        "superior", 
        "0mehiragana", 
        "katakana", 
        "halfwidth", 
        "wsheqelsign", 
        "fsquare", 
        "gabengali", 
        "gujarati", 
        "rmukhi", 
        "onguthai", 
        "hiragana", 
        "rookleft", 
        "sretroflex", 
        "2oieunacirclekorean", 
        "parenkorean", 
        "15cieuckorean", 
        "2arclekorean", 
        "16hieuhkorean", 
        "14korean", 
        "1hpansioskorean", 
        "renkorean", 
        "1gsioskorean", 
        "1ftikeutkorean", 
        "0khiragana", 
        "katakana", 
        "halfwidth", 
        "hahitleftthai", 
        "bengali", 
        "$hcircle", 
        "inversesansserif", 
        "gujarati", 
        "ormukhi", 
        "0)ngzhou", 
        "2(ideographicparen", 
        "nferior", 
        "9oldstyle", 
        "$|paren", 
        "!xroman", 
        " ysuperior", 
        "$rteencircle", 
        "katakana", 
        "halfwidth", 
        "legrightlong", 
        "Iinebelow", 
        "square", 
        "nabengali", 
        "gujarati", 
        "#rmukhi", 
        ")nadeva", 
        "obreakspace", 
        "0nhiragana", 
        "katakana", 
        "halfwidth", 
        "nbreakingspace#", 
        "enthai", 
        "markingreturn", 
        "ghunna", 
        "Ksolated", 
        "Nsolated", 
        "tcontains", 
        "element", 
        "\"`qual", 
        "\"ogreater", 
        "\"qnorequal", 
        "\"yless", 
        "\"bidentical", 
        "\"nless", 
        "\"pnorequal", 
        "\"&parallel", 
        "recedes", 
        "subset", 
        "cceeds", 
        "perset", 
        "vwarmenian", 
        "ssquare", 
        "uperior", 
        "katakana", 
        "halfwidth", 
        ">dagesh", 
        "tnarmenian", 
        "kefula", 
        "zsquare", 
        "eiddledotkatakanahalfwidth", 
        "2reumacirclekorean", 
        "parenkorean", 
        "2dcirclekorean", 
        "1Akorean", 
        "1ppansioskorean", 
        "renkorean", 
        "1nieupkorean", 
        "1osioskorean", 
        "hiragana", 
        "katakana", 
        "halfwidth", 
        " belowcmb", 
        "circle", 
        "3Jribaarusquare", 
        "3Isquare", 
        "plonglegturned", 
        "square", 
        "mcubedsquare", 
        "squaredsquare", 
        "ohiragana", 
        "msquare", 
        "katakana", 
        "halfwidth", 
        "lsquare", 
        "!mathai", 
        "verssquare", 
        "dsquare", 
        "square", 
        "ssquare", 
        "uperior", 
        "oturned", 
        "asquare", 
        "\"kchgreater", 
        "\"jless", 
        "fsquare", 
        "square", 
        "hiragana", 
        "katakana", 
        "halfwidth", 
        "lsquare", 
        "msquare", 
        "&jsicalnote", 
        "&mflatsign", 
        "&osharpsign", 
        "square", 
        "vsquare", 
        "wsquare", 
        "vmegasquare", 
        "square", 
        "wmegasquare", 
        "square", 
        "abengali", 
        "gujarati", 
        "(rmukhi", 
        "0jhiragana", 
        "katakana", 
        "halfwidth", 
        "Ipostrophe", 
        "square", 
        "bopomofo", 
        "space#", 
        "Hcaron", 
        "Fedilla#", 
        "Kumflexbelow", 
        "Fommaaccent", 
        "Edotaccent", 
        "Gbelow", 
        "\"vgreater", 
        "\"fverequal", 
        "dsmall", 
        "fblock", 
        "mhookretroflex", 
        "lwnarmenian", 
        "3adeva", 
        "gujarati", 
        ";inebelow", 
        "4ladeva", 
        "vocalicbengali", 
        "vowelsignbengali", 
        "cigndeva", 
        "kmiddletilde", 
        "square", 
        ",ochulathai", 
        "\"'gicaland", 
        "reversed", 
        "%lingthai", 
        "Nwlinecenterline", 
        "Mdashed", 
        "Bslash", 
        "uperior", 
        "tshade", 
        "&uthai", 
        "vocalicbengali", 
        "vowelsignbengali", 
        "bgndeva", 
        "xsquare", 
        "abengali", 
        "1belowcmb", 
        "lowmod", 
        "gujarati", 
        ".rmukhi", 
        "hapakh", 
        "0~iragana", 
        "ichattawalowleftthai", 
        "rightthai", 
        "upperleftthai", 
        "eklowleftthai", 
        "rightthai", 
        "upperleftthai", 
        "hanakatleftthai", 
        "taikhuleftthai", 
        "holowleftthai", 
        "rightthai", 
        "upperleftthai", 
        "rilowleftthai", 
        "rightthai", 
        "upperleftthai", 
        "Fyamokthai", 
        "katakana", 
        "halfwidth", 
        "3Gnsyonsquare", 
        "soracircle", 
        "bopomofo", 
        "square", 
        "circle", 
        "ubedsquare", 
        "Adotaccent", 
        "Cbelow", 
        "Hsolated", 
        "3Mtorusquare", 
        "hiragana", 
        "3~izierasquare", 
        "parenkorean", 
        "okhaithai", 
        "onthai", 
        "uatthai", 
        "waithai", 
        "[mutthai", 
        "rakhangthai", 
        "zsquare", 
        "0Mihiragana", 
        "katakana", 
        "whalfwidth", 
        "roguramusquare", 
        "meetorusquare", 
        "square", 
        "2nyeokacirclekorean", 
        "parenkorean", 
        "2`circlekorean", 
        "11korean", 
        "parenkorean", 
        "13sioskorean", 
        "5linebelow", 
        "square", 
        "mcubedsquare", 
        "squaredsquare", 
        "0Sohiragana", 
        "msquare", 
        "kaithai", 
        "takana", 
        "zhalfwidth", 
        "oposquare", 
        "reanstandardsymbol", 
        "Coniscmb", 
        "square", 
        "tsquare", 
        "0Ouhiragana", 
        "katakana", 
        "xhalfwidth", 
        "vsquare", 
        "wsquare", 
        "abengali", 
        "gujarati", 
        "2rmukhi", 
        "Ekkhangyaothai", 
        "hamzaabove", 
        "veisolated", 
        "owisolated", 
        "isolated", 
        "maddaabove", 
        "veisolated", 
        "stroke", 
        "<dagesh", 
        "dagesh_", 
        "hhebrew_", 
        "hebrew_", 
        "lamhehisolated", 
        "rgecircle", 
        "opomofo", 
        ">caron", 
        "<edilla#", 
        "=umflexbelow", 
        "<ommaaccent", 
        "@accent#", 
        "7below", 
        "9macron", 
        "eftangleabovecmb", 
        "tackbelowcmb", 
        "\"dequal", 
        "orgreater", 
        "\"rorequivalent", 
        "terationhiragana", 
        "katakana", 
        "-below", 
        "1)ubopomofo", 
        "vowelsignbengali", 
        "gujarati", 
        "uzhitsa", 
        "wdblgrave", 
        "qaarmenian", 
        "bengali", 
        "gujarati", 
        "rmukhi", 
        "bopomofo", 
        "5umflex", 
        "rossedtail", 
        "_dotlessstroke", 
        "habengali", 
        "gujarati", 
        "rmukhi", 
        "{eharmenian", 
        "superior", 
        "abashkir", 
        "engali", 
        "descender", 
        ";dagesh", 
        "gujarati", 
        "rmukhi", 
        "0Khiragana", 
        "katakana", 
        "vhalfwidth", 
        "symbolgreek", 
        "1qyeounmieumkorean", 
        "phieuphkorean", 
        "1xieupkorean", 
        "1yssangpieupkorean", 
        "roriisquare", 
        "@shidaauto", 
        "@nosidebearing", 
        "mallkatakana", 
        "ptahiraprolongmarkhalfwidth", 
        "verticalstroke", 
        "bopomofo", 
        "calsquare", 
        "7edilla#", 
        "7ommaaccent", 
        "3dotbelow", 
        "eharmenian", 
        "0Qiragana", 
        "katakana", 
        "yhalfwidth", 
        "onarmenian", 
        "smallkatakana", 
        "8greenlandic", 
        "habengali", 
        "gujarati", 
        "rmukhi", 
        "eicoptic", 
        "Yhadeva", 
        "Ygurmukhi", 
        "2xieukhacirclekorean", 
        "parenkorean", 
        "2jcirclekorean", 
        "1Kkorean", 
        "owcircle", 
        "medicinecircle", 
        "2.talparen", 
        "2*oonparen", 
        "24nameparen", 
        "period", 
        "rintcircle", 
        "2Creachparen", 
        "29presentparen", 
        "2>sourceparen", 
        "ightcircle", 
        "secretcircle", 
        "2Blfparen", 
        "23ocietyparen", 
        "25ecialparen", 
        "21tockparen", 
        "2;udyparen", 
        "20unparen", 
        "2<perviseparen", 
        "2,waterparen", 
        "2-oodparen", 
        "metalcircle", 
        "ooncircle", 
        "namecircle", 
        "suncircle", 
        "watercircle", 
        "oodcircle", 
        "ieresis", 
        "/acute", 
        "otbelow", 
        "ebreve", 
        "2uungacirclekorean", 
        "parenkorean", 
        "2gcirclekorean", 
        "1Gkorean", 
        "parenkorean", 
        "ujarati", 
        "rmukhi", 
        "0Dhiragana", 
        "ookabove", 
        "ibengali", 
        "gujarati", 
        "rmukhi", 
        "@matragurmukhi", 
        "nvertedbreve", 
        "9short", 
        "vowelsignbengali", 
        "gujarati", 
        "katakana", 
        "rhalfwidth", 
        "1corean", 
        "+macron", 
        "\"Sgeorapproximatelyequal", 
        "?tragurmukhi", 
        "ncrement", 
        "finity", 
        "kiarmenian", 
        "\"+tegral", 
        "#!bottom", 
        "\")rsection", 
        "isquare", 
        "vbullet", 
        "circle", 
        "&;smileface", 
        "/gonek", 
        "dieresis", 
        "ilatin", 
        "rrigurmukhi", 
        "0Csmallhiragana", 
        "katakana", 
        "hhalfwidth", 
        "sharbengali", 
        "htroke", 
        "uperior", 
        "36utaarusquare", 
        "gnghook", 
        "39rutusquare", 
        "superior", 
        "2{ieuhacirclekorean", 
        "parenkorean", 
        "2mcirclekorean", 
        "1Nkorean", 
        "parenkorean", 
        "0rhiragana", 
        "katakana", 
        "halfwidth", 
        "narrow", 
        "quarter", 
        "linebelow", 
        "poarmenian", 
        "+hipthai", 
        "0{ragana", 
        "katakana", 
        "halfwidth", 
        "narrow", 
        "quarter", 
        ".nokhukthai", 
        "okabovecomb", 
        "!palatalizedbelowcmb", 
        "\"retroflexbelowcmb", 
        "3Bnsquare", 
        "ricoptic", 
        "zontalbar", 
        "&htsprings", 
        "superior", 
        "eturned", 
        "0uuhiragana", 
        "33iitosquare", 
        "katakana", 
        "halfwidth", 
        "ngarumlaut", 
        "-yphen", 
        "inferior", 
        "csmall", 
        "uperior", 
        "bengali", 
        "1'opomofo", 
        "umflex", 
        "dblgrave", 
        "eographearthcircle", 
        "firecircle", 
        "2?icallianceparen", 
        "2:callparen", 
        "entrecircle", 
        "daleft", 
        "27ngratulationparen", 
        "rrectcircle", 
        "2/earthparen", 
        "2=nterpriseparen", 
        "xcellentcircle", 
        "2@festivalparen", 
        "inancialcircle", 
        "26ncialparen", 
        "2+reparen", 
        "22haveparen", 
        "ighcircle", 
        "iterationmark", 
        "laborcircle", 
        "28rparen", 
        "eftcircle", 
        "reversed", 
        "rsedmod", 
        "rsedsuperior", 
        "stroke", 
        "kereversed", 
        "!macron", 
        "0Tohiragana", 
        "katakana", 
        "square", 
        "radient", 
        "belowcmb", 
        "lowmod", 
        "@tonecmb", 
        ">eater", 
        "\"eequal", 
        "orless", 
        "\"sorequivalent", 
        "\"wless", 
        "\"gverequal", 
        "esmall", 
        "ascript", 
        "0Puhiragana", 
        "illemotleft", 
        " 9singlleft", 
        " :right", 
        "katakana", 
        "ramusquare", 
        "ysquare", 
        "aabkhasian", 
        "bengali", 
        "descender", 
        "gujarati", 
        "9rmukhi", 
        "0oragana", 
        "3*itusquare", 
        "katakana", 
        "halfwidth", 
        "Mlantgurmukhi", 
        "1dngulfiller", 
        "Jrdsign", 
        "poonleftbarbup", 
        "rightbarbup", 
        "square", 
        "tafpatah", 
        "narrow", 
        "quarter", 
        "qamats", 
        "narrow", 
        "quarter", 
        "narrow", 
        "quarter", 
        "opomofo", 
        "+revebelow", 
        ")cedilla", 
        "%umflex", 
        "'dieresis", 
        "#otaccent", 
        "%below", 
        "&esuitblack", 
        "&awhite", 
        "4dagesh", 
        "haltone", 
        "finalaltone", 
        "hamzaabove", 
        "isolated", 
        "initialaltone", 
        "0xragana", 
        "medialaltone", 
        "3{iseierasquare", 
        "katakana", 
        "halfwidth", 
        "gujarati", 
        "krmukhi", 
        "0%ngzhou", 
        "2$ideographicparen", 
        "nferior", 
        "5oldstyle", 
        "$xparen", 
        "!troman", 
        " usuperior", 
        "square", 
        "\u001fofanthai", 
        "Ongmanthai", 
        "bengali", 
        "$ccircle", 
        "inversesansserif", 
        "gujarati", 
        "jrmukhi", 
        "0$ngzhou", 
        "2#ideographicparen", 
        "nferior", 
        "numeratorbengali", 
        "4oldstyle", 
        "$wparen", 
        "!sroman", 
        " tsuperior", 
        "$mteencircle", 
        "tonechinese", 
        " Draction", 
        "abengali", 
        "gujarati", 
        "rmukhi", 
        "0Lhiragana", 
        "katakana", 
        "clatinsmall", 
        "superior", 
        "ngiacoptic", 
        "bopomofo", 
        "#edilla#", 
        "umflex", 
        "#ommaaccent", 
        "!accent", 
        "0Rhiragana", 
        "katakana", 
        "\"Qometricallyequal", 
        "reshaccent", 
        "muqdam", 
        "mandbls", 
        "shayimaccent", 
        "tamark", 
        "habengali", 
        "rdarmenian", 
        "gujarati", 
        "rmukhi", 
        "emiddlehook", 
        "stroke", 
        "upturn", 
        "Zhadeva", 
        "Zgurmukhi", 
        "zsquare", 
        "0Nihiragana", 
        "katakana", 
        "cmarmenian", 
        "2dagesh", 
        "lottalinvertedstroke", 
        "inverted", 
        "1#nbopomofo", 
        "2vertical", 
        "escender", 
        "1%bopomofo", 
        "ogonek", 
        "1Skorean", 
        "closed", 
        "\\reversed", 
        "^closed", 
        "fsmall", 
        " |uperior", 
        "\"aivalence", 
        "1&rbopomofo", 
        "Xeversed", 
        "descender", 
        "ortdeva", 
        "Fvowelsigndeva", 
        "reversedloop", 
        "squatreversed", 
        "0Gmallhiragana", 
        "katakana", 
        "jhalfwidth", 
        "!.timated", 
        "uperior", 
        "hrmenian", 
        "nahtafoukh", 
        "1aukorean", 
        "vowelsignbengali", 
        "gujarati", 
        "!xclam", 
        "\\armenian", 
        "!small", 
        "istential", 
        "reversed", 
        "^adeva", 
        "^gurmukhi", 
        "hrenheit", 
        "bopomofo", 
        "circle", 
        "\u001fdotaccent", 
        "menian", 
        "icoptic", 
        "&@male", 
        "$nfteencircle", 
        "guredash", 
        "lledbox", 
        "nalkaf", 
        ":dagesh", 
        "qamats_", 
        "hebrew_", 
        "sheva_", 
        "hebrew_", 
        "rsttonechinese#", 
        "bengali", 
        "$dcircle", 
        "inversesansserif", 
        "!]eighths", 
        "katakana", 
        "1lessi", 
        "strokehook", 
        "tedcircle", 
        "\u001fubleyodpatah", 
        "wntackbelowcmb", 
        "superior", 
        "0euhiragana", 
        "katakana", 
        "altone", 
        "eabkhasian", 
        "bengali", 
        "opomofo", 
        "candradeva", 
        "gujarati", 
        "Evowelsigndeva", 
        "ngujarati", 
        "edillabreve", 
        "eharmenian", 
        "yiwnarmenian", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "dblgrave", 
        "ieresis", 
        "accent", 
        "egurmukhi", 
        "Gmatragurmukhi", 
        "ujarati", 
        "gharmenian", 
        "bopomofo", 
        "0Hiragana", 
        "ookabove", 
        "1\u001fibopomofo", 
        "bengali", 
        "$gcircle", 
        "inversesansserif", 
        "$qeencircle", 
        "gujarati", 
        "nrmukhi", 
        "0(ngzhou", 
        "&knotebeamed", 
        "2'ideographicparen", 
        "nferior", 
        "8oldstyle", 
        "${paren", 
        "!wroman", 
        " xsuperior", 
        "nvertedbreve", 
        "eotified", 
        "katakana", 
        "thalfwidth", 
        "tonkargurmukhi", 
        "1Trean", 
        "$jvencircle", 
        "$~paren", 
        "!zroman", 
        " &lipsis", 
        "vertical", 
        "macron", 
        "1vertical", 
        "[phasismarkarmenian", 
        "Ltanaltone", 
        "siapneumatacyrilliccmb", 
        "blGrave", 
        "anglebracketleft", 
        "=leftvertical", 
        ">rightvertical", 
        "+rchinvertedbelowcmb", 
        "rowleft", 
        "edanda", 
        "\",integral", 
        "lowline", 
        "?overlinecmb", 
        "primemod", 
        "verticalbar", 
        "lineabovecmb", 
        "opomofo", 
        "square", 
        "edilla", 
        "umflexbelow", 
        "dabengali", 
        "gujarati", 
        "!rmukhi", 
        "\\dhadeva", 
        "habengali", 
        "gujarati", 
        "\"rmukhi", 
        "otaccent", 
        "kecimalseparator", 
        "krpersian", 
        "0gragana", 
        "icoptic", 
        "katakana", 
        "#+leteleft", 
        "#&right", 
        "turned", 
        "nominatorminusonenumeratorbengali", 
        "habengali", 
        "gujarati", 
        "'rmukhi", 
        "ialytikatonos", 
        "&fmond", 
        "&bsuitwhite", 
        "eresis", 
        "$belowcmb", 
        "0bhiragana", 
        "katakana", 
        "ttomark", 
        "sionslash", 
        "kshade", 
        "linebelow", 
        "square", 
        "macron#", 
        "nblock", 
        "ochadathai", 
        "dekthai", 
        "0ihiragana", 
        "katakana", 
        "inferior", 
        "$oldstyle", 
        "ismall", 
        "uperior", 
        "3&rusquare", 
        "taccent", 
        "#belowcmb#", 
        "&gwhite", 
        "mcubedsquare", 
        "squaredsquare", 
        "oarmenian", 
        "monetary", 
        "triangularhalfmod", 
        "abovecmb", 
        "rightcmb", 
        "]menian", 
        "inferior", 
        "reversedabovecmb", 
        "Psmall", 
        "uperior", 
        "turnedabovecmb", 
        "&<pass", 
        "\"Engruent", 
        "\".tourintegral", 
        "pyright", 
        "rnerbracketleft", 
        "bfthalfwidth", 
        "Aftvertical", 
        "cghthalfwidth", 
        "Bghtvertical", 
        "porationsquare", 
        "square", 
        "verkgsquare", 
        "ruzeiro", 
        "stretched", 
        "urlyand", 
        "yrBreve", 
        "daarmenian", 
        "bengali", 
        "ujarati", 
        "&rmukhi", 
        "0`hiragana", 
        "katakana", 
        "3dagesh", 
        "hatafpatah_", 
        "hebrew_", 
        "segol_", 
        "hebrew_", 
        "hebrew_", 
        "hebrew_", 
        "patah_", 
        "hebrew_", 
        "qamats_", 
        "hebrew_", 
        "+ubuts_", 
        "+hebrew_", 
        "&segol_", 
        "&hebrew_", 
        "0heva_", 
        "0hebrew_", 
        "%tsere_", 
        "%hebrew_", 
        "adoublecmb", 
        "*idgebelowcmb", 
        ":invertedbelowcmb", 
        "okenbar", 
        "stroke", 
        "uperior", 
        "topbar", 
        "0vuhiragana", 
        "katakana", 
        " \"llet", 
        "inverse", 
        "operator", 
        "naarmenian", 
        "bengali", 
        "gujarati", 
        "rmukhi", 
        "lsquare", 
        "ndrabindubengali", 
        "gujarati", 
        "pslock", 
        ",belowcmb", 
        "riagereturn", 
        "bopomofo", 
        "edilla", 
        "umflex", 
        "accent", 
        "square", 
        "edilla", 
        "igrade", 
        "nferior", 
        "oldstyle", 
        "superior", 
        "yhaarmenian", 
        "bengali", 
        "gujarati", 
        "rmukhi", 
        "bopomofo", 
        "eabkhasian", 
        "ckmark", 
        "descenderabkhasian", 
        "ieresis", 
        "sharmenian", 
        "khakassian", 
        "verticalstroke", 
        "2weuchacirclekorean", 
        "parenkorean", 
        "2icirclekorean", 
        "1Jkorean", 
        "parenkorean", 
        "ochangthai", 
        "ingthai", 
        "oethai", 
        "2vieucacirclekorean", 
        "parenkorean", 
        "2hcirclekorean", 
        "1Hkorean", 
        "parenkorean", 
        "uparenkorean", 
        "multiply", 
        "06ostalmark", 
        "withlefthalfblack", 
        "righthalfblack", 
        "umflex", 
        "-belowcmb", 
        "#'lear", 
        "ickalveolar", 
        "dental", 
        "lateral", 
        "retroflex", 
        "&csuitblack", 
        "abengali", 
        "\\ckslash", 
        "gujarati", 
        ",rmukhi", 
        "0phiragana", 
        "?tthai", 
        "katakana", 
        "bopomofo", 
        "circle", 
        "dotaccent", 
        "&leamedsixteenthnotes", 
        "\"5cause", 
        "0yragana", 
        "solated", 
        "katakana", 
        "bnarmenian", 
        "symbolgreek", 
        "1dagesh", 
        "habengali", 
        "gujarati", 
        "-rmukhi", 
        "0sihiragana", 
        "katakana", 
        "labialclick", 
        "ndigurmukhi", 
        "31rusquare", 
        "lackcircle", 
        "diamond", 
        "ownpointingtriangle", 
        "leftpointingpointer", 
        "ngtriangle", 
        "nticularbracketleft", 
        ";bracketleftvertical", 
        "bracketright", 
        "<bracketrightvertical", 
        "owerlefttriangle", 
        "righttriangle", 
        "rectangle", 
        "ightpointingpointer", 
        "ingtriangle", 
        "smallsquare", 
        "&;ilingface", 
        "upperlefttriangle", 
        "righttriangle", 
        "ointingsmalltriangle", 
        "triangle", 
        "inebelow", 
        "obaimaithai", 
        "0|hiragana", 
        "katakana", 
        "qsquare", 
        "raceex", 
        "[small", 
        "7vertical", 
        "}right", 
        "\\small", 
        "8vertical", 
        "[ketleft", 
        "]right", 
        ".belowcmb", 
        "/invertedbelowcmb", 
        "Zkhankhuthai", 
        "bracketleft", 
        "?tvertical", 
        "@htvertical", 
        "#)left", 
        "#*right", 
        "!+strom", 
        "oteleia", 
        "Rudattadeva", 
        "svarabengali", 
        "gujarati", 
        "ogonek", 
        "paatosquare", 
        "Zostrophearmenian", 
        "\"Proaches", 
        "\"Hxequal", 
        "\"Rorimage", 
        "\"Eimatelyequal", 
        "raeaekorean", 
        "korean", 
        "ighthalfring", 
        "rowboth", 
        "dashdown", 
        "blboth", 
        "headdownmod", 
        "leftmod", 
        "rightmod", 
        "orizex", 
        "stroke", 
        "overright", 
        "dblstroke", 
        "overleft", 
        "tableft", 
        "ownbase", 
        "ofdown", 
        "vertex", 
        "^sciicircum", 
        "~tilde", 
        "Rturned", 
        "0Amallhiragana", 
        "katakana", 
        "ghalfwidth", 
        "*terisk", 
        "maltone", 
        "asmall", 
        "uperior", 
        "\"Cymptoticallyequal", 
        "ksmall", 
        "Purned", 
        "ubengali", 
        "1 opomofo", 
        "gujarati", 
        "rmukhi", 
        "lengthmarkbengali", 
        "Lmatragurmukhi", 
        "vowelsignbengali", 
        "gujarati", 
        "=vagrahadeva", 
        "aybarmenian", 
        " altone", 
        "j57381", 
        "ujarati", 
        "rmukhi", 
        "0Bhiragana", 
        "ookabove", 
        "ibengali", 
        "opomofo", 
        "gujarati", 
        "rmukhi", 
        "Hmatragurmukhi", 
        "vertedbreve", 
        "vowelsignbengali", 
        "gujarati", 
        "katakana", 
        "qhalfwidth", 
        "1Oorean", 
        "0dagesh", 
        "#hamzaabove", 
        "%below", 
        "Olamed", 
        "\"maddaabove", 
        "Iksura", 
        ".patah", 
        "/qamats", 
        "\"Llequal", 
        "macron", 
        "&persand", 
        "&small", 
        "square", 
        "1\"nbopomofo", 
        "1$gbopomofo", 
        "descender", 
        "ieresis", 
        "linebelow", 
        "zsmall", 
        "abengali", 
        "gujarati", 
        "rmukhi", 
        ">matragurmukhi", 
        "rusquare", 
        "vowelsignbengali", 
        "gujarati", 
        "_bbreviationmarkarmenian", 
        "psigndeva", 
        "engali", 
        "opomofo", 
        "dotbelow", 
        "hookabove", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "belowcmb", 
        "lowmod", 
        "Atonecmb", 
        "dblgrave", 
        "qdakgurmukhi", 
        "ieresis", 
        "macron", 
        "otbelow", 
        "macron", 
        "1Pkorean", 
        "macron", 
        "fii00208", 
        "lbreve", 
        "umflex", 
        "vbelow", 
        "pdblacute#", 
        "ieresis", 
        "rbelow", 
        "macron", 
        "otbelow", 
        "hookabove", 
        "dotbelow", 
        "hookabove", 
        "pungarumlaut", 
        "invertedbreve", 
        "jmacron", 
        "zdieresis", 
        "rogonek", 
        "psilon", 
        "acutehooksymbolgreek", 
        "frican", 
        "dieresis", 
        "hooksymbolgreek", 
        "hooksymbol", 
        "traight", 
        "stroke", 
        "htilde", 
        "xacute", 
        "tbelow", 
        "circle", 
        "~dotbelow", 
        "Nwarmenian", 
        "Hoarmenian", 
        "vsmall", 
        "|tilde", 
        "circle", 
        "tumflex", 
        "dieresis", 
        "otaccent", 
        "wsmall", 
        "circle", 
        "dieresis", 
        "otaccent", 
        "=eharmenian", 
        "xsmall", 
        "circle", 
        "vumflex", 
        "xdieresis", 
        "otaccent", 
        "udieresis", 
        "Eiarmenian", 
        "Rwnarmenian", 
        "ysmall", 
        "jusbig", 
        "liotified", 
        "flittle", 
        "hiotified", 
        "6aarmenian", 
        "}caron", 
        "umflex", 
        "{accent", 
        "descender", 
        "ieresis", 
        ":hearmenian", 
        "Peharmenian", 
        "fraktur", 
        "ingsmall", 
        "vertedbreve", 
        "^linebelow", 
        "rsmall", 
        "inverted", 
        "superior", 
        "F010000", 
        "%<50000", 
        "%,60000", 
        "%470000", 
        "%$90000", 
        "100000", 
        "%a90000", 
        "%b200000", 
        "%V10000", 
        "%U20000", 
        "%c30000", 
        "%Q40000", 
        "%W50000", 
        "%]60000", 
        "%\\70000", 
        "%[80000", 
        "%^360000", 
        "%_70000", 
        "%Z80000", 
        "%T90000", 
        "%i400000", 
        "%f10000", 
        "%`20000", 
        "%P30000", 
        "%l40000", 
        "%g50000", 
        "%h60000", 
        "%d70000", 
        "%e80000", 
        "%Y90000", 
        "%X500000", 
        "%R10000", 
        "%S20000", 
        "%k30000", 
        "%j40000", 
        "Zacute", 
        "ddotaccent", 
        "mpigreek", 
        "`caron", 
        "fdotaccent", 
        "^edilla", 
        "dieresis", 
        "\\umflex", 
        "ommaaccent", 
        "`dotaccent", 
        "bbelow", 
        "hdotaccent", 
        "Meharmenian", 
        "!fvenroman", 
        "Ghaarmenian", 
        "eicoptic", 
        "imacoptic", 
        "!exroman", 
        ",oftsign", 
        "ssmall", 
        "tigmagreek", 
        "dcaron", 
        "bedilla#", 
        "pumflexbelow", 
        "bommaaccent", 
        "jdotaccent", 
        "lbelow", 
        "descender", 
        "!inroman", 
        "!breeroman", 
        "ildesmall", 
        "Ownarmenian", 
        "nlinebelow", 
        "9oarmenian", 
        "nefive", 
        "retroflexhook", 
        "!kwelveroman", 
        "!aoroman", 
        "Bbelow", 
        "Denarmenian", 
        "msmall", 
        "turned", 
        "Cacute", 
        "Gcaron", 
        "Eedilla#", 
        "Jumflexbelow", 
        "Eommaaccent", 
        "Ddotaccent", 
        "Fbelow", 
        "hookleft", 
        "!hineroman", 
        "Hlinebelow", 
        "Fowarmenian", 
        "nsmall", 
        "barred", 
        "dieresis", 
        "enteredtilde", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "Pdblacute#", 
        "ieresis", 
        "otbelow", 
        "goneksmall", 
        "Uharmenian", 
        "ookabove", 
        "dotbelow", 
        "hookabove", 
        "Pungarumlaut", 
        "nvertedbreve", 
        "Lmacron", 
        "Racute", 
        "Pgrave", 
        "zround", 
        "|titlo", 
        "!`neroman", 
        "ogonek", 
        "macron", 
        "trokeacute#", 
        "Lacute", 
        "Ndieresis", 
        "Tacute", 
        "circle", 
        "Vdotaccent", 
        "Jharmenian", 
        "middlehook", 
        "Swrarmenian", 
        "circle", 
        "qsmall", 
        "Laarmenian", 
        "Xcaron", 
        "Vedilla#", 
        "Vommaaccent", 
        "dblgrave", 
        "Xotaccent", 
        "Zbelow", 
        "\\macron", 
        "*revebelow", 
        "(cedilla", 
        "$umflex", 
        "&dieresis", 
        "\"otaccent", 
        "$below", 
        "@oarmenian", 
        "ricoptic", 
        "hsmall", 
        "ungarumlaut", 
        "zsquare", 
        ",breve", 
        "umflex", 
        "dblgrave", 
        "ieresis", 
        ".acute", 
        "0accent", 
        "ebreve", 
        "fraktur", 
        "hookabove", 
        "nvertedbreve", 
        "*macron", 
        ";niarmenian", 
        ".gonek", 
        "african", 
        "dieresis", 
        "ismall", 
        "(tilde", 
        ",below", 
        "tzhitsa", 
        "vdblgrave", 
        "Aaarmenian", 
        "circle", 
        "4umflex", 
        "Kheharmenian", 
        "jsmall", 
        "Bsquare", 
        "Ksquare", 
        "abashkir", 
        "descender", 
        "stroke", 
        "verticalstroke", 
        "6edilla#", 
        "6ommaaccent", 
        "2dotbelow", 
        "Teharmenian", 
        "?narmenian", 
        "eicoptic", 
        "4linebelow", 
        "9acute", 
        "=caron", 
        ";edilla#", 
        "<umflexbelow", 
        ";ommaaccent", 
        "?accent#", 
        "6below", 
        "8macron", 
        "<iwnarmenian", 
        ":linebelow", 
        "Aslash", 
        "Bsquare", 
        "circle", 
        "@dotaccent", 
        "otaccentsmall", 
        "slash#", 
        "topbar", 
        "eabkhasian", 
        "edillabreve", 
        "5harmenian", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "dblgrave", 
        "ieresis", 
        "accent", 
        "7harmenian", 
        "ookabove", 
        "!gightroman", 
        "nvertedbreve", 
        "dotified", 
        "!jevenroman", 
        "macron", 
        "descender", 
        "ogonek", 
        "psilon", 
        "eversed", 
        "descender", 
        "8rmenian", 
        "reversed", 
        "circle", 
        "dotaccent", 
        "Veharmenian", 
        "icoptic", 
        "!dveroman", 
        "!courroman", 
        "fsmall", 
        "Bsquare", 
        "african", 
        "ngiacoptic", 
        "\"edilla#", 
        "umflex", 
        "\"ommaaccent", 
        " accent", 
        "Bhadarmenian", 
        "emiddlehook", 
        "stroke", 
        "upturn", 
        "3imarmenian", 
        " macron", 
        "`small", 
        "gsmall", 
        "Psquare", 
        "aabkhasian", 
        "descender", 
        "*rdsign", 
        "macron", 
        "dotbelow", 
        "hookabove", 
        "umflex", 
        "dotbelow", 
        "hookabove", 
        "dblgrave", 
        "ieresis", 
        "macron", 
        "otbelow", 
        "macron", 
        "hookabove", 
        "nvertedbreve", 
        "macron", 
        "ogonek", 
        "asmall", 
        "1ybarmenian", 
        "circle", 
        "dotaccent", 
        "2narmenian", 
        "linebelow", 
        "revesmall", 
        "bsmall", 
        "topbar", 
        ">aarmenian", 
        "edilla", 
        "umflex", 
        "accent", 
        "edillasmall", 
        "Ihaarmenian", 
        "eabkhasian", 
        "descenderabkhasian", 
        "ieresis", 
        "Charmenian", 
        "khakassian", 
        "verticalstroke", 
        "ircumflexsmall", 
        "Qoarmenian", 
        "csmall", 
        "4aarmenian", 
        "frican", 
        "edilla", 
        "umflexbelow", 
        "dotaccent", 
        "icoptic", 
        "ieresis", 
        "gammagreek", 
        "linebelow", 
        "hebrew", 
        "arabic", 
        "finalarabic", 
        "medialarabic", 
        "initialarabic", 
        "cyrillic", 
        "monospace", 
        "proportional", 
        "oldstyle", 
        "uniXXXX", 
        "UniStringAtom::GetLen: bad utf-8?", 
        "not ascii", 
        "UniStringAtom[]: no str", 
        "UniStringAtom::Setting platform string failed", 
        "gb18030", 
        "failed to create ICU converter", 
        "failed to initialize ICU", 
        "can't setup transmap. unknown codepage?", 
        "failed to translate from Unicode with ICU", 
        "F87E # Jpn-", 
        "failed to parse Apple corpchar file for deprecated mapping", 
        "Mac/CORPCHAR.TXT", 
        "failed to parse transmap file", 
        "basefont required", 
        "italicangle", 
        "weight", 
        "bolditalic", 
        "italic", 
        "compatible", 
        "subfamily", 
        "family", 
        "macenc", 
        "only CapStyle_None is supported with synthetic styles", 
        "capHorizScale/capVertScale out of range", 
        "Binvalid CTCapStyle", 
        "cannot create menu name database", 
        "?MingLi", 
        "MingLiU", 
        "DFKaiShu-SB-Estd-BF", 
        "FangSong_GB2312", 
        "KaiTi_GB2312", 
        "Batang", 
        "KozMinStd-Regular", 
        "MS-Mincho", 
        "MS-Gothic", 
        "CourierNewPSMT", 
        "Algerian", 
        "ArialMT", 
        "TimesNewRomanPSMT", 
        "Myriad-Roman", 
        "MyriadPro-Regular", 
        "(system)", 
        "Gungsuh", 
        "MS-Hei", 
        "MS-Song", 
        "%%%%BeginFont: %s", 
        "userdict /Adobe_CTFauxDict 30 dict dup begin put", 
        "/$$$SUBSTITUTEBASE /%s def", 
        "/$$$FONTNAME /%s def", 
        "/$$$UNIQUEID %ld def", 
        "/$$$FONTBBOX { [ %ld %ld FontMatrix transform %ld %ld FontMatrix transform ] } def", 
        "/$$$ITALICANGLE %ld def", 
        "/$$$CAPHEIGHT %ld def", 
        "/$$$STEMV %ld def", 
        "/$$$XHEIGHT %ld def", 
        "/$$$FULLNAME (%s Substitution) def", 
        "/$$$FAMILYNAME (%s) def", 
        "/$$$UNDERLINEPOSITION %ld def", 
        "/$$$UNDERLINETHICKNESS %ld def", 
        "/$$$HDESIGNVECTOR { [ [ %s %s currentdict /ConvertDesignVector known ", 
        "{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 1.0 ] } def", 
        "/$$$xDESIGNVECTOR { [ [ %s %s currentdict /ConvertDesignVector known ", 
        "{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] %s ] } def", 
        "/$$$INFODICTSIZE 256 def", 
        "/$$$EXPANDDICTSIZE 256 def", 
        "/$$$COMPRESSDICTSIZE 256 def", 
        "/$$$DOESSMALLCAPS %s def", 
        "/$$$ORIGFONTTYPE /%.128s def", 
        "/$$$ASCENT %ld def", 
        "/$$$DESCENT %ld def", 
        "ct_EuroDict begin dup{/%s dup findfont /CharStrings 2 copy known", 
        "{get /Euro known{pop false exch}{true 3 -1 roll}ifelse}", 
        "{pop pop false exch}ifelse}if end", 
        "$$$SUBSTITUTEBASE findfont dup maxlength 19 add dict begin/SubstMaster exch", 
        "def SubstMaster{exch dup dup dup/FID eq exch/UniqueID eq or exch/XUID eq or{", 
        "pop pop}{exch def}ifelse}bind forall/SubstitutionVersion 3 def/FontName", 
        "$$$FONTNAME def/FontType 3 def/FontBBox $$$FONTBBOX def/CharBBox FontBBox dup", 
        "length array copy def/xtfm[FontMatrix 0 get/mul cvx FontMatrix 4 get 0 ne{", 
        "FontMatrix 4 get/add cvx}if]cvx bind def/FontMatrix[1 0 currentdict /FontInfo known {FontInfo/ItalicAngle", 
        "get $$$ITALICANGLE sub sin } {0} ifelse 1 0 0]def currentdict /FontInfo known {/FontInfo FontInfo", 
        "dup length 10 add dict begin{", 
        "def}forall/FullName $$$FULLNAME def/FamilyName $$$FAMILYNAME def/ItalicAngle", 
        "$$$ITALICANGLE def/CapHeight $$$CAPHEIGHT def/StemV $$$STEMV def/XHeight $$$XHEIGHT def", 
        "/Ascent $$$ASCENT def/Descent $$$DESCENT def/OrigFontType $$$ORIGFONTTYPE def", 
        "$$$UNDERLINEPOSITION UnderlinePosition SubstMaster", 
        "/FontMatrix get transform/UnderlinePosition exch def pop $$$UNDERLINETHICKNESS", 
        "UnderlineThickness SubstMaster/FontMatrix get transform/UnderlineThickness", 
        "exch def pop currentdict end def} if currentdict/StrokeWidth known not{", 
        "/StrokeWidth 0 def}if/dvlen currentdict /FontInfo known {FontInfo dup /BlendAxisTypes known", 
        "{/BlendAxisTypes get length} {pop 2} ifelse} {2} ifelse def/cvlen", 
        "currentdict dup /WeightVector known {/WeightVector get length} {pop 4} ifelse def/str 1 string def currentdict", 
        "/$$SubUD$$ where{pop false false}{/shareddict where{pop currentshared not dup{", 
        "true setshared}if shareddict}{false userdict}ifelse/$$SubUD$$ 24 dict put true", 
        "}ifelse $$SubUD$$ begin{$$SubUD$$/bp{bind put}bind put $$SubUD$$/bd{bind def}", 
        "bp $$SubUD$$/pwinstr{3 -1 roll cvi 32768 add dup 256 idiv dup 256 mod 4 index", 
        "4 index 3 -1 roll put 256 mul sub 2 index 2 index 1 add 3 -1 roll put 2 add}bp", 
        "$$SubUD$$/pinstr{exch 3 sub exch 128 add abs dup cvi dup 4 index 4 index 3 -1", 
        "roll put sub 256 mul dup cvi dup 4 index 4 index 1 add 3 -1 roll put sub 256", 
        "mul cvi 2 index 2 index 2 add 3 -1 roll put}bp $$SubUD$$/gwfrstr{2 copy 2 copy", 
        "get 256 mul 3 1 roll 1 add get add 32768 sub exch 2 add exch}bp $$SubUD$$", 
        "/gwtvec{[3 1 roll cvlen{2 copy 2 copy 2 copy get 256 mul 3 1 roll 1 add get", 
        "add 256 mul 3 1 roll 2 add get add 65536.0 div 128.0 sub 3 1 roll 3 add}repeat pop", 
        "pop]}bp $$SubUD$$ /GetGlyphString{dup InfoDict exch known{InfoDict exch get}{", 
        "dup InfoDict exch 3 cvlen 3 mul add string dup 0 UpperMaster put put InfoDict", 
        "exch get}ifelse}bp $$SubUD$$/X{GetGlyphString 1 pwinstr 3 cvlen mul add dvlen", 
        "2 add 2 roll currentdict /ConvertDesignVector known", 
        "{ConvertDesignVector}{pop pop 0 0 0 1}ifelse cvlen 2 add -2 roll cvlen{3 -1 roll pinstr}", 
        "repeat pop pop}bp $$SubUD$$/Y{dup ExpandDict exch 4 -1 roll xtfm 2 div put X}", 
        "bp $$SubUD$$/Z{dup CompressDict exch 4 -1 roll put X}bp $$SubUD$$/L{dup", 
        "GetGlyphString 0 LowerMaster put}bp $$SubUD$$/S{CharStrings exch get", 
        "CharStrings exch 2 index exch put L}bp $$SubUD$$/R{3 index 3 index CharStrings", 
        "dup 4 1 roll exch get put dvlen add copy exch pop exec 3 -1 roll pop exec}bp", 
        "$$SubUD$$/RX{{X}4 R}bp $$SubUD$$/RY{{Y}5 R}bp $$SubUD$$/RZ{{Z}5 R}bp", 
        "systemdict/internaldict known{1183615869 systemdict/internaldict get{exec}", 
        "stopped{false}{dup/setweightvector known{true}{pop false}ifelse}ifelse}{false}", 
        "ifelse{/setweightvector get $$SubUD$$ exch/@setweightvector exch put $$SubUD$$", 
        "/cbwa1 false put version length 4 ge{version 0 4 getinterval dup(2015)eq exch", 
        "(2016)eq or{systemdict/internaldict known{1183615869 systemdict/internaldict", 
        "get{exec}stopped not{/CIDRun known{$$SubUD$$/cbwa1 true put}if}if}if}if}if", 
        "$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict", 
        "exch def/code exch def/glyph Encoding code get def/cshare currentshared def", 
        "InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known{/glyph", 
        "/space def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict glyph get", 
        "dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{BlendsArray", 
        "scheck setshared dup 0 get SubstMaster  dup /WeightVector known", 
        "{exch makeblendedfont begin 1 get", 
        "/FontMatrix exch FontMatrix exch dup matrix scale matrix concatmatrix def", 
        "$$SubUD$$/cbwa1 get{Private/UniqueID 1 put}if/PaintType fontdict/PaintType get", 
        "def/StrokeWidth fontdict/StrokeWidth get def /@SUB currentdict definefont", 
        "setfont BlendsArray blnd currentdict put currentdict end} {exch pop", 
        "begin pop currentdict setfont BlendsArray blnd currentdict ", 
        "put currentdict end} ifelse }if begin 1 gwfrstr", 
        "xtfm 0 CharBBox aload pop setcachedevice fontdict/PaintType get PaintType ne", 
        "fontdict/CharStrings get CharStrings ne or fontdict/StrokeWidth get", 
        "StrokeWidth ne or{CharStrings fontdict/CharStrings get eq{true}{fontdict", 
        "/CharStrings get scheck}ifelse setshared currentdict end dup length dict begin", 
        "{exch dup/FID eq{pop pop}{exch def}ifelse}forall/PaintType fontdict/PaintType", 
        "get def/StrokeWidth fontdict/StrokeWidth get def/CharStrings fontdict", 
        "/CharStrings get def gwtvec SubstMaster /WeightVector known {/WeightVector exch def}", 
        "{pop} ifelse /@SUB currentdict definefont", 
        "setfont fontdict/BlendsArray get scheck not currentdict scheck or{fontdict", 
        "/BlendsArray get blnd currentdict put}if cshare setshared}{currentdict setfont", 
        "currentdict scheck setshared gwtvec currentdict exch SubstMaster /WeightVector known", 
        "{@setweightvector cshare setshared}{pop pop}ifelse", 
        "}ifelse ExpandDict glyph known{ExpandDict glyph get 0 translate}{", 
        "CompressDict glyph known{CompressDict glyph get 1 scale}if}ifelse mark", 
        "cachestatus 0 setcachelimit 0 0 moveto glyph glyphshow setcachelimit", 
        "cleartomark end}{0 0 0 0 0 0 setcachedevice}ifelse end end end}bp}{systemdict", 
        "/rectfill known{version dup length 4 ge{0 4 getinterval dup(2013)eq exch(2012)", 
        "eq or}{pop false}ifelse{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop", 
        "0 setcachelimit currentdict/XUID undef}bp$$SubUD$$/dct2{setcachelimit}bp}", 
        "{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop 0 setcachelimit}bp", 
        "$$SubUD$$/dct2{setcachelimit}bp}ifelse}{$$SubUD$$/dct1{}put $$SubUD$$/dct2{}put}ifelse", 
        "$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict", 
        "exch def/code exch def/glyph Encoding code get def InfoDict glyph known not", 
        "glyph/.notdef ne and{InfoDict/space known Encoding 32 get/space eq and{/glyph", 
        "/space def/code 32 def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict", 
        "glyph get dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{", 
        "dup 0 get SubstMaster dup /WeightVector known", 
        "{exch makeblendedfont begin 1 get /FontMatrix exch", 
        "FontMatrix exch dup matrix scale matrix concatmatrix def BlendsArray blnd", 
        "currentdict put currentdict end}{exch pop", 
        "begin pop currentdict setfont BlendsArray blnd currentdict ", 
        "put currentdict end} ifelse } if begin save exch 1 gwfrstr xtfm 0 CharBBox", 
        "aload pop setcachedevice gwtvec SubstMaster /WeightVector known", 
        "{/WeightVector exch def} {pop} ifelse/Encoding fontdict", 
        "/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict", 
        "/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph", 
        "known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict", 
        "glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1", 
        "index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if", 
        "/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul", 
        "load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}", 
        "for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0", 
        "moveto str 0 code put str show dct2 restore end}{0 0 0 0 0 0 setcachedevice}ifelse", 
        "end end end}bp/currentshared where{pop true}{false}ifelse{$$SubUD$$", 
        "/PatchSubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict exch", 
        "def/code exch def/glyph Encoding code get def/cshare currentshared def", 
        "InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known Encoding 32", 
        "get/space eq and{/glyph/space def/code 32 def}{/glyph/.notdef def}ifelse}if", 
        "glyph/.notdef ne{InfoDict glyph get dup 0 get/blnd exch def BlendsArray blnd", 
        "get dup type/dicttype ne{BlendsArray scheck setshared dup 0 get SubstMaster", 
        "dup /WeightVector known ", 
        "{exch makeblendedfont begin 1 get /FontMatrix exch FontMatrix exch dup matrix", 
        "scale matrix concatmatrix def BlendsArray blnd currentdict put currentdict end}", 
        "{exch pop begin pop currentdict setfont BlendsArray blnd currentdict ", 
        "put currentdict end} ifelse ", 
        "}if false setshared dup maxlength dict copy begin 1 gwfrstr xtfm 0 CharBBox", 
        "aload pop setcachedevice gwtvec SubstMaster /WeightVector known", 
        "{/WeightVector exch def} {pop} ifelse/Encoding fontdict", 
        "/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict", 
        "/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph", 
        "known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict", 
        "glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1", 
        "index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if", 
        "/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul", 
        "load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}", 
        "for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0", 
        "moveto str 0 code put str show dct2 end cshare setshared}{0 0 0 0 0 0", 
        "setcachedevice}ifelse end end end}bp}if}ifelse}if{false setshared}if begin", 
        "$$SubUD$$/@setweightvector known{/BuildChar $$SubUD$$/SubBuildChar get def}{", 
        "/currentshared where{pop currentshared}{false}ifelse{/BuildChar $$SubUD$$", 
        "/PatchSubBuildChar get def}{/BuildChar $$SubUD$$/SubBuildChar get def}ifelse}", 
        "ifelse/UpperMaster 0 def/LowerMaster 1 def/BlendsArray[$$$HDESIGNVECTOR", 
        "$$$xDESIGNVECTOR]def/InfoDict $$$INFODICTSIZE dict def/ExpandDict", 
        "$$$EXPANDDICTSIZE dict def/CompressDict $$$COMPRESSDICTSIZE dict def", 
        "$$$DOESSMALLCAPS{/CharStrings CharStrings dup maxlength dict begin{def}bind", 
        "forall currentdict end def}if", 
        "end end currentdict end", 
        "/%s exch definefont pop", 
        "ct_EuroDict begin", 
        "{{dup findfont /InfoDict get /Euro known", 
        "{/Euro ct_AddGlyphToPrinterFont}", 
        "{ pop restore }ifelse}{restore}ifelse}if end", 
        "%%%%EndFont", 
        "%s %s %ld%s/%.30s%s%c", 
        "/%.30s %s", 
        "/%c %s def", 
        "Invalid replacement glyphID", 
        "faux handler required", 
        "mm base font required", 
        "base font name required", 
        "base font required", 
        "fontname required", 
        "cannot convert design vector", 
        "v@Width", 
        "font set required", 
        "unknown exception caught in WriteTable", 
        "could not write", 
        "one codepoint points to multiple glyphids", 
        "cmap must only be generated when unicodes provided", 
        "could not read glyf data", 
        "LocaAndGlyfGenerator assumes loca will be written first", 
        "overscore", 
        "nbspace", 
        "increment", 
        "cannot write to stream", 
        " 256 array 0 1 255 {1 index exch /.notdef put} for ", 
        "cannot do this conversion", 
        "incorrect call to sfnt write", 
        "cannot write cff", 
        "cannot initialize sfnt write library", 
        "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", 
        "0123456789abcdef", 
        "dup %d /", 
        " findfont /Encoding get", 
        " /Encoding get", 
        "  currentdict end definefont pop", 
        "/Encoding ", 
        " findfont dup maxlength dict begin {1 index /FID ne {def} {pop pop} ifelse} forall", 
        "%%%%BeginResource: %s %.128s", 
        "CIDFont", 
        "%%ADOBeginSubsetFont: %.128s %s", 
        "AddGlyphs", 
        "Initial", 
        "%ADOEndSubsetFont", 
        "Adobe_CoolType_Utility begin ct_MakeOCF begin", 
        "Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit", 
        "end end", 
        "ct_restoreCIDInit /%.140s /Identity-%s %d [/%.128s] ct_ComposeFont pop end end", 
        "0 1 255 {1 index exch /.notdef put} for", 
        "256 array", 
        "/FontBBox ", 
        "/FontMatrix ", 
        "/FontName /", 
        "/FontType 3 def", 
        "ct_T3Defs", 
        "/.notdef {", 
        "systemdict /gcheck known {setglobal} if end end", 
        "currentdict end def FontName currentdict end definefont pop", 
        "systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if", 
        "/GlyphProcs get begin", 
        "systemdict begin ", 
        " dict begin", 
        "/GlyphProcs ", 
        "Type42DictBegin", 
        "%f %f %f %f", 
        "/CIDMap [", 
        "/sfnts", 
        "/Encoding 1 array dup 0 /.notdef put readonly def", 
        "/CharStrings 1 dict dup begin /.notdef 0 def end def", 
        "/CDevProc {pop pop pop pop pop 0 -1 7 index 2 div .88}bind def", 
        "/CDevProc {pop}bind def", 
        "/Metrics2 16 dict def", 
        "/CIDCount ", 
        "/FontBBox [", 
        "/FontMatrix [1 0 0 1 0 0] def", 
        "/Ordering (Identity) def", 
        "/Registry (Adobe) def", 
        "/GDBytes ", 
        "/CIDFontType 2 def", 
        "/FontType 42 def", 
        "/PaintType 0 def", 
        "/CIDFontName /", 
        "18 dict begin", 
        " T0AddT42Mtx2", 
        "%.8g %.8g %.8g] /", 
        " AddT42Char ", 
        " %d def", 
        " /CharStrings get begin", 
        "] AllocGlyphStorage", 
        "CIDFontName currentdict end /CIDFont defineresource pop", 
        "/GlyphDirectory 16 dict def", 
        "Type42DictEnd", 
        "PrepFor2015", 
        "systemdict /gcheck known {setglobal} if", 
        " gcheck setglobal} if", 
        "systemdict /gcheck known {currentglobal ", 
        "] ct_ComposeFont pop", 
        "-Identity-%s /Identity-%s %d [/", 
        " GetGlyphDirectory", 
        "ct_GlyphDirProcs begin", 
        "ct_T42Dict begin ", 
        "} {/__", 
        "ct_T3HdrDict /Is2016andT32? get {/", 
        "div 0 0 ]", 
        "div 0 0 -1 ", 
        "-Identity-H} {/", 
        "ct_T3HdrDict /Is2016andT32? get {/+", 
        "} ifelse AddT3T32Char", 
        "Is2016andT32? {/+", 
        "%ld %ld true ", 
        "Is2016andT32? {%d} {%d} ifelse", 
        "Is2016andT32? not {", 
        "T32RsrcEnd", 
        "T32RsrcBegin", 
        "GreNewFont", 
        "JISX0208.txt", 
        "JISX0213.txt", 
        "HKSCS.txt", 
        "Japanese83pv.txt", 
        "zdingbat.txt", 
        "symbol.txt", 
        "CP950.TXT", 
        "CP949.TXT", 
        "CP936.TXT", 
        "CP932.TXT", 
        "CP874.TXT", 
        "CP1258.TXT", 
        "CP1257.TXT", 
        "CP1256.TXT", 
        "CP1255.TXT", 
        "CP1254.TXT", 
        "CP1253.TXT", 
        "CP1252.TXT", 
        "CP1251.TXT", 
        "CP1250.TXT", 
        "TURKISH.TXT", 
        "THAI.TXT", 
        "SYMBOL.TXT", 
        "ROMANIAN.TXT", 
        "ROMAN.TXT", 
        "KOREAN.TXT", 
        "JAPANESE.TXT", 
        "ICELAND.TXT", 
        "HEBREW.TXT", 
        "GURMUKHI.TXT", 
        "GUJARATI.TXT", 
        "GREEK.TXT", 
        "FARSI.TXT", 
        "DINGBATS.TXT", 
        "DEVANAGA.TXT", 
        "CYRILLIC.TXT", 
        "CROATIAN.TXT", 
        "CHINTRAD.TXT", 
        "CHINSIMP.TXT", 
        "CENTEURO.TXT", 
        "ARABIC.TXT", 
        "CORPCHAR.TXT", 
        "cannot access unicode directory", 
        "can't get Unicode file", 
        "C:\\dummy\\", 
        "invalid UTF conversion policy", 
        "invalid to-UTF format", 
        "invalid from-UTF format", 
        "variant tag", 
        "group next ", 
        "transcoding hint: ", 
        "# deprecated,", 
        "/LanguageGroup invalid", 
        "/ForceBold invalid", 
        "/isFixedPitch invalid", 
        "/UnderlineThickness invalid", 
        "/UnderlinePosition positive", 
        "/FamilyOtherBlues value too large?", 
        "/FamilyBlues value too large?", 
        "/OtherBlues value too large?", 
        "/BlueValues value too large?", 
        "/UIDBase out of range", 
        "/UniqueID out of range", 
        "/BlueFuzz useless", 
        "/BlueShift useless", 
        "/BlueScale useless", 
        "family zone overlap", 
        "regular zone overlap", 
        "/BlueScale too large/small", 
        "/FamilyOtherBlues invalid", 
        "/FamilyBlues invalid", 
        "/OtherBlues invalid", 
        "/BlueValues invalid", 
        "/StemSnapV invalid", 
        "/StemSnapH invalid", 
        "/StdVW invalid", 
        "/StdHW invalid", 
        "/StdVW missing", 
        "/StdHW missing", 
        "reserved /FSType bit(s) set", 
        "internal inconsistency detected", 
        "client failed glyph parse", 
        "client quit glyph parse", 
        "invalid path callback sequence", 
        "unsupported generic op in glyph callback", 
        "unsupported seac op in glyph callback", 
        "out of memory", 
        "no error", 
        "@unknown error", 
        "absfont", 
        "?invalid OrigFontType value", 
        "invalid FSType value", 
        "CFF table missing", 
        "sfntread library error", 
        "requested glyph not in font", 
        "CharStrings INDEX missing", 
        "not CFF font type", 
        "invalid FDSelect format", 
        "FDSelect missing", 
        "invalid supplementary encoding", 
        "invalid Encoding format", 
        "invalid charset format", 
        "multiple-font FontSet (unsupported)", 
        "invalid FDArray", 
        "FDArray missing", 
        "Private DICT missing", 
        "invalid DICT operator", 
        "Chameleon font (unsupported)", 
        "invalid CIDFontType", 
        "invalid charstring type", 
        "invalid DICT array size", 
        "empty DICT", 
        "SID access out of bounds", 
        "invalid BCD DICT argument", 
        "invalid FontMatrix", 
        "bad INDEX header", 
        "bad INDEX offset array", 
        "INDEX access out of bounds", 
        "DICT stack overflow", 
        "DICT stack underflow", 
        "source stream error", 
        "charstring parse error", 
        "Semibold", 
        "001.003", 
        "001.002", 
        "001.001", 
        "001.000", 
        "Ydieresissmall", 
        "Thornsmall", 
        "Yacutesmall", 
        "Udieresissmall", 
        "Ucircumflexsmall", 
        "Uacutesmall", 
        "Ugravesmall", 
        "Oslashsmall", 
        "OEsmall", 
        "Odieresissmall", 
        "Otildesmall", 
        "Ocircumflexsmall", 
        "Oacutesmall", 
        "Ogravesmall", 
        "Ntildesmall", 
        "Ethsmall", 
        "Idieresissmall", 
        "Icircumflexsmall", 
        "Iacutesmall", 
        "Igravesmall", 
        "Edieresissmall", 
        "Ecircumflexsmall", 
        "Eacutesmall", 
        "Egravesmall", 
        "Ccedillasmall", 
        "AEsmall", 
        "Aringsmall", 
        "Adieresissmall", 
        "Atildesmall", 
        "Acircumflexsmall", 
        "Aacutesmall", 
        "Agravesmall", 
        "commainferior", 
        "periodinferior", 
        "dollarinferior", 
        "centinferior", 
        "nineinferior", 
        "eightinferior", 
        "seveninferior", 
        "sixinferior", 
        "fiveinferior", 
        "fourinferior", 
        "threeinferior", 
        "twoinferior", 
        "oneinferior", 
        "zeroinferior", 
        "ninesuperior", 
        "eightsuperior", 
        "sevensuperior", 
        "sixsuperior", 
        "fivesuperior", 
        "foursuperior", 
        "zerosuperior", 
        "twothirds", 
        "onethird", 
        "seveneighths", 
        "fiveeighths", 
        "threeeighths", 
        "oneeighth", 
        "questiondownsmall", 
        "Cedillasmall", 
        "Ringsmall", 
        "Ogoneksmall", 
        "hypheninferior", 
        "figuredash", 
        "Macronsmall", 
        "Dotaccentsmall", 
        "Caronsmall", 
        "Brevesmall", 
        "Dieresissmall", 
        "Zcaronsmall", 
        "Scaronsmall", 
        "Lslashsmall", 
        "centoldstyle", 
        "exclamdownsmall", 
        "Tildesmall", 
        "rupiah", 
        "onefitted", 
        "colonmonetary", 
        "Zsmall", 
        "Ysmall", 
        "Xsmall", 
        "Wsmall", 
        "Vsmall", 
        "Usmall", 
        "Tsmall", 
        "Ssmall", 
        "Rsmall", 
        "Qsmall", 
        "Psmall", 
        "Osmall", 
        "Nsmall", 
        "Msmall", 
        "Lsmall", 
        "Ksmall", 
        "Jsmall", 
        "Ismall", 
        "Hsmall", 
        "Gsmall", 
        "Fsmall", 
        "Esmall", 
        "Dsmall", 
        "Csmall", 
        "Bsmall", 
        "Asmall", 
        "Gravesmall", 
        "hyphensuperior", 
        "Circumflexsmall", 
        "parenrightinferior", 
        "parenleftinferior", 
        "tsuperior", 
        "ssuperior", 
        "rsuperior", 
        "osuperior", 
        "nsuperior", 
        "msuperior", 
        "lsuperior", 
        "isuperior", 
        "esuperior", 
        "dsuperior", 
        "centsuperior", 
        "bsuperior", 
        "asuperior", 
        "questionsmall", 
        "periodsuperior", 
        "threequartersemdash", 
        "commasuperior", 
        "nineoldstyle", 
        "eightoldstyle", 
        "sevenoldstyle", 
        "sixoldstyle", 
        "fiveoldstyle", 
        "fouroldstyle", 
        "threeoldstyle", 
        "twooldstyle", 
        "oneoldstyle", 
        "zerooldstyle", 
        "onedotenleader", 
        "twodotenleader", 
        "parenrightsuperior", 
        "parenleftsuperior", 
        "Acutesmall", 
        "ampersandsmall", 
        "dollarsuperior", 
        "dollaroldstyle", 
        "Hungarumlautsmall", 
        "exclamsmall", 
        " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "!\"$%&'()*+0123456789<=>?ABCDEILMNORSTVYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "%s FD[%d] (ignored)", 
        "%s (ignored)", 
        "cffread", 
        "0123456789.EE?-?", 
        " /OCF def%n", 
        " /TrueType def%n", 
        " /CID def%n", 
        " /Type1 def%n", 
        "/OrigFontType", 
        "two FSTypes (OS/2 value retained, CFF value removed)", 
        " %ld def%n", 
        "/FSType", 
        "defunct /MultipleMaster operator", 
        "Invalid DICT op %hu (ignored)", 
        "invalid DICT op ESC%hu (ignored)", 
        "defunct /defaultWidthY operator (ignored)", 
        "defunct /VToHOrigin operator (ignored)", 
        "defunct /lenIV operator (ignored)", 
        "defunct /ForceBoldThreshold operator (ignored)", 
        "FamilyBlues empty array (ignored)", 
        "OtherBlues empty array (ignored)", 
        "/BlueValues missing: FD[%ld]", 
        "(t2c) %s <%s>", 
        "(t2c) %s <cid-%hu>", 
        "charstring too long", 
        "different charstring already present", 
        "identical charstring already present", 
        "glyph type doesn't match font type", 
        "missing CID 0 glyph", 
        "missing .notdef glyph", 
        "unimplemented feature", 
        "bad dictionary specification", 
        "temporary stream error", 
        "destination stream error", 
        "Z@cffwrite", 
        "/FSType %ld def", 
        "/OrigFontType /%s def", 
        " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "!\"$%&'()*+0123456789<=>?ABCDEILMNORSTVYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "@unknown warning!", 
        "glyph skipped - same name, different charstring as glyph in font", 
        "glyph skipped - duplicate of glyph in font", 
        "suspect flex args", 
        "non-perpendicular flex", 
        "unused hints", 
        "consecutive hintsubs (discarded)", 
        "all hintsubs removed (fixupmap enabled)", 
        "hint overlap", 
        "stem list overflow (discarded)", 
        "unhinted", 
        "duplicate hintsubs (discarded)", 
        "negative hint (reversed)", 
        "moveto sequence (collapsed)", 
        "moveto preceeds closepath (discarded)", 
        "no initial moveto (inserted)", 
        "%s <%s>%s", 
        "%s <cid-%hu>%s", 
        " (X%hu)", 
        "v@fffff", 
        "^@%*.*g", 
        "ctutil", 
        "dynarr", 
        "doctype", 
        "operator", 
        "procedure", 
        "dictionary", 
        "ASCII85", 
        "hexstring", 
        "string", 
        "immediate", 
        "literal", 
        "integer", 
        "inappropriate function call or arguments", 
        "bad hex string", 
        "bad ASCII85 string", 
        "can't read source stream", 
        "no memory", 
        "pstoken", 
        "{%-10s,%4ld,%.*s}", 
        "{%-10s,%4ld,%.26s ... %.26s}", 
        "{INVALID   ,-    ,-}", 
        "unrecognized sfnt version", 
        "sfntread", 
        "duplicate tables registered", 
        "client aborted function", 
        "sfntwrite", 
        "invalid flex operator", 
        "invalid or missing seac component", 
        "bounds check (storeWV)", 
        "domain error (sqrt)", 
        "bounds check (roll)", 
        "bounds check (index)", 
        "bounds check (get)", 
        "bounds check (put)", 
        "bounds check (load)", 
        "bounds check (store)", 
        "bounds check (callsubr)", 
        "invalid counter control operator", 
        "invalid lenIV parameter", 
        "invalid WV for blend operator", 
        "invalid operator", 
        "operand stack overflow", 
        "operand stack underflow", 
        "?t1cstr", 
        "bad charstring length", 
        "bad subr length", 
        "FD index out of range", 
        "/GlyphDirectory CID out of range", 
        "inconsitent MM geometry", 
        "WeightVector missing", 
        "BlendDesignMap missing", 
        "BlendDesignPositions missing", 
        "unsupported StartData type", 
        "CID 0 (notdef) missing", 
        "SubrMapOffset missing", 
        "CIDMapOffset missing", 
        "unsupported font type: hybrid", 
        "unsupported font type: Chameleon", 
        "unsupported /CIDFontType", 
        "too many FDArray elements or key redefined", 
        "unsupported /FontType", 
        "invalid key value", 
        "invalid char entry", 
        "invalid char name", 
        "invalid subr entry", 
        "invalid /Subrs count", 
        "unterminated charstring", 
        "can't decrypt charstring", 
        "PostScript parse error", 
        "tmp stream error", 
        "TektonMM-Oblique", 
        "ITCAvantGardeMM-Oblique", 
        "KeplMM-Sw", 
        "KeplMM-SC", 
        "KeplMM-ItSC", 
        "KeplMM-ItEp", 
        "KeplMM-It", 
        "KeplMM-Ep", 
        "KeplMM", 
        "AJensonMM-Sw", 
        "AJensonMM-SC", 
        "AJensonMM-ItSC", 
        "AJensonMM-ItEp", 
        "AJensonMM-ItAlt", 
        "AJensonMM-It", 
        "AJensonMM-Ep", 
        "AJensonMM-Alt", 
        "AJensonMM", 
        "WasEmbedded", 
        "Copyright", 
        "Chameleon", 
        "CIDInit", 
        "CIDFontRevision", 
        "BaseFontName", 
        "BaseFontBlend", 
        "null charstring name", 
        "_null_name_substitute_", 
        "no XUID in MM font", 
        "%.*s%s", 
        "SnapShotMM", 
        "t1read", 
        "(pst) %s", 
        "readonly", 
        "Invalid codepoint in encoding vector %d", 
        "put operator expected in encoding vector", 
        "Invalid token in encoding vector (literal expected)", 
        "Invalid token in encoding vector (integer expected)", 
        "unterminated charstring subr[%ld] (invalidating)", 
        "unterminated charstring FD[%d].subr[%ld] (invalidating)", 
        "can't decrypt subr[%ld]", 
        "can't decrypt FD[%d].subr[%ld]", 
        "invalid subr entry [%ld]", 
        "sparse /Subr array (invalidating unset entries)", 
        "duplicate subrs", 
        "unterminated charstring <%s>", 
        "unterminated charstring CID-%d", 
        "can't decrypt <%s>", 
        "can't decrypt CID-%d", 
        "missing .notdef glyph (inserted)", 
        "invalid character entry <%s>", 
        "duplicate charstring <%s> (discarded)", 
        "C/%s bad value", 
        "/%s bad value: FD[%d]", 
        "/%s array too big (truncated)", 
        "/%s array empty (discarded)", 
        "/%s empty array (ignored)", 
        "readhexstring", 
        "currentfile", 
        "invalid FD index CID-%ld", 
        "invalid char entry CID-%ld", 
        "bad charstring length <cid-%ld>", 
        "/CIDCount too big (ignored)", 
        "bad subr length FD[%d].subr[%ld]", 
        "/SDBytes: bad value: FD[%d]", 
        "/SubrMapOffset missing: FD[%d]", 
        "StartData length is %ld bytes too short (ignored)", 
        "StartData length is %ld bytes too long (ignored)", 
        "(t1c) %s <%s>", 
        "(t1c) %s <cid-%hu>", 
        "/eCCRun", 
        "/CCRun", 
        "duplicate /FamilyBlues (ignored)", 
        "(Binary)", 
        "no glyphs in addition font", 
        "multiple glyphs with the same encoding", 
        "SING stream error", 
        "/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}", 
        "{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def", 
        "/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869", 
        "systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup", 
        "/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{", 
        "}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def", 
        "/internaldict known not{pop 3}{1183615869 systemdict/internaldict get exec dup", 
        "/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop", 
        "3}ifelse}ifelse}ifelse}executeonly]def", 
        "/internaldict get exec dup length exch maxlength eq{false}{1183615869", 
        "systemdict/internaldict get exec exch/FlxProc exch put true}ifelse}ifelse}", 
        "ifelse{systemdict/internaldict known{{1183615869 systemdict/internaldict get", 
        "exec/FlxProc get exec}}{{1183615869 userdict/internaldict get exec/FlxProc get", 
        "exec}}ifelse executeonly}if{gsave currentpoint newpath moveto}executeonly{", 
        "currentpoint grestore gsave currentpoint newpath moveto}executeonly{systemdict", 
        "itransform pop x2 sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add", 
        "def/x3 x3 eShift add def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{", 
        "x0 y0 x1 y1 x2 y2 curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict", 
        "/currentpacking known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch", 
        "{pop true exch restore}{systemdict/internaldict known not{1183615869 userdict", 
        "/internaldict get exec exch/FlxProc exch put true}{1183615869 systemdict", 
        "flipXY -1 eq{exch}if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt", 
        "{c1x2 c1y2 transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2", 
        "sub round 0 dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX", 
        "exdef}{pop dX 0 lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion", 
        ".5 ge and def erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub", 
        "ex floor add def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if", 
        "exch}if itransform exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2", 
        "eShift add def/y3 y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{", 
        "false PickCoords}{/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}", 
        "ifelse def/xshrink{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1", 
        "c3x1 xshrink def/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def", 
        "/c1y1 c3y1 def/c2y0 c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform", 
        "dtransform flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub", 
        "abs .001 gt{c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY", 
        "0 y2 c1y2 sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{", 
        "/dY exdef}{pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne", 
        "erosion .5 ge and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey", 
        "ceiling ey sub ey floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{", 
        "/internaldict known{1183615869 systemdict/internaldict get exec dup/erosion", 
        "known{/erosion get/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2", 
        "eq or{false PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub", 
        "div abs}ifelse def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink", 
        "def/c1y1 c3y1 yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0", 
        "c3x0 def/c1x1 c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round", 
        "def/PickCoords{{c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{", 
        "c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5", 
        "exdef/y4 exdef/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef", 
        "/y0 exdef/x0 exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get", 
        "abs 1e-05 lt or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt", 
        "or{/flipXY 1 def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict", 
        "{100 dict begin/mtx matrix def dup/$FlxDict currentdict put end}if}{100 dict", 
        "begin/mtx matrix def dup/$FlxDict currentdict put end}ifelse}if/$FlxDict get", 
        "begin}if grestore/exdef{exch def}def/dmin exch abs 100 div def/epX exdef/epY", 
        "exdef/c4y2 exdef/c4x2 exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2", 
        "exdef/c3x2 exdef/c3y1 exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2", 
        "exdef/c2x2 c4x2 def/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt", 
        "ifelse}dup 14 get 1 25 dict put bind executeonly put}if 1183615869 userdict", 
        "/internaldict get exec/FlxProc known{save true}{false}ifelse}ifelse[systemdict", 
        "/internaldict known not{100 dict/begin cvx/mtx matrix/def cvx}if systemdict", 
        "/currentpacking known{currentpacking true setpacking}if{systemdict", 
        "/internaldict known{1183615869 systemdict/internaldict get exec dup/$FlxDict", 
        "known not{dup dup length exch maxlength eq{pop userdict dup/$FlxDict known not", 
        "% Copyright 1987-1990 Adobe Systems Incorporated. All rights reserved.", 
        "/OtherSubrs[systemdict/internaldict known{1183615869 systemdict/internaldict", 
        "get exec/FlxProc known{save true}{false}ifelse}{userdict/internaldict known", 
        "not{userdict/internaldict{count 0 eq{/internaldict errordict/invalidaccess get", 
        "exec}if dup type/integertype ne{/internaldict errordict/invalidaccess get exec", 
        "}if dup 1183615869 eq{pop 0}{/internaldict errordict/invalidaccess get exec}", 
        "/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869", 
        "systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup", 
        "/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def", 
        "0123456789ABCDEF", 
        "t1write", 
        " %ld -| ", 
        " %ld : ", 
        "dup %d", 
        "/Subrs 5 array", 
        "/%s %s def%s", 
        "/%s %ld def%s", 
        "/NameToGID %ld dict dup begin%s", 
        "isSINGglyphlet", 
        "/FontInfo %d dict dup begin%s", 
        "/FontMatrix [0.001 0 0 0.001 0 0] def", 
        "dup %ld /", 
        "/Encoding 256 array", 
        "/Encoding StandardEncoding def", 
        "/MinFeature {16 16} def", 
        "/lenIV -1 def", 
        "/password 5839 def", 
        "/RndStemUp false def", 
        "/Private %d dict dup begin%s", 
        "/BlueValues [0 0] def", 
        "/| {put} def", 
        "/|- {def} def", 
        "/-| {string currentfile exch readstring pop} def", 
        "%d dict dup begin%s", 
        "dup /Private", 
        "%%%%Copyright: Copyright %d Adobe System Incorporated. All rights reserved.%s", 
        "%%ADOt1write: (%d.%d.%d)%s", 
        "/FontBBox {", 
        "undef } if} stopped cleartomark} if", 
        "/version get exec cvi 3011 le {currentdict /XUID", 
        "systemdict /languagelevel known {mark {systemdict", 
        "end put", 
        "%ld dict dup begin%s", 
        "dup /CharStrings", 
        "%lu -| ", 
        "/sfnts [", 
        "cleartomark", 
        "0000000000000000000000000000000000000000000000000000000000000000", 
        "currentfile closefile", 
        "dup /FontName get exch definefont pop", 
        "systemdict begin", 
        "currentfile eexec ", 
        "%%BeginResource: font ", 
        "%!FontType1-1.1: ", 
        " findfont", 
        "systemdict /gcheck known {setglobal} if end {end} if", 
        "/CharStrings get begin", 
        "{begin true}{pop false}ifelse exch", 
        "/Private get dup rcheck", 
        "%ADOEndFontDict", 
        "%ADOEndPrivateDict", 
        "%ADOBeginPrivateDict", 
        "%ADOBeginFontDict", 
        "dup %ld%s", 
        "/FDArray %ld array%s", 
        "%%EndData", 
        "%%%%BeginData: %ld Binary Bytes%s", 
        "(Binary) %ld StartData ", 
        "ct_AddStdCIDMap", 
        "/GlyphDirectory %ld dict def%s", 
        "/CDevProc {pop pop pop pop pop 0 %ld 7 index 2 div %ld} def%s", 
        "?/CIDFontType 0 def", 
        "%d dict begin%s", 
        "/CIDInit /ProcSet findresource begin", 
        "%%Version: ", 
        " %ld)%s", 
        "%%Title: (", 
        "%%BeginResource: CIDFont (", 
        "%%IncludeResource: ProcSet (CIDInit)", 
        "%%DocumentNeededResources: ProcSet (CIDInit)", 
        " %ld GetGlyphDirectory%s", 
        "invalid hint/cntrmask operator", 
        "stem hint overflow", 
        "invalid global subroutine call", 
        "invalid local subroutine call", 
        "invalid hint/cntr mask. Correcting...", 
        "t2cstr", 
        "SHGetFolderPathW", 
        "shfolder.dll", 
        "Alternate", 
        "PScript", 
        "Expert", 
        "Capitals", 
        "Script", 
        "Oblique", 
        "Ligatures", 
        "Endings", 
        "Beginnings", 
        "Extra Extended", 
        "Extra Condensed", 
        "Extra Black", 
        "Tilting", 
        "Slanted", 
        "Shaded", 
        "Semi Extended", 
        "Rounded", 
        "Poster", 
        "Outline", 
        "Ornaments", 
        "Optical Size", 
        "Narrow", 
        "Kursiv", 
        "Inline", 
        "Inclined", 
        "Half Serif", 
        "Flare Serif", 
        "Extended", 
        "Extra Bold", 
        "Display", 
        "Compact", 
        "Condensed", 
        "Compressed", 
        "Jaeger", 
        "Linotype", 
        "Berthold", 
        "Galliard", 
        "Clearface", 
        "Cheltenham", 
        "AmericanTypewriter", 
        "Beesknees", 
        "Benguiat", 
        "BenguiatGothic", 
        "Bookman", 
        "BookmanCE", 
        "Century", 
        "CenturyHandtooled", 
        "Cerigo", 
        "CheltenhamHandtooled", 
        "Cushing", 
        "Esprit", 
        "Fenice", 
        "FranklinGothic", 
        "Garamond", 
        "GaramondHandtooled", 
        "Giovanni", 
        "GoudySans", 
        "Highlander", 
        "Isadora", 
        "Korinna", 
        "Leawood", 
        "LegacySans", 
        "LegacySerif", 
        "LubalinGraph", 
        "Machine", 
        "MendozaRoman", 
        "MonaLisa", 
        "MotterCorpusMM", 
        "NewBaskerville", 
        "Novarese", 
        "OfficinaSans", 
        "OfficinaSerif", 
        "Ozwald", 
        "Quorum", 
        "SerifGothic", 
        "Slimbach", 
        "Souvenir", 
        "StoneInformal", 
        "StoneSans", 
        "StoneSerif", 
        "Tiepolo", 
        "Tiffany", 
        "Usherwood", 
        "Veljovic", 
        "ZapfChancery", 
        "BaskervilleBook", 
        "WalbaumBook", 
        "Caecilia", 
        "Centennial", 
        "DailyNews", 
        "BoldCond", 
        "BoldCondItalic", 
        "BoldItalic", 
        "BookCond", 
        "BookCondItalic", 
        "BookItalic", 
        "LightCond", 
        "LightCondItalic", 
        "LightItalic", 
        "UltraCond", 
        "UltraCondItalic", 
        "UltraItalic", 
        "BlackItalic", 
        "HeavyItalic", 
        "RegularItalic", 
        "Semibol", 
        "SemiBold", 
        "AdobeInvisFont", 
        "AdobeInvis", 
        "Handtooled", 
        "ITC by BT", 
        "ITC by BT ", 
        "ITCbyBT", 
        "ITCAvantGardeGothicCE", 
        "AvantGardeCE", 
        "ultracondensed", 
        "extralight", 
        "ultralight", 
        "highlight", 
        "medium", 
        "semibold", 
        "demibold", 
        "extrabold", 
        "ultrabold", 
        "extrablack", 
        "extblack", 
        "ultrablack", 
        "poster", 
        "extracompressed", 
        "ultracompressed", 
        "extracondensed", 
        "compressed", 
        "semicondensed", 
        "compact", 
        "narrow", 
        "condensed", 
        "semiexpanded", 
        "semiextended", 
        "extraexpanded", 
        "extraextended", 
        "ultraexpanded", 
        "ultraextended", 
        "expanded", 
        "extended", 
        "oblique", 
        " smallcaps", 
        " small caps", 
        "B1.#NAN", 
        "#1.INF", 
        "#-1.INF", 
        "%s-%s-%d", 
        "Couldn't find code points for an atc or bitmap font", 
        "Couldn't find code points for a non-cjk font", 
        "could not get glyph node", 
        "could not find the identity tree", 
        "could not find the glyph tree!", 
        "can't update glyph tree", 
        "can't record glyphs", 
        "(%s) %s ", 
        "%d %s ", 
        "6*?Adobe-Korea1-0", 
        "Adobe-CNS1-0", 
        "Adobe-GB1-1", 
        "Adobe-Japan1-2", 
        "SansSerif", 
        "RoundSansSerif", 
        "Default", 
        "FontName too long", 
        "%s%s%s%s%s%s%s%s%s%s", 
        "%s%s%s%s%s%s%s%s", 
        "can't stream procset", 
        " ?set%s", 
        "%%%%BeginResource: font %.128s%s", 
        "%.128s", 
        "0123456789ABCDEF", 
        "CTGDICacheNewGDICacheProc", 
        "NewGDICache", 
        "CTGDICacheInterface", 
        "CTNewTextFontInstanceCPProcV2", 
        "NewFontInstCPText", 
        "CTNewTextFontInstanceProcV3", 
        "NewFontInstText", 
        "CTNewTextCPProcV2", 
        "NewCPText", 
        "CTNewTextProcV3", 
        "NewText", 
        "CTNewTextInterface", 
        "CTTextGetNthType3GlyphDescV2", 
        "GetNthType3GlyphDescV2", 
        "CTTextGetNthType3GlyphDesc", 
        "GetNthType3GlyphDesc", 
        "CTTextGetNumType3GlyphDescs", 
        "GetNumType3GlyphDescs", 
        "CTTextGetAGMSetupInfo", 
        "GetAGMSetupInfo", 
        "CTTextReleaseGlyphPointers", 
        "ReleaseGlyphPointers", 
        "CTTextGetTextGlyphs", 
        "GetTextGlyphs", 
        "CTTextGetNumGlyphs", 
        "GetNumGlyphs", 
        "CTTextGetRasterWarningInfo", 
        "GetRasterWarningInfo", 
        "CTTextDoPlatformShow", 
        "DoPlatformShow", 
        "CTTextGetOutlines", 
        "GetOutlines", 
        "CTTextHasSyntheticBold", 
        "HasSyntheticBold", 
        "CTTextGetOrientedBBox", 
        "GetOrientedBBox", 
        "CTTextGetQuickBoundingBox", 
        "GetQuickBoundingBox", 
        "CTTextGetBoundingBox", 
        "CTTextGetFlags", 
        "CTTextHasVertGlyphs", 
        "HasVertGlyphs", 
        "CTTextGetWritingDirection", 
        "GetWritingDirection", 
        "CTTextGetDesignVector", 
        "GetDesignVector", 
        "CTTextGetEncoding", 
        "CTTextGetGlyphsV2", 
        "GetGlyphs", 
        "CTTextGetCharMatrix", 
        "GetCharMatrix", 
        "CTTextGetFont", 
        "GetFont", 
        "CTNewTextListEmptyProc", 
        "NewEmptyTextList", 
        "CTNewTextListProc", 
        "NewTextList", 
        "CTNewTextListInterface", 
        "CTTextListGetTextImageV2", 
        "GetTextImage", 
        "CTTextListHasSyntheticBold", 
        "CTTextListGetNthTextProc", 
        "GetNthText", 
        "CTTextListGetNumTextProc", 
        "GetNumText", 
        "CTTextListAddTextProc", 
        "AddText", 
        "CTNewTextWithCTMListEmptyProc", 
        "CTNewTextWithCTMListProcV2", 
        "CTNewTextWithCTMListInterface", 
        "CTTextWithCTMListGetNthTextProc", 
        "CTTextWithCTMListGetNumTextProc", 
        "CTTextWithCTMListAddTextProcV2", 
        "CTBaseReleaseProc", 
        "CTBaseAddRefProc", 
        "CTBaseInterface", 
        "CTFontValuesSetFullNameProc", 
        "FontValuesSetFullName", 
        "CTFontValuesSetStyleNameProc", 
        "FontValuesSetStyleName", 
        "CTFontValuesSetFamilyNameProc", 
        "FontValuesSetFamilyName", 
        "CTFontDictStreamOTForPDFProc", 
        "StreamOTForPDF", 
        "CTFontDictStreamForPDFProc", 
        "StreamForPDF", 
        "CTFontDictGetNthFeatureResultProc", 
        "GetNthFeatureResult", 
        "CTFontDictGetNumFeatureResultsProc", 
        "GetNumFeatureResults", 
        "CTFontDictGetGlyphClassValuesProc", 
        "GetGlyphClassValues", 
        "CTFontDictGetNumAlternatesProc", 
        "GetNumAlternates", 
        "CTFontDictGetNthFeatureProc", 
        "GetNthFeature", 
        "CTFontDictGetNumFeaturesProc", 
        "GetNumFeatures", 
        "CTFontDictHasFeatureProc", 
        "HasFeature", 
        "CTFontDictGetNthLanguageSystemProc", 
        "GetNthLanguageSystem", 
        "CTFontDictGetNumLanguageSystemsProc", 
        "GetNumLanguageSystems", 
        "CTFontDictGetATCGlyphIDProc", 
        "GetATCGlyphID", 
        "CTFontDictGetComponentIndexAndGlyphIDProc", 
        "GetComponentIndexAndGlyphID", 
        "CTFontDictInterface", 
        "CTFontDictCFFGlyphIDToCTGlyphIDProc", 
        "CFFGlyphIDToCTGlyphID", 
        "CTFontDictCTGlyphIDToCFFGlyphIDProc", 
        "CTGlyphIDToCFFGlyphID", 
        "CTFontDictCTGlyphIDIsCFFGlyphIDProc", 
        "CTGlyphIDIsCFFGlyphID", 
        "CTFontDictGetAvailableBitmapSizesProc", 
        "GetAvailableBitmapSizes", 
        "CTFontDictGetNumAvailableBitmapSizesProc", 
        "GetNumAvailableBitmapSizes", 
        "CTFontDictGetNthPathProc", 
        "GetNthPath", 
        "CTFontDictGetNumPathsProc", 
        "GetNumPaths", 
        "CTFontDictGetWinLOGFONTProc", 
        "GetWinLOGFONT", 
        "CTFontDictIsOSFontProc", 
        "IsOSFont", 
        "CTFontDictGetDefaultDesignVectorProc", 
        "GetDefaultDesignVector", 
        "CTFontDictGetDesignAxesLimitsProc", 
        "GetDesignAxesLimits", 
        "CTFontDictGetNthInstalledMMInstanceNameProc", 
        "GetNthInstalledMMInstanceName", 
        "CTFontDictGetInstalledMMInstanceDVsProc", 
        "GetInstalledMMInstanceDVs", 
        "CTFontDictGetNumInstalledMMInstancesProc", 
        "GetNumInstalledMMInstances", 
        "CTFontDictGetNthDesignAxesNameProc", 
        "GetNthDesignAxesName", 
        "CTFontDictGetNumDesignAxesProc", 
        "GetNumDesignAxes", 
        "CTFontDictGetNthATCVVersionStringProc", 
        "GetNthATCVVersionString", 
        "CTFontDictGetNthATCVNameProc", 
        "GetNthATCVName", 
        "CTFontDictGetNthATCVTypeProc", 
        "GetNthATCVType", 
        "CTFontDictGetNumATCVComponentsProc", 
        "GetNumATCVComponents", 
        "CTFontDictGetATCVMinorProc", 
        "GetATCVMinor", 
        "CTFontDictGetATCVMajorProc", 
        "GetATCVMajor", 
        "CTFontDictBuildATCVProc", 
        "BuildATCV", 
        "CTFontDictGetATCCFMAProc", 
        "GetATCCFMA", 
        "CTFontDictGetATCRLBLProc", 
        "GetATCRLBL", 
        "CTFontDictGetNthATCEncodingProc", 
        "GetNthATCEncoding", 
        "CTFontDictGetNthATCMatrixProc", 
        "GetNthATCMatrix", 
        "CTFontDictGetNthATCComponentProc", 
        "GetNthATCComponent", 
        "CTFontDictGetNumATCComponentsProc", 
        "GetNumATCComponents", 
        "CTFontDictGetSyntheticStyleProc", 
        "GetSyntheticStyle", 
        "CTFontDictGetFontDescProc", 
        "GetFontDesc", 
        "CTFontDictGetType3FontInfoProc", 
        "GetType3FontInfo", 
        "CTFontDictGetCSSFontPropertiesProc", 
        "GetCSSFontProperties", 
        "CTFontDictGetStyleProc", 
        "GetStyle", 
        "CTFontDictGetItalicAngleProc", 
        "GetItalicAngle", 
        "CTFontDictGetAngleClassProc", 
        "GetAngleClass", 
        "CTFontDictGetWidthClassProc", 
        "GetWidthClass", 
        "CTFontDictGetWeightClassProc", 
        "GetWeightClass", 
        "CTFontDictCJKHasPropVertMetricsProc", 
        "CJKHasPropVertMetrics", 
        "CTFontDictCJKHasPropHorizMetricsProc", 
        "CJKHasPropHorizMetrics", 
        "CTFontDictHasPropRomanProc", 
        "HasPropRoman", 
        "CTFontDictHasWidthsOnlyProc", 
        "HasWidthsOnly", 
        "CTFontDictGetATCBaselineShiftProc", 
        "GetATCBaselineShift", 
        "CTFontDictGetFontBBoxProc", 
        "GetFontBBox", 
        "CTFontDictGetICFBoxProc", 
        "GetICFBox", 
        "CTFontDictGetIdeoEmBBoxProc", 
        "GetIdeoEmBBox", 
        "CTFontDictGetIdeoUnderlineInfoProc", 
        "GetIdeoUnderlineInfo", 
        "CTFontDictGetUnderlineInfoProc", 
        "GetUnderlineInfo", 
        "CTFontDictGetHorizontalMetricsProc", 
        "GetHorizontalMetrics", 
        "CTFontDictGetUnitsPerEmProc", 
        "GetUnitsPerEm", 
        "CTFontDictGetCharSetVariantProc", 
        "GetCharSetVariant", 
        "CTFontDictGetCMapFromFONDNameProc", 
        "GetCMapFromFONDName", 
        "CTFontDictGetNthAvailablecmapProc", 
        "GetNthAvailablecmap", 
        "CTFontDictGetNumAvailablecmapsProc", 
        "GetNumAvailablecmaps", 
        "CTFontDictGetNthPlatformT1EncGlyphNameProc", 
        "GetNthPlatformT1EncGlyphName", 
        "CTFontDictGetNthDefaultT1EncGlyphNameProc", 
        "GetNthDefaultT1EncGlyphName", 
        "CTFontDictUsesStandardEncodingProc", 
        "UsesStandardEncoding", 
        "CTFontDictGetNthGlyphNameProc", 
        "GetNthGlyphName", 
        "CTFontDictGetNumGlyphNamesProc", 
        "GetNumGlyphNames", 
        "CTFontDictGetNotdefGlyphIDProc", 
        "GetNotdefGlyphID", 
        "CTFontDictGetNumGlyphsProc", 
        "CTFontDictGetROSProc", 
        "GetROS", 
        "CTFontDictGetNthCodePageProc", 
        "GetNthCodePage", 
        "CTFontDictGetNumCodePagesProc", 
        "GetNumCodePages", 
        "CTFontDictGetWritingScriptProc", 
        "GetWritingScript", 
        "CTFontDictGetFontIDProc", 
        "GetFontID", 
        "CTFontDictGetVersionStringProc", 
        "GetVersionString", 
        "CTFontDictGetVersionProc", 
        "GetVersion", 
        "CTFontDictGetTrademarkStringProc", 
        "GetTrademarkString", 
        "CTFontDictGetCopyrightStringProc", 
        "GetCopyrightString", 
        "CTFontDictGetEmbeddingBitfieldProc", 
        "GetEmbeddingBitfield", 
        "CTFontDictGetPermissionsProc", 
        "GetPermissions", 
        "CTFontDictGetSubstituteDataProc", 
        "GetSubstituteData", 
        "CTFontDictWasEmbeddedProc", 
        "CTFontDictHasOutlinesProc", 
        "HasOutlines", 
        "CTFontDictIsSINGProc", 
        "IsSING", 
        "CTFontDictIsCFFProc", 
        "CTFontDictGetFontTypeProc", 
        "GetFontType", 
        "CTFontDictGetFontTechnologyProc", 
        "GetFontTechnology", 
        "CTFontDictGetItalicTogglePSNameProc", 
        "GetItalicTogglePSName", 
        "CTFontDictGetBoldTogglePSNameProc", 
        "GetBoldTogglePSName", 
        "CTFontDictGetPlatformMenuNameProc", 
        "GetPlatformMenuName", 
        "CTFontDictGetWinMenuNameProc", 
        "GetWinMenuName", 
        "CTFontDictGetFullNameProc", 
        "GetFullName", 
        "CTFontDictGetStyleNameProc", 
        "GetStyleName", 
        "CTFontDictGetFamilyNameProc", 
        "GetFamilyName", 
        "CTFontDictGetFontNameProc", 
        "GetFontName", 
        "CTFontDictUndefineKeyProc", 
        "UndefineKey", 
        "CTFontDictIsKeyDefinedProc", 
        "IsKeyDefined", 
        "CTFontDictGetValueProc", 
        "GetValue", 
        "CTFontDictSetValueProc", 
        "SetValue", 
        "CTFontDictGetFontStatusProc", 
        "GetFontStatus", 
        "CTFontDictGetShadowFontProc", 
        "GetShadowFont", 
        "CTFontDictStreamFontProc", 
        "StreamFont", 
        "CTFontDictGetNthValidGlyphIDRangeProc", 
        "GetNthValidGlyphIDRange", 
        "CTFontDictGetNumValidGlyphIDRangesProc", 
        "GetNumValidGlyphIDRanges", 
        "CTFontDictNewSubstituteFontProc", 
        "NewSubstituteFont", 
        "CTFontDictNewCopiedFontProc", 
        "NewCopiedFont", 
        "CTFontDictNewSVGFontProc", 
        "NewSVGFont", 
        "CTFontDictNewType3FontProc", 
        "NewType3Font", 
        "CTFontDictNewCompositeFontProc", 
        "NewCompositeFont", 
        "CTFontDictNewSyntheticFontProc", 
        "NewSyntheticFont", 
        "CTFontDictNewFauxFontProc", 
        "NewFauxFont", 
        "CTFontDictNewFontProc", 
        "NewFont", 
        "CTFontValuesSetCSSFontPropertiesProc", 
        "FontValuesSetCSSFontProperties", 
        "CTFontValuesSetWinLOGFONTProc", 
        "FontValuesSetWinLOGFONT", 
        "CTFontValuesSetSubstituteDataProc", 
        "FontValuesSetSubstituteData", 
        "CTFontValuesSetWasEmbeddedProc", 
        "FontValuesSetWasEmbedded", 
        "CTFontValuesSetFontDescProc", 
        "FontValuesSetFontDesc", 
        "CTFontValuesSetWritingScriptProc", 
        "FontValuesSetWritingScript", 
        "CTFontValuesSetFontNameProc", 
        "FontValuesSetFontName", 
        "CTFontValuesNewProc", 
        "FontValuesNew", 
        "CTComponentFontsAddProc", 
        "ComponentFontsAdd", 
        "CTComponentFontsNewProc", 
        "ComponentFontsNew", 
        "CTFallbackFontSetFindFontProc", 
        "FallbackFontSetFindFont", 
        "CTFallbackFontSetGetNextFontPartitionProc", 
        "FallbackFontSetGetNextFontPartition", 
        "CTFallbackFontSetNewCSSProc", 
        "FallbackFontSetNewCSS", 
        "CTFallbackFontSetGetNextFontPartition_Proc", 
        "FallbackFontSetGetNextFontPartition_", 
        "CTFallbackFontSetNewCSS_Proc", 
        "FallbackFontSetNewCSS_", 
        "CSSFontDescriptionsGetNthFontDescriptionProc", 
        "CSSFontDescriptionsGetNthFontDescription", 
        "CTCSSFontDescriptionsGetNumFontDescriptionsProc", 
        "CSSFontDescriptionsGetNumFontDescriptions", 
        "CTCSSFontDescriptionsAddProc", 
        "CSSFontDescriptionsAdd", 
        "CTCSSFontDescriptionsNewProc", 
        "CSSFontDescriptionsNew", 
        "CTCSSFontDescriptionAddFontProc", 
        "CSSFontDescriptionAddFont", 
        "CTCSSFontDescriptionAddSourceLocalProc", 
        "CSSFontDescriptionAddSourceLocal", 
        "CTCSSFontDescriptionSetHasSourceURLProc", 
        "CSSFontDescriptionSetHasSourceURL", 
        "CTCSSFontDescriptionAddProc", 
        "CSSFontDescriptionAdd", 
        "CTCSSFontDescriptionNewProc", 
        "CSSFontDescriptionNew", 
        "CTCSSFontPropertiesGetNthFontStretchValueProc", 
        "CSSFontPropertiesGetNthFontStretchValue", 
        "CTCSSFontPropertiesGetNumFontStretchValuesProc", 
        "CSSFontPropertiesGetNumFontStretchValues", 
        "CTCSSFontPropertiesGetNthFontWeightNumberProc", 
        "CSSFontPropertiesGetNthFontWeightNumber", 
        "CTCSSFontPropertiesGetNumFontWeightNumbersProc", 
        "CSSFontPropertiesGetNumFontWeightNumbers", 
        "CTCSSFontPropertiesGetNthFontVariantProc", 
        "CSSFontPropertiesGetNthFontVariant", 
        "CTCSSFontPropertiesGetNumFontVariantsProc", 
        "CSSFontPropertiesGetNumFontVariants", 
        "CTCSSFontPropertiesGetNthFontStyleProc", 
        "CSSFontPropertiesGetNthFontStyle", 
        "CTCSSFontPropertiesGetNumFontStylesProc", 
        "CSSFontPropertiesGetNumFontStyles", 
        "CTCSSFontPropertiesGetNthFontFamilyValueProc", 
        "CSSFontPropertiesGetNthFontFamilyValue", 
        "CTCSSFontPropertiesGetNumFontFamilyValuesProc", 
        "CSSFontPropertiesGetNumFontFamilyValues", 
        "CTCSSFontPropertiesAddFontSizeInPointsProc", 
        "CSSFontPropertiesAddFontSizeInPoints", 
        "CTCSSFontPropertiesAddFontSizeProc", 
        "CSSFontPropertiesAddFontSize", 
        "CTCSSFontPropertiesAddFontStretchProc", 
        "CSSFontPropertiesAddFontStretch", 
        "CTCSSFontPropertiesAddFontWeightNumberProc", 
        "CSSFontPropertiesAddFontWeightNumber", 
        "CTCSSFontPropertiesAddFontWeightProc", 
        "CSSFontPropertiesAddFontWeight", 
        "CTCSSFontPropertiesAddFontVariantProc", 
        "CSSFontPropertiesAddFontVariant", 
        "CTCSSFontPropertiesAddFontStyleProc", 
        "CSSFontPropertiesAddFontStyle", 
        "CTCSSFontPropertiesAddFontFamilyProc", 
        "CSSFontPropertiesAddFontFamily", 
        "CTCSSFontPropertiesAddFontFamilyNameProc", 
        "CSSFontPropertiesAddFontFamilyName", 
        "CTCSSFontPropertiesNewProc", 
        "CSSFontPropertiesNew", 
        "CTCSSPreferencesAddLastDitchFontProc", 
        "CSSPreferencesAddLastDitchFont", 
        "CTCSSPreferencesAddGenericFontFamilyProc", 
        "CSSPreferencesAddGenericFontFamily", 
        "CTCSSPreferencesNewProc", 
        "CSSPreferencesNew", 
        "CTSVGFontInfoAddKernProc", 
        "SVGFontInfoAddKern", 
        "CTSVGFontInfoAddGlyphProc", 
        "SVGFontInfoAddGlyph", 
        "CTSVGFontInfoSetUnitsPerEmProc", 
        "SVGFontInfoSetUnitsPerEm", 
        "CTSVGFontInfoNewProc", 
        "SVGFontInfoNew", 
        "CTType3FontInfoGetNthGlyphInfo", 
        "Type3FontInfoGetNthGlyphInfo", 
        "CTType3FontInfoGetFontMatrixProc", 
        "Type3FontInfoGetFontMatrix", 
        "CTType3FontInfoAddGlyphProc", 
        "Type3FontInfoAddGlyph", 
        "CTType3FontInfoSetFontBBoxProc", 
        "Type3FontInfoSetFontBBox", 
        "CTType3FontInfoSetFontMatrixProc", 
        "Type3FontInfoSetFontMatrix", 
        "CTType3FontInfoNewProc", 
        "Type3FontInfoNew", 
        "CTType3FontInfoNewBBoxMatrixProc", 
        "Type3FontInfoNewBBoxMatrix", 
        "CTCMapGetROSProc", 
        "CTCMapGetNameProc", 
        "GetName", 
        "CTCMapGetWritingDirectionProc", 
        "CTCMapStreamCMapProc", 
        "StreamCMap", 
        "CTCMapNewCMapWithParentProc", 
        "NewCMapWithParent", 
        "CTCMapNewCMapProc", 
        "NewCMap", 
        "CTCMapInterface", 
        "CTEncodingResolveGlyphNamesWithPostTableProc", 
        "ResolveGlyphNamesWithPostTable", 
        "CTEncodingGetCharacterBoundariesProc", 
        "GetCharacterBoundaries", 
        "CTEncodingGetCodePageProc", 
        "GetCodePage", 
        "CTEncodingUseCMapWithTrueTypeProc", 
        "UseCMapWithTrueType", 
        "CTEncodingGetCMapProc", 
        "GetCMap", 
        "CTEncodingGetSFNTEncodingProc", 
        "GetSFNTEncoding", 
        "CTEncodingUseGlyphNamesWithTrueTypeProc", 
        "UseGlyphNamesWithTrueType", 
        "CTEncodingGetNthNameProc", 
        "GetNthName", 
        "CTEncodingGetWhichPreDefinedProc", 
        "GetWhichPreDefined", 
        "CTEncodingNewEncodingInstanceProc", 
        "NewEncodingInstance", 
        "CTEncodingNewFromcmapProc", 
        "NewFromcmap", 
        "CTEncodingNewFromCodePageProc", 
        "NewFromCodePage", 
        "CTEncodingNewFromGlyphNamesProc", 
        "NewFromGlyphNames", 
        "CTEncodingNewFromCTCMapProc", 
        "NewFromCTCMap", 
        "CTEncodingNewFromPreDefEncodingProc", 
        "NewFromPreDefEncoding", 
        "CTEncodingInterface", 
        "CTNewPSEmitterNewPSEmitterProc", 
        "NewPSEmitter", 
        "CTNewPSEmitterInterface", 
        "CTPSEmitterEmitPSProcV2", 
        "EmitPS", 
        "CTPSEmitterDoCharPathProc", 
        "DoCharPath", 
        "CTPSEmitterPageTrailerProc", 
        "PageTrailer", 
        "CTPSEmitterPageSetupProc", 
        "PageSetup", 
        "CTPSEmitterDocTrailerProc", 
        "DocTrailer", 
        "CTPSEmitterDocSetupProc", 
        "DocSetup", 
        "CTPSEmitterGetPDCProc", 
        "GetPDC", 
        "CTPSEmitterDownloadPSDictsProc", 
        "DownloadPSDicts", 
        "CTFontSetSyncProc", 
        "CTFontSetGetNthAvailableCMapProc", 
        "GetNthAvailableCMap", 
        "CTFontSetGetNumAvailableCMapsProc", 
        "GetNumAvailableCMaps", 
        "CTFontSetFindCMapFromFontNameProc", 
        "FindCMapFromFontName", 
        "CTFontSetFindScriptProc", 
        "FindScript", 
        "CTFontSetFindCMapProc", 
        "FindCMap", 
        "CTFontSetFindNamesProc", 
        "FindNames", 
        "CTFontSetFindPSNameUniProc", 
        "FindPSNameUni", 
        "CTFontSetFindPSNamePlatProc", 
        "FindPSNamePlat", 
        "CTFontSetFindFontByIDProc", 
        "FindFontByID", 
        "CTFontSetFindFontProc", 
        "FindFont", 
        "CTFontSetFindFontSimpleProc", 
        "FindFontSimple", 
        "CTFontSetRemoveFontProc", 
        "RemoveFont", 
        "CTFontSetAddCMapProc", 
        "AddCMap", 
        "CTFontSetAddFontProc", 
        "AddFont", 
        "CTFontSetAddDirectoriesProc", 
        "AddDirectories", 
        "CTFontSetAddSystemProc", 
        "AddSystemFontSet", 
        "CTFontSetHasSystemFontSetProc", 
        "HasSystemFontSet", 
        "CTFontSetNewProcLink", 
        "NewProcLink", 
        "CTFontSetNewProc", 
        "NewProc", 
        "CTFontSetInterface", 
        "CTFamilyGetNthFontProc", 
        "GetNthFont", 
        "CTFamilyGetNumFontsProc", 
        "GetNumFonts", 
        "CTFamilyInterface", 
        "CTFamilyListGetNthFamilyProc", 
        "GetNthFamily", 
        "CTFamilyListFindFamilyIndexProc", 
        "FindFamilyIndex", 
        "CTFamilyListGetNumFamsProc", 
        "GetNumFamilies", 
        "CTFamilyListSameBucketProc", 
        "SameBucket", 
        "CTFamilyListNewListProc", 
        "NewList", 
        "CTFamilyListInterface", 
        "CTPSFontGeneratorGetRasterWarningInfoProc", 
        "CTPSFontGeneratorClearIncrGlyphListProc", 
        "ClearIncrGlyphList", 
        "CTPSFontGeneratorDownloadIncrProc", 
        "DownloadIncr", 
        "CTPSFontGeneratorStreamProcSetProc", 
        "StreamProcSet", 
        "CTPSFontGeneratorNewPSFontGeneratorProcV2", 
        "NewPSFontGenerator", 
        "CTPSFontGeneratorInterface", 
        "CTFontInstanceGetRasterWarningInfoProc", 
        "CTFontInstanceApplyFeaturesProcV2", 
        "ApplyFeatures", 
        "CTFontInstanceGetBaselineDeltasProc", 
        "GetBaselineDeltas", 
        "CTFontInstanceGetBBoxProc", 
        "GetBBox", 
        "CTFontInstanceGetWidthsProc", 
        "GetWidths", 
        "CTFontInstanceGetWidthProc", 
        "GetWidth", 
        "CTFontInstanceGetGlyphIDsProcV2", 
        "GetGlyphIDs", 
        "CTFontInstanceGetNumGlyphIDsProcV2", 
        "GetNumGlyphIDs", 
        "CTFontInstanceGetGlyphIDProcV2", 
        "GetGlyphID", 
        "CTFontInstanceGetDesignVectorProc", 
        "CTFontInstanceGetEncodingProc", 
        "CTFontInstanceGetWritingDirectionProc", 
        "CTFontInstanceGetMatrixProc", 
        "CTFontInstanceGetFontProc", 
        "CTFontInstanceNewFontInstanceProcV3", 
        "NewFontInstance", 
        "CTFontInstanceInterface", 
        "CTTranslatorTranslateGlyphIDProc", 
        "TranslateGlyphID", 
        "CTTranslatorTranslateEncodingProc", 
        "TranslateEncoding", 
        "CTTranslatorGetFontProc", 
        "CTTranslatorGetEncodingProc", 
        "CTTranslatorNewTranslatorProc", 
        "NewTranslator", 
        "CTTranslatorInterface", 
        "CTUniSupportConvertUTFProc", 
        "ConvertUTF", 
        "CTUniSupportGetSupportedVersionProc", 
        "GetSupportedVersion", 
        "CTUniSupportInterface", 
        "CTUniPropertiesGetEastAsianWidthPropertyProc", 
        "GetEastAsianWidthProperty", 
        "CTUniPropertiesGetTranscodingHintPropertyProc", 
        "GetTranscodingHintProperty", 
        "CTUniPropertiesGetDisplayablePropertyProc", 
        "GetDisplayableProperty", 
        "CTUniPropertiesGetFoldcasePropertyProc", 
        "GetFoldcaseProperty", 
        "CTUniPropertiesGetTitlecasePropertyProc", 
        "GetTitlecaseProperty", 
        "CTUniPropertiesGetLowercasePropertyProc", 
        "GetLowercaseProperty", 
        "CTUniPropertiesGetUppercasePropertyProc", 
        "GetUppercaseProperty", 
        "CTUniPropertiesGetMirrorPropertyProc", 
        "GetMirrorProperty", 
        "CTUniPropertiesGetIsMirroredPropertyProc", 
        "GetIsMirroredProperty", 
        "CTUniPropertiesGetCombiningClassPropertyProc", 
        "GetCombiningClassProperty", 
        "CTUniPropertiesGetBidirectionalPropertyProc", 
        "GetBidirectionalProperty", 
        "CTUniPropertiesGetGeneralPropertyProc", 
        "GetGeneralProperty", 
        "CTUniPropertiesInterface", 
        "CTGlyphAccessGetNthAccessPathProc", 
        "GetNthAccessPath", 
        "CTGlyphAccessGetNumAccessPathsProc", 
        "GetNumAccessPaths", 
        "CTGlyphAccessGetLanguageSystemProc", 
        "GetLanguageSystem", 
        "CTGlyphAccessGetFeaturesProc", 
        "GetFeatures", 
        "CTGlyphAccessGetTranslatorProc", 
        "GetTranslator", 
        "CTGlyphAccessGetGlyphIDProc", 
        "CTGlyphAccessNewGlyphAccessProc", 
        "NewGlyphAccess", 
        "CTGlyphAccessInterface", 
        "CTRasterWarningGetGlyphIDProc", 
        "CTRasterWarningGetPSFontGeneratorProc", 
        "GetPSFontGenerator", 
        "CTRasterWarningGetInstanceProc", 
        "CTRasterWarningGetTextProc", 
        "GetText", 
        "CTRasterWarningFontWideWarningProc", 
        "FontWideWarning", 
        "CTRasterWarningRecoverableWarningProc", 
        "RecoverableWarning", 
        "CTRasterWarningInterface", 
        "CTFeatureHarvestGetNthHarvestedGlyphProc", 
        "GetNthHarvestedGlyph", 
        "CTFeatureHarvestGetNumHarvestedGlyphsProc", 
        "GetNumHarvestedGlyphs", 
        "CTFeatureHarvestNewFeatureHarvestProc", 
        "NewFeatureHarvest", 
        "CTFeatureHarvestInterface", 
        "CTCustomKernStreamKernDataProc", 
        "StreamKernData", 
        "CTCustomKernDeleteGlyphInfoProc", 
        "DeleteGlyphInfo", 
        "CTCustomKernAddGlyphInfoProc", 
        "AddGlyphInfo", 
        "CTCustomKernGetGlyphInfoProc", 
        "GetGlyphInfo", 
        "CTCustomKernDeleteKernPairProc", 
        "DeleteKernPair", 
        "CTCustomKernAddKernPairProc", 
        "AddKernPair", 
        "CTCustomKernGetNthKernPairProc", 
        "GetNthKernPair", 
        "CTCustomKernGetNumKernPairsProc", 
        "GetNumKernPairs", 
        "CTCustomKernGetUnitsPerEmProc", 
        "CTCustomKernNewFromStreamProc", 
        "NewFromStream", 
        "CTCustomKernNewCustomKernProc", 
        "NewCustomKern", 
        "CTCustomKernInterface", 
        "CTPrintDeviceControllerImpl", 
        "CTTextImpl", 
        "CTTextInterface", 
        "CTTextListImpl", 
        "CTTextListInterface", 
        "CTTextWithCTMListImpl", 
        "CTTextWithCTMListInterface", 
        "CTPSEmitterImpl", 
        "CTPSEmitterInterface", 
        "CTDDRParamsImpl", 
        "CTDDRParamsInterface", 
        "Disabled CMap", 
        "Object not a DDRParams object", 
        "CTNewDDRParamsInterface", 
        "NewDDRParams", 
        "CTNewDDRParamsNewDDRParamsProc", 
        "GetColorFilter", 
        "CTDDRParamsGetColorFilterProc", 
        "GetGamma", 
        "CTDDRParamsGetGammaProc", 
        "Invalid CMap", 
        "CTFeatureHarvest index out of range", 
        "CTFeatureHarvest: font param mustn't be ATC", 
        "CTFeatureHarvest: NULL font", 
        "name must be ascii", 
        "component font cannot be a composite font", 
        "font required when specifying components", 
        "invalid list", 
        "invalid attempt to set the fontname to NULL", 
        "invalid attempt to set the writingscript to unknown", 
        "invalid attempt to set the original font name to NULL", 
        "attempt to set the substitute font style to invalid", 
        "invalid attempt to set the CMap name to NULL", 
        "invalid CCTCSSFontProperties", 
        "font metrics are required", 
        "font desc is required", 
        "cannot construct a font with a NULL fontset", 
        "baseFont is required", 
        "CMap and components required when creating a composite font", 
        "CCTType3FontInfo::AddGlyph not called", 
        "CCTType3FontInfo::SetFontBBox not called", 
        "CCTType3FontInfo::SetFontMatrix not called", 
        "CCTSVGFontInfo::SetUnitsPerEm not called", 
        "GetNthFontFamilyValue index out of range", 
        "GetNthFontStyle index out of range", 
        "GetNthFontVariant index out of range", 
        "GetNthFontWeightClass index out of range", 
        "GetNthFontWidthClass index out of range", 
        "cannot construct a CSS font with a NULL fontset", 
        "cannot construct a CSS font with an invalid CCTCSSFontProperties", 
        "can't stream font", 
        "Not a SING glyphlet", 
        "Index outside valid range", 
        "Invalid index", 
        "fewer than 0 cmaps??", 
        "[GetType3FontInfo] Not a Type 3 font", 
        "index invalid", 
        "Index invalid", 
        "cfma size is < 0?", 
        "No ATCV table", 
        "Not an ATC font", 
        "invalid index", 
        "[CTGlyphIDIsCFFGlyphID] Not a CFF font", 
        "[CTGlyphIDToCFFGlyphID] Not a CFF font", 
        "[CFFGlyphIDToCTGlyphID] Not a CFF font", 
        "Not an ATC", 
        "GetNumFeatureResults: invalid feature", 
        "GetNthFeatureResult: invalid feature", 
        "font not embeddable in pdf", 
        "invalid subset", 
        "can't embed font", 
        "iterator index out of range", 
        "CTFontDictGetSubstituteFontStyleProc", 
        "GetSubstituteFontStyle", 
        "CTFontDictGetOrigFontNameForSubstFontProc", 
        "GetOrigFontNameForSubstFont", 
        "CTFontDictIsSubstFontWithOrigFontNameProc", 
        "IsSubstFontWithOrigFontName", 
        "CTFontValuesSetSubstituteFontStyleProc", 
        "FontValuesSetSubstituteFontStyle", 
        "CTFontValuesSetOrigFontNameForSubstFontProc", 
        "FontValuesSetOrigFontNameForSubstFont", 
        "CTFontValuesSetSubstituteFontWithOrigFontNameProc", 
        "FontValuesSetSubstituteFontWithOrigFontName", 
        "NULL font instance", 
        "GlyphBuffer not large enough", 
        "CTFontInstanceGetGlyphIDsProc", 
        "CTFontInstanceGetNumGlyphIDsProc", 
        "CTFontInstanceGetGlyphIDProc", 
        "CTFontInstanceApplyFeaturesProc", 
        "CTFontInstanceNewFontInstanceProc", 
        "CTFontInstanceNewFontInstanceProcV2", 
        "HasSystemFontSet: fontset is NULL", 
        "cannot add directories to a NULL fontset", 
        "cannot add fonts to a NULL fontset", 
        "cannot remove fonts from a NULL fontset", 
        "cannot find a font in a NULL fontset", 
        "cannot find a font name in a NULL fontset", 
        "cannot find a CMap in a NULL fontset", 
        "Bad CMap", 
        "cannot do Sync with a NULL fontset", 
        "unknown CTFontEnumType", 
        "cannot create a family list from a NULL fontset", 
        "CMap is disabled", 
        "cannot add CMaps to a NULL fontset", 
        "FontSet already linked.  Can't add SystemFontSet to this FS", 
        "AddSystemFontSet: fontset is 0", 
        "CTGlyphAccess index out of range", 
        "CTGlyphAccess: must specify a font-dependent translator", 
        "NULL translator", 
        "BIBPersistDataStoreInterface", 
        "BIBNewPersistDataStoreProc", 
        "Object not a PSEmitter object", 
        "CTPSEmitterEmitPSProc", 
        "postscript cannot be generated for this font", 
        "CTPSFontGeneratorNewPSFontGeneratorProc", 
        "couldn't construct shared bezier path interface", 
        "font required", 
        "not a Type 3 font", 
        "CTNewTextFontInstanceProc", 
        "CTNewTextProc", 
        "CTNewTextFontInstanceCPProc", 
        "CTNewTextFontInstanceProcV2", 
        "CTNewTextCPProc", 
        "CTNewTextProcV2", 
        "CTTextGetGlyphs", 
        "CTTextGetTextImage", 
        "CTTextListGetTextImage", 
        "CTNewTextWithCTMListProc", 
        "CTTextWithCTMListAddTextProc", 
        "Text is not attached to a container", 
        "U_IDNA_LABEL_TOO_LONG_ERROR", 
        "U_IDNA_VERIFICATION_ERROR", 
        "U_IDNA_ACE_PREFIX_ERROR", 
        "U_IDNA_STD3_ASCII_RULES_ERROR", 
        "U_IDNA_CHECK_BIDI_ERROR", 
        "U_IDNA_UNASSIGNED_CODEPOINT_FOUND_ERROR", 
        "U_IDNA_PROHIBITED_CODEPOINT_FOUND_ERROR", 
        "U_IDNA_ERROR_START", 
        "U_REGEX_SET_CONTAINS_STRING", 
        "U_REGEX_LOOK_BEHIND_LIMIT", 
        "U_REGEX_INVALID_FLAG", 
        "U_REGEX_INVALID_BACK_REF", 
        "U_REGEX_MAX_LT_MIN", 
        "U_REGEX_BAD_INTERVAL", 
        "U_REGEX_NUMBER_TOO_BIG", 
        "U_REGEX_MISMATCHED_PAREN", 
        "U_REGEX_UNIMPLEMENTED", 
        "U_REGEX_PROPERTY_SYNTAX", 
        "U_REGEX_BAD_ESCAPE_SEQUENCE", 
        "U_REGEX_INVALID_STATE", 
        "U_REGEX_RULE_SYNTAX", 
        "U_REGEX_INTERNAL_ERROR", 
        "U_REGEX_ERROR_START", 
        "U_BRK_RULE_EMPTY_SET", 
        "U_BRK_INIT_ERROR", 
        "U_BRK_UNDEFINED_VARIABLE", 
        "U_BRK_NEW_LINE_IN_QUOTED_STRING", 
        "U_BRK_MISMATCHED_PAREN", 
        "U_BRK_VARIABLE_REDFINITION", 
        "U_BRK_ASSIGN_ERROR", 
        "U_BRK_UNCLOSED_SET", 
        "U_BRK_RULE_SYNTAX", 
        "U_BRK_SEMICOLON_EXPECTED", 
        "U_BRK_HEX_DIGITS_EXPECTED", 
        "U_BRK_INTERNAL_ERROR", 
        "U_BRK_ERROR_START", 
        "U_UNSUPPORTED_ATTRIBUTE", 
        "U_UNSUPPORTED_PROPERTY", 
        "U_UNMATCHED_BRACES", 
        "U_ILLEGAL_PAD_POSITION", 
        "U_PATTERN_SYNTAX_ERROR", 
        "U_MULTIPLE_PAD_SPECIFIERS", 
        "U_MULTIPLE_PERMILL_SYMBOLS", 
        "U_MULTIPLE_PERCENT_SYMBOLS", 
        "U_MALFORMED_EXPONENTIAL_PATTERN", 
        "U_MULTIPLE_EXPONENTIAL_SYMBOLS", 
        "U_MULTIPLE_DECIMAL_SEPARATORS", 
        "U_UNEXPECTED_TOKEN", 
        "U_INVARIANT_CONVERSION_ERROR", 
        "U_ENUM_OUT_OF_SYNC_ERROR", 
        "U_TOO_MANY_ALIASES_ERROR", 
        "U_STATE_TOO_OLD_ERROR", 
        "U_PRIMARY_TOO_LONG_ERROR", 
        "U_CE_NOT_FOUND_ERROR", 
        "U_NO_SPACE_AVAILABLE", 
        "U_UNSUPPORTED_ESCAPE_SEQUENCE", 
        "U_ILLEGAL_ESCAPE_SEQUENCE", 
        "U_RESOURCE_TYPE_MISMATCH", 
        "U_UNSUPPORTED_ERROR", 
        "U_BUFFER_OVERFLOW_ERROR", 
        "U_INVALID_TABLE_FILE", 
        "U_INVALID_TABLE_FORMAT", 
        "U_ILLEGAL_CHAR_FOUND", 
        "U_TRUNCATED_CHAR_FOUND", 
        "U_INVALID_CHAR_FOUND", 
        "U_PARSE_ERROR", 
        "U_INDEX_OUTOFBOUNDS_ERROR", 
        "U_MEMORY_ALLOCATION_ERROR", 
        "U_MESSAGE_PARSE_ERROR", 
        "U_INTERNAL_PROGRAM_ERROR", 
        "U_FILE_ACCESS_ERROR", 
        "U_INVALID_FORMAT_ERROR", 
        "U_MISSING_RESOURCE_ERROR", 
        "U_ILLEGAL_ARGUMENT_ERROR", 
        "U_ZERO_ERROR", 
        "U_INVALID_FUNCTION", 
        "U_INVALID_ID", 
        "U_INTERNAL_TRANSLITERATOR_ERROR", 
        "U_ILLEGAL_CHARACTER", 
        "U_VARIABLE_RANGE_OVERLAP", 
        "U_VARIABLE_RANGE_EXHAUSTED", 
        "U_ILLEGAL_CHAR_IN_SEGMENT", 
        "U_UNCLOSED_SEGMENT", 
        "U_MALFORMED_PRAGMA", 
        "U_INVALID_PROPERTY_PATTERN", 
        "U_INVALID_RBT_SYNTAX", 
        "U_MULTIPLE_COMPOUND_FILTERS", 
        "U_MISPLACED_COMPOUND_FILTER", 
        "U_RULE_MASK_ERROR", 
        "U_UNTERMINATED_QUOTE", 
        "U_UNQUOTED_SPECIAL", 
        "U_UNDEFINED_VARIABLE", 
        "U_UNDEFINED_SEGMENT_REFERENCE", 
        "U_TRAILING_BACKSLASH", 
        "U_MULTIPLE_POST_CONTEXTS", 
        "U_MULTIPLE_CURSORS", 
        "U_MULTIPLE_ANTE_CONTEXTS", 
        "U_MISSING_SEGMENT_CLOSE", 
        "U_MISSING_OPERATOR", 
        "U_MISPLACED_QUANTIFIER", 
        "U_MISPLACED_CURSOR_OFFSET", 
        "U_MISPLACED_ANCHOR_START", 
        "U_MISMATCHED_SEGMENT_DELIMITERS", 
        "U_MALFORMED_VARIABLE_REFERENCE", 
        "U_MALFORMED_VARIABLE_DEFINITION", 
        "U_MALFORMED_UNICODE_ESCAPE", 
        "U_MALFORMED_SYMBOL_REFERENCE", 
        "U_MALFORMED_SET", 
        "U_MALFORMED_RULE", 
        "U_BAD_VARIABLE_DEFINITION", 
        "U_DIFFERENT_UCA_VERSION", 
        "U_AMBIGUOUS_ALIAS_WARNING", 
        "U_SORT_KEY_TOO_SHORT_WARNING", 
        "U_STRING_NOT_TERMINATED_WARNING", 
        "U_STATE_OLD_WARNING", 
        "U_SAFECLONE_ALLOCATED_WARNING", 
        "U_USING_DEFAULT_WARNING", 
        "U_USING_FALLBACK_WARNING", 
        "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\", 
        "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Time Zones\\", 
        "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\GMT", 
        "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Time Zones", 
        "+Sydney", 
        "+Bangkok", 
        "+Saudi Arabia", 
        "-Beijing", 
        "-Prague Bratislava", 
        "-Warsaw", 
        "Pacific/Tongatapu", 
        "New Zealand", 
        "Pacific/Auckland", 
        "Pacific/Fiji", 
        "Central Pacific", 
        "Asia/Magadan", 
        "AUS Eastern", 
        "Australia/Sydney", 
        "Tasmania", 
        "Australia/Hobart", 
        "Vladivostok", 
        "Asia/Vladivostok", 
        "E. Australia", 
        "Australia/Brisbane", 
        "West Pacific", 
        "Pacific/Guam", 
        "Cen. Australia", 
        "Australia/Adelaide", 
        "AUS Central", 
        "Australia/Darwin", 
        "Yakutsk", 
        "Asia/Yakutsk", 
        "Asia/Seoul", 
        "Asia/Tokyo", 
        "North Asia East", 
        "Asia/Irkutsk", 
        "Asia/Hong_Kong", 
        "Singapore", 
        "Asia/Singapore", 
        "Taipei", 
        "Asia/Taipei", 
        "W. Australia", 
        "Australia/Perth", 
        "North Asia", 
        "Asia/Krasnoyarsk", 
        "SE Asia", 
        "Asia/Bangkok", 
        "Myanmar", 
        "Asia/Rangoon", 
        "N. Central Asia", 
        "Asia/Novosibirsk", 
        "Central Asia", 
        "Asia/Dhaka", 
        "Sri Lanka", 
        "Asia/Colombo", 
        "Asia/Katmandu", 
        "Asia/Calcutta", 
        "Ekaterinburg", 
        "Asia/Yekaterinburg", 
        "West Asia", 
        "Asia/Karachi", 
        "Afghanistan", 
        "Asia/Kabul", 
        "Caucasus", 
        "Asia/Tbilisi", 
        "Arabian", 
        "Asia/Muscat", 
        "Asia/Tehran", 
        "Asia/Baghdad", 
        "Russian", 
        "Europe/Moscow", 
        "Asia/Riyadh", 
        "E. Africa", 
        "Africa/Nairobi", 
        "E. Europe", 
        "Europe/Bucharest", 
        "Africa/Cairo", 
        "Europe/Helsinki", 
        "Europe/Istanbul", 
        "Israel", 
        "Asia/Jerusalem", 
        "South Africa", 
        "Africa/Johannesburg", 
        "Central Europe", 
        "Europe/Belgrade", 
        "Europe/Sarajevo", 
        "Romance", 
        "Europe/Paris", 
        "W. Europe", 
        "Europe/Berlin", 
        "W. Central Africa", 
        "Africa/Lagos", 
        "Europe/London", 
        "Greenwich", 
        "Africa/Casablanca", 
        "Azores", 
        "Atlantic/Azores", 
        "Cape Verde", 
        "Atlantic/Cape_Verde", 
        "Mid-Atlantic", 
        "America/Noronha", 
        "E. South America", 
        "America/Sao_Paulo", 
        "Greenland", 
        "America/Godthab", 
        "SA Eastern", 
        "America/Buenos_Aires", 
        "Newfoundland", 
        "America/St_Johns", 
        "Atlantic", 
        "America/Halifax", 
        "Pacific SA", 
        "America/Santiago", 
        "SA Western", 
        "America/Caracas", 
        "Eastern", 
        "America/New_York", 
        "SA Pacific", 
        "America/Bogota", 
        "US Eastern", 
        "America/Indianapolis", 
        "Central", 
        "America/Chicago", 
        "Mexico", 
        "America/Mexico_City", 
        "Canada Central", 
        "America/Regina", 
        "Central America", 
        "America/Managua", 
        "Mexico Standard Time 2", 
        "America/Chihuahua", 
        "Mountain", 
        "America/Denver", 
        "US Mountain", 
        "America/Phoenix", 
        "Pacific", 
        "America/Los_Angeles", 
        "Alaskan", 
        "America/Anchorage", 
        "Hawaiian", 
        "Pacific/Honolulu", 
        "Pacific/Apia", 
        "Dateline", 
        "Etc/GMT+12", 
        " Copyright (C) 2003, International Business Machines Corporation and others. All Rights Reserved. ", 
        "SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\\", 
        "StandardName", 
        " Standard Time", 
        "K@%+.9g", 
        "ICU_DATA", 
        "windows-%d", 
        "[BOGUS UErrorCode]", 
        "uprops", 
        "ISO_2022,locale=ko,version=0", 
        "ibm-1363_P110-1997", 
        "ibm-949_P110-1999", 
        "ibm-33722_P120-1999", 
        "ibm-943_P130-1999", 
        "ibm-942_P120-1999", 
        "BOCU-1", 
        "UTF-32BE", 
        "UTF-16LE", 
        "UTF-32LE", 
        "UTF-16BE", 
        "swaplfnl", 
        "version=", 
        "locale=", 
        "cnvalias", 
        "US-ASCII", 
        ",swaplfnl", 
        "GB18030", 
        "icudt26l", 
        "gdi32.dll", 
        "EnumFontFamiliesW", 
        "kernel32.dll", 
        "MultiByteToWideChar", 
        "CreateFileW", 
        "GetPrivateProfileStringW", 
        "WideCharToMultiByte", 
        "advapi32.dll", 
        "RegEnumValueW", 
        "GetCurrentDirectoryW", 
        "lstrcmpiW", 
        "FindFirstFileW", 
        "FindFirstChangeNotificationW", 
        "GetDriveTypeW", 
        "GetProcAddress", 
        "shell32.dll", 
        "SHGetFileInfoW", 
        "CompareStringW", 
        "FindNextFileW", 
        "RegOpenKeyExW", 
        "EnumFontFamiliesExW", 
        "CreateFontIndirectW", 
        "GetWindowsDirectoryW", 
        "GetCharABCWidthsW", 
        "GetTextExtentPointW", 
        "ExtTextOutW", 
        "GetTextFaceW", 
        "CreateDirectoryW", 
        "SHGetPathFromIDListW", 
        "RegSetValueExW", 
        "RegCreateKeyExW", 
        "GetSystemDirectoryW", 
        "RegQueryValueExW", 
        "user32.dll", 
        "CharUpperW", 
        "GetVolumeInformationW", 
        "GetFullPathNameW", 
        "msvfw32.dll", 
        "sensapi.dll", 
        "oledlg.dll", 
        "oleacc.dll", 
        "secur32.dll", 
        "avicap32.dll", 
        "winspool.drv", 
        "winmm.dll", 
        "rasapi32.dll", 
        "mpr.dll", 
        "version.dll", 
        "comdlg32.dll", 
        "security.dll", 
        "ntdll.dll", 
        "LdrUnloadDll", 
        "FindResourceW", 
        "FindResourceExW", 
        "GetCPInfo", 
        "GetFileAttributesW", 
        "IsValidCodePage", 
        "lstrcatW", 
        "lstrcpyW", 
        "lstrlenW", 
        "DdeConnect", 
        "DdeConnectList", 
        "DdeQueryConvInfo", 
        "EnumClipboardFormats", 
        "EnumPropsA", 
        "EnumPropsExA", 
        "EnableWindow", 
        "GetClipboardData", 
        "GetPropA", 
        "GetWindowLongA", 
        "IsClipboardFormatAvailable", 
        "IsWindowUnicode", 
        "MessageBoxW", 
        "MessageBoxExW", 
        "RemovePropA", 
        "SetPropA", 
        "SetWindowLongA", 
        "GetCharWidthW", 
        "GetTextExtentPoint32W", 
        "TextOutW", 
        "SHChangeNotify", 
        "FreeContextBuffer", 
        "4 RAS_e", 
        "g:\\Acro_root_at\\bravo\\public\\libraries\\windows\\release\\dynamic\\CoolType5crtstdll\\cooltype.pdb", 
        "CloseHandle", 
        "ReadFile", 
        "SetFilePointer", 
        "GetFileSize", 
        "lstrcmpiA", 
        "GetPrivateProfileStringA", 
        "CreateFileA", 
        "lstrlenA", 
        "FindClose", 
        "GetTickCount", 
        "FindCloseChangeNotification", 
        "FindNextChangeNotification", 
        "WaitForMultipleObjects", 
        "LoadLibraryA", 
        "FreeLibrary", 
        "SetLastError", 
        "GetModuleHandleA", 
        "GetSystemDefaultLCID", 
        "GetVersionExA", 
        "SystemTimeToFileTime", 
        "GetSystemTime", 
        "GetLastError", 
        "GetACP", 
        "InterlockedDecrement", 
        "InterlockedIncrement", 
        "FileTimeToSystemTime", 
        "FileTimeToLocalFileTime", 
        "MapViewOfFile", 
        "CreateFileMappingA", 
        "UnmapViewOfFile", 
        "WriteFile", 
        "FlushFileBuffers", 
        "IsProcessorFeaturePresent", 
        "GetSystemInfo", 
        "GetTimeZoneInformation", 
        "CompareStringA", 
        "GetModuleFileNameA", 
        "GetWindowsDirectoryA", 
        "GetSystemDirectoryA", 
        "InterlockedExchange", 
        "KERNEL32.dll", 
        "ReleaseDC", 
        "wsprintfA", 
        "MessageBoxA", 
        "DefWindowProcA", 
        "CreateWindowExA", 
        "RegisterClassA", 
        "GetDesktopWindow", 
        "DestroyWindow", 
        "USER32.dll", 
        "DeleteObject", 
        "GetFontData", 
        "SelectObject", 
        "DeleteDC", 
        "CreateCompatibleDC", 
        "CreateBitmap", 
        "SetBkColor", 
        "SetTextColor", 
        "GetTextMetricsA", 
        "GetCharABCWidthsA", 
        "GetTextExtentPointA", 
        "ExtTextOutA", 
        "GetBitmapBits", 
        "PatBlt", 
        "SetBkMode", 
        "SetTextAlign", 
        "GetDeviceCaps", 
        "GDI32.dll", 
        "RegCloseKey", 
        "RegQueryValueExA", 
        "RegOpenKeyExA", 
        "RegOpenKeyA", 
        "ADVAPI32.dll", 
        "SHGetMalloc", 
        "SHGetSpecialFolderLocation", 
        "SHELL32.dll", 
        "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z", 
        "??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ", 
        "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z", 
        "?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ", 
        "?_Xlen@_String_base@std@@SAXXZ", 
        "?_Xran@_String_base@std@@SAXXZ", 
        "MSVCP80.dll", 
        "__CxxFrameHandler3", 
        "_CxxThrowException", 
        "memcpy", 
        "strlen", 
        "memset", 
        "_setjmp3", 
        "memmove", 
        "fprintf", 
        "__iob_func", 
        "longjmp", 
        "memcmp", 
        "strncmp", 
        "strcmp", 
        "strtol", 
        "strtoul", 
        "strncpy", 
        "strchr", 
        "strcpy", 
        "_purecall", 
        "__RTDynamicCast", 
        "sprintf", 
        "wcslen", 
        "wcscat", 
        "wcscpy", 
        "wcscmp", 
        "strstr", 
        "wcsstr", 
        "wcsrchr", 
        "towupper", 
        "wcsncmp", 
        "wcsncpy", 
        "sscanf", 
        "_vswprintf", 
        "_time64", 
        "_wsplitpath", 
        "_wfullpath", 
        "wcschr", 
        "_waccess", 
        "??0exception@std@@QAE@ABQBD@Z", 
        "?what@exception@std@@UBEPBDXZ", 
        "??1exception@std@@UAE@XZ", 
        "??0exception@std@@QAE@ABV01@@Z", 
        "??0exception@std@@QAE@XZ", 
        "bsearch", 
        "isdigit", 
        "_invalid_parameter_noinfo", 
        "memmove_s", 
        "realloc", 
        "isxdigit", 
        "isalnum", 
        "memcpy_s", 
        "isalpha", 
        "strcat", 
        "strtok", 
        "strrchr", 
        "isspace", 
        "_errno", 
        "__CxxLongjmpUnwind", 
        "strncat", 
        "strpbrk", 
        "??0exception@std@@QAE@ABQBDH@Z", 
        "vsprintf", 
        "strtod", 
        "printf", 
        "_localtime64", 
        "wcstok", 
        "strspn", 
        "strcspn", 
        "_gmtime64", 
        "_mktime64", 
        "clearerr", 
        "ferror", 
        "fwrite", 
        "fflush", 
        "fclose", 
        "_get_osfhandle", 
        "_fileno", 
        "_open_osfhandle", 
        "isupper", 
        "toupper", 
        "tolower", 
        "wcsncat", 
        "rewind", 
        "ungetc", 
        "remove", 
        "_tzset", 
        "__timezone", 
        "getenv", 
        "__tzname", 
        "_stricmp", 
        "__CxxFrameHandler", 
        "MSVCR80.dll", 
        "_unlock", 
        "_encode_pointer", 
        "__dllonexit", 
        "_onexit", 
        "_decode_pointer", 
        "?terminate@@YAXXZ", 
        "_malloc_crt", 
        "_encoded_null", 
        "_initterm", 
        "_initterm_e", 
        "_amsg_exit", 
        "_adjust_fdiv", 
        "__CppXcptFilter", 
        "_crt_debugger_hook", 
        "?_type_info_dtor_internal_method@type_info@@QAEXXZ", 
        "_except_handler4_common", 
        "__clean_type_info_names_internal", 
        "ReadProcessMemory", 
        "GetCurrentProcess", 
        "GetThreadSelectorEntry", 
        "GetCurrentThread", 
        "InterlockedCompareExchange", 
        "TerminateProcess", 
        "UnhandledExceptionFilter", 
        "SetUnhandledExceptionFilter", 
        "IsDebuggerPresent", 
        "QueryPerformanceCounter", 
        "GetCurrentThreadId", 
        "GetCurrentProcessId", 
        "GetSystemTimeAsFileTime", 
        "_wcsnicmp", 
        "_wcsicmp", 
        "_fdopen", 
        "CoolType.dll", 
        "CTCleanup", 
        "CTGetVersion", 
        "CTInit", 
        ".?AV?$double_linked_list_element@VLazyTerminate@BIB_T_NMT@@VBIBDLLEParent@@@@", 
        ".?AVBIBDLLEParent@@", 
        ".?AV?$double_linked_list_element@VBIBVTabGeneric@BIB_T_NMT@@VCBIBClientBasePMT@2@@@", 
        ".?AVCBIBClientBasePMT@BIB_T_NMT@@", 
        ".?AVCBIBClientBase@BIB_T_NMT@@", 
        ".?AVCBIBError@BIB_T_NMT@@", 
        ".?AVCBIBErrorParent@BIB_T_NMT@@", 
        ".?AVLazyTerminate@BIB_T_NMT@@", 
        ".?AVBIBVTabGeneric@BIB_T_NMT@@", 
        ".?AVDelVTabListGeneric@BIB_T_NMT@@", 
        ".?AVBIBVTabListGeneric@BIB_T_NMT@@", 
        ".?AV?$no_construct_double_linked_list@VBIBVTabGeneric@BIB_T_NMT@@VCBIBClientBasePMT@2@@@", 
        ".?AVCBIBSimpleStreamTerminate@BIB_T_NMT@@", 
        ".?AVCBIBRewindableStreamTerminate@BIB_T_NMT@@", 
        ".?AVCBIBPositionableStreamTerminate@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@Uproctable_type@BIBDataStoreTraits@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@Uproctable_type@BIBSizedDataStoreTraits@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@Uproctable_type@BIBDataBlockStreamTraits@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVCAGMVirtualImageIterator@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerBase@VAGMVirtualImageIteratorContainer@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVBIBContainerBaseGeneric@BIB_T_NMT@@", 
        ".?AVCAGMPrintPSResInfoClient@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerBase@VAGMPrintPSResInfo@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVBRVException@@", 
        ".?AVBRVExceptionNoOpParent@@", 
        ".?AVAGM_CCO_keys@BIB_T_NMT@@", 
        ".?AVCGPLineErrorHandler@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerBase@VGPLineErrorHandler@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVCAGMVirtualImageTileTerminate@BIB_T_NMT@@", 
        ".?AVCAGMVirtualImageIteratorTerminate@BIB_T_NMT@@", 
        ".?AVCAGMVirtualImageProducerTerminate@BIB_T_NMT@@", 
        ".?AVCAGMPrintDeviceControllerTerminate@BIB_T_NMT@@", 
        ".?AVCAGMEPSClientTerminate@BIB_T_NMT@@", 
        ".?AVCAGMPrintPSResInfoClientTerminate@BIB_T_NMT@@", 
        ".?AVCAGMPortTerminate@BIB_T_NMT@@", 
        ".?AVCAGMGStatePortTerminate@BIB_T_NMT@@", 
        ".?AVCAGMGraphixPortTerminate@BIB_T_NMT@@", 
        ".?AVGPLineSegmentTerminate@BIB_T_NMT@@", 
        ".?AVGPColorConvSegmentTerminate@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@Uproctable_type@AIMDictionaryTraits@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@Uproctable_type@const_AIMDictionaryTraits@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVCAGMEPSClient@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerBase@VAGMEPSContainer@BIB_T_NMT@@@BIB_T_NMT@@", 
        "\"&+/37<@Adobe patent application tracking # P557,      entitled 'Dynamic Selection of Anti-Alias Procedures',      invented by R. David Arnold and Terence S. Dowling      Issued U.S. Patent 07002597 on 02/21/2006", 
        "Adobe patent application tracking # P558,      entitled 'Anisotropic Anti-Aliasing',      invented by Terence S. Dowling and R. David Arnold      Issued U.S. Patent 07006107 on 02/28/2006", 
        "KS#KQZX8", 
        "!!Y#KTX  `", 
        "Adobe patent application tracking # P041,       entitled 'Method of Displaying Characters with       Improved Features Using Multimaster Fonts',       invented by Terence S. Dowling and  Jon von Zelowitz       Issued U.S. Patent 05995086 on 11/30/1999", 
        "Adobe patent application tracking # P052,       entitled 'Method & Apparatus for Rendering Characters'       invented by Terence S. Dowling       Issued U.S. Patent 05943063 on 08/24/1999", 
        "Adobe patent application tracking # P297,       entitled 'Device Dependent Rendering',       invented by Terence S. Dowling and Jeremy A. Hall       Issued U.S. Patent 06563502 on 5/13/2003", 
        "Adobe patent application tracking # P430,       entitled 'Enhanced Down-sampling for LCDs',       invented by Terence S. Dowling and R. David Arnold", 
        "Adobe patent application tracking # P440,       entitled 'Hinted Stem Placement on High-resolution Pixel Grid',       invented by Terence S. Dowling and R. David Arnold", 
        "Adobe patent application tracking # P590,       entitled 'An Improved Hinting Policy       For Rendering Anti-aliased Type 1 Fonts',       invented by R. David Arnold and Terence S. Dowling", 
        "AdobeIP#0000134", 
        "0123456789abcdef", 
        ".?AVATMCFontDesc@@", 
        ".?AVCAdobeExtFontDirIter@@", 
        ".?AVNameTableParser@@", 
        ".?AVCTBaseFontContextObj@@", 
        ".?AVCAdobeExtFontDirIterWin@@", 
        ".?AVCFFGidFetcher@@", 
        ".?AVWritingScript_NameTableParser@@", 
        ".?AVChecksumCalculator@@", 
        ".?AVChecksumCalculator_T1@@", 
        ".?AVCTCommonFontContextObj@@", 
        ".?AVCTLocalDirFontContextObj@@", 
        ".?AVT1FontDesc@@", 
        ".?AVCFRContainer@@", 
        ".?AVCFRFontStreamContainer@@", 
        ".?AVCIDFontDesc@@", 
        ".?AVCFFFontDesc@@", 
        ".?AV?$double_linked_list_element@VCBIBStaticCacheBase@BIB_T_NMT@@VBIBDLLEParent@@@@", 
        ".?AVCTSystemFontContextObj@@", 
        ".?AVCBIBStaticCacheBase@BIB_T_NMT@@", 
        ".?AVCFRFontIDContainer@@", 
        ".?AVCTStaticPurge@?A0x5e609460@@", 
        ".?AVATMDataHandler@@", 
        ".?AVWinDirectoryHandler@@", 
        ".?AVFontHandlerComm@@", 
        ".?AVFontHandler@@", 
        ".?AV?$VoidDictionary@PAVFontInfoArray@@@@", 
        ".?AV?$CTMap@VSKey@@AAV1@PAVFontInfoArray@@AAPAV2@@@", 
        ".?AVCTNoThrowBase@@", 
        ".?AVFONTDictionary@@", 
        ".?AVATMFontHandler@@", 
        "Adobe patent application tracking # P057,       entitled 'Adjusting Contrast in Anti-aliasing',       invented by R. David Arnold       Issued U.S. Patent 05929866 on 07/27/1999", 
        "Adobe patent application tracking # P589,       entitled 'Glyph Darkening Based On Edge Detection',       invented by R. David Arnold and Terence S. Dowling", 
        ".?AVCoreTypeStream@@", 
        ".?AVCFRSourceStream@@", 
        ".?AVCFRFontIDStream@@", 
        ".?AVCFRFontReadStream@@", 
        "0123456789ABCDEF", 
        ".?AVStreamHandler@@", 
        ".?AVNoCMapsWalker@@", 
        ".?AVWinFileWalker@@", 
        ".?AVCRoamInfoRec@@", 
        ".?AVCMonitorInfoRec@@", 
        "SOA~SO", 
        "SOA~SO4", 
        "[SOA~SO", 
        "[SOA~SO4", 
        "[SOA~SOp", 
        "SOA~SOp", 
        "SOA[q_", 
        "SOA~SOA[q_", 
        "[SOA[q_", 
        "[SOA~SOA[q_", 
        "pUSl}0x", 
        ".?AVCBIBVirtualClientBase@BIB_T_NMT@@", 
        ".?AVCTRCBase@@", 
        ".?AV?$double_linked_list_element@VLogFontElement@@VBIBDLLEParent@@@@", 
        ".?AVLogFontList@@", 
        ".?AV?$double_linked_list@VLogFontElement@@VBIBDLLEParent@@@@", 
        ".?AV?$no_construct_double_linked_list@VLogFontElement@@VBIBDLLEParent@@@@", 
        ".?AVLogFontElement@@", 
        ".?AVWinTTFontHandler@@", 
        ".?AVbad_exception@std@@", 
        ".?AVexception@std@@", 
        ".?AVCBIBVirtualClientBasePMT@BIB_T_NMT@@", 
        ".?AVRangeTreeAbstIterator@@", 
        ".?AV?$auto_ptr@VRangeTreeAbstIteratorImpl@@@std@@", 
        ".?AVRangeTreeAbst@@", 
        ".?AVCBIBCacheBase@BIB_T_NMT@@", 
        ".?AVCMapObj@@", 
        ".?AVRangeTree@@", 
        ".?AV?$redblack_tree@VRangeNode@@VRangeKey@@@@", 
        ".?AVCMapCache@@", 
        ".?AVRangeTreeCM@@", 
        ".?AVlogic_error@std@@", 
        ".?AVlength_error@std@@", 
        ".?AV?$double_linked_list_element@VComponentFontElement@@VBIBDLLEParent@@@@", 
        ".?AVDictValAtoms@@", 
        ".?AVComponentFontElement@@", 
        ".?AVComponentFontList@@", 
        ".?AVDictEntriesCache@Font@@", 
        ".?AVType3FontInfo@@", 
        ".?AVCSSFontProperties@@", 
        ".?AVFont@@", 
        ".?AUCTBadParamException@@", 
        ".?AUCTMatrixTooBigException@@", 
        ".?AUCTBadEncodingException@@", 
        ".?AUCTArrayTooShortException@@", 
        ".?AUCTGenericException@@", 
        ".?AUCTOutOfMemoryException@@", 
        ".?AUCTBadFontException@@", 
        ".?AUCTRasterWarningException@@", 
        ".?AUCTBadCMapException@@", 
        ".?AUCTBadSupportFileException@@", 
        ".?AVPrintDeviceController@BIB_T_NMT@@", 
        ".?AVCTPrintDeviceControllerBIBImpl@@", 
        ".?AVBIBRegister@?A0xbe4c78ad@@", 
        ".?AVRasterWarning@@", 
        ".?AVBIBClientSimpleStream@BIB_T_NMT@@", 
        ".?AVCTPSEmitterImpl@@", 
        ".?AVCTTextWithCTMListBIBImpl@@", 
        ".?AVBIBSimpleStreamAdaptor@@", 
        ".?AV?$double_linked_list_element@VTextWithCTMElement@@VBIBDLLEParent@@@@", 
        ".?AV?$TOutlineIter@MUCTRealGlyphPoint@@UBRVCoordMatrix@@@@", 
        ".?AVTextWithCTMElement@@", 
        ".?AVTextWithCTMList@@", 
        ".?AV?$double_linked_list@VTextWithCTMElement@@VBIBDLLEParent@@@@", 
        ".?AV?$no_construct_double_linked_list@VTextWithCTMElement@@VBIBDLLEParent@@@@", 
        ".?AVPSEmitter@@", 
        ".?AVPSProcs@@", 
        ".?AVCTFloatOutlineIter@@", 
        ".?AV?$TableIterator@VKernPairNode@CK@@@CK@@", 
        ".?AV?$double_linked_list_element@VGlyphInfoDualTableListElement@CK@@VBIBDLLEParent@@@@", 
        ".?AVKernPairTableIterator@CK@@", 
        ".?AV?$TableIterator@VGlyphInfoNode@CK@@@CK@@", 
        ".?AVGlyphInfoTable@CK@@", 
        ".?AV?$IterableTable@VGlyphInfoTableIterator@CK@@@CK@@", 
        ".?AVBufferedTable@CK@@", 
        ".?AVUpToDater@CK@@", 
        ".?AV?$IterableTable@VKernPairTableIterator@CK@@@CK@@", 
        ".?AVKernPairTable@CK@@", 
        ".?AVKernPairTree@CK@@", 
        ".?AV?$FlattenableTree@VKernPairNode@CK@@VKernPairKey@2@VKernPairTable@2@VKernPairTableIterator@2@@CK@@", 
        ".?AV?$redblack_tree@VKernPairNode@CK@@VKernPairKey@2@@@", 
        ".?AVGlyphInfoTableIterator@CK@@", 
        ".?AVGlyphInfoTree@CK@@", 
        ".?AV?$FlattenableTree@VGlyphInfoNode@CK@@JVGlyphInfoTable@2@VGlyphInfoTableIterator@2@@CK@@", 
        ".?AV?$redblack_tree@VGlyphInfoNode@CK@@J@@", 
        ".?AVGlyphInfoDualTableListElement@CK@@", 
        ".?AVCustomKern@CK@@", 
        ".?AVDictVal@@", 
        ".?AVEmptyDictVal@@", 
        ".?AVATMCParsedObject@@", 
        ".?AVType1Parse@@", 
        ".?AVCIDParse@@", 
        ".?AVCMapParse@@", 
        ".?AVRearrangedParse@@", 
        ".?AVT1ProgCache@@", 
        ".?AVMenuNameArrayObj@@", 
        ".?AVOTFeatureList@@", 
        ".?AVFontDescObj@@", 
        ".?AVVoidPtrObj@@", 
        ".?AVFixedObj@@", 
        ".?AVIntObj@@", 
        ".?AVWinLOGFONTObj@@", 
        ".?AVIFontObj@@", 
        ".?AVStringAtomObj@@", 
        ".?AVSFNTKernTable@@", 
        ".?AVFontTableCache@@", 
        ".?AVByteArrayObj@@", 
        ".?AVPtrArrayObj@@", 
        ".?AVFixedArrayObj@@", 
        ".?AVIntArrayObj@@", 
        ".?AVCTFontIDObj@@", 
        ".?AVType1Program@@", 
        ".?AVFontTableVal@@", 
        ".?AVCIDProgram@@", 
        ".?AVCffProgram@@", 
        ".?AV?$ArrayObj@V?$CTRCImpl@VCTEncodingObj@@@@@@", 
        ".?AV?$ArrayObj@V?$CTRCImpl@VFont@@@@@@", 
        ".?AVKernCache@@", 
        ".?AVCode2GIDCache@@", 
        ".?AV?$ArrayObj@VCBIBStringAtom@BIB_T_NMT@@@@", 
        ".?AVCIDSubrCache@CIDProgram@@", 
        ".?AVRearrangedProgram@@", 
        ".?AVCFFProgCache@@", 
        ".?AVCTEncodingObj@@", 
        ".?AVCSSPreferences@@", 
        ".?AVFallbackFontSet@@", 
        ".?AVFamily@FontEnumeration@@", 
        ".?AVFontGroupCollection@FontEnumeration@@", 
        ".?AVFontGroupCollectionAsciiNative@FontEnumeration@@", 
        ".?AVFontGroupCollectionWinMenu@FontEnumeration@@", 
        ".?AVFontGroup@FontEnumeration@@", 
        ".?AVFamilyList@FontEnumeration@@", 
        ".?AVFontInstanceKey@@", 
        ".?AVCTFontInst@@", 
        ".?AV?$double_linked_list_element@V?$RCElement@V?$CTRCImpl@VFont@@@@@@VCBIBClientBase@BIB_T_NMT@@@@", 
        ".?AV?$double_linked_list_element@V?$FosterListElement@VFont@@@@VCBIBClientBase@BIB_T_NMT@@@@", 
        ".?AV?$RCElement@V?$CTRCImpl@VFont@@@@@@", 
        ".?AV?$FosterListElement@VFont@@@@", 
        ".?AVFontSet@@", 
        ".?AVPlatformFontSet@@", 
        ".?AVCommonFontSet@@", 
        ".?AVCTPSFontStream@@", 
        ".?AVOTCoverageIter@@", 
        ".?AVRevmapCoverageIter@RevFeat@OTGAcc@@", 
        ".?AVOTGAcc@@", 
        ".?AVOTGAccCache@OTGAcc@@", 
        ".?AVHarvestCoverageIter@GSUBHarvest@@", 
        ".?AVTrueTypeFontDesc@@", 
        ".?AVOutlinePath@@", 
        ".?AVFontInstanceCache@@", 
        ".?AVGlyphsetCoverageIter@@", 
        ".?AVRangeTreeAbstIteratorImpl@@", 
        ".?AVRangeTreeRBIteratorImpl@@", 
        ".?AV?$redblack_tree_iterator@V?$redblack_tree@VRangeNode@@VRangeKey@@@@VRangeNode@@VRangeKey@@@@", 
        ".?AVRangeTreeCMIteratorImpl@@", 
        ".?AV?$CodeMapIterator@G@@", 
        ".?AVRevcmap@@", 
        ".?AVRevcmap0@@", 
        ".?AVRevcmapTable@@", 
        ".?AVRevCodeMap@@", 
        ".?AVRevcmap6@@", 
        ".?AVHorizVertSwitcherCache@@", 
        ".?AVRevcmapUniMap@@", 
        ".?AVRevcmapWithDup@@", 
        ".?AVRevcmapCMap@@", 
        ".?AVRevcmap2@@", 
        ".?AVRevcmap4@@", 
        ".?AVRevcmap12@@", 
        ".?AVRevCodeMapATC@@", 
        ".?AVStringDecoderKey@@", 
        ".?AVStringDecoderCache@@", 
        ".?AV?$double_linked_list_element@V?$RCElement@V?$CTRCImpl@VCMapObj@@@@@@VCBIBClientBase@BIB_T_NMT@@@@", 
        ".?AV?$RCElement@V?$CTRCImpl@VCMapObj@@@@@@", 
        ".?AVCTTextBIBImpl@@", 
        ".?AV?$double_linked_list_element@VTextElement@@VBIBDLLEParent@@@@", 
        ".?AVTextElement@@", 
        ".?AVText@@", 
        ".?AVCTUniTranslator@@", 
        ".?AVCTCodePageUniTranslator@@", 
        ".?AVCTSimpleUniTranslator@@", 
        ".?AVRevMapCache@@", 
        ".?AVCTCMapUniTranslator@@", 
        ".?AVTranslator@@", 
        ".?AVCTCodePageFromUniTranslator@@", 
        ".?AVCTCIDTranslator@@", 
        ".?AVCTSimpleFromUniTranslator@@", 
        ".?AVUFLDestStream@@", 
        ".?AVUFLBaseServices@@", 
        ".?AVUFLPositionableDestStream@@", 
        ".?AVUFLWriteOnlyStream@@", 
        ".?AVIOSupportForUFL@@", 
        ".?AVUFLTempStream@@", 
        ".?AVUFLSupport@@", 
        ".?AVUFLSupportPSStream@@", 
        ".?AVUFLSupportPST1@@", 
        ".?AVUFLSupportPSCID@@", 
        ".?AVUFLSupportT3T3@@", 
        ".?AVUFLSupportTT@@", 
        ".?AVUFLSupportTTT1@@", 
        ".?AVUFLSupportTTCIDFont@@", 
        ".?AVUFLSupportTTTT@@", 
        ".?AVUFLSupportT42@@", 
        ".?AVUFLSupportTTT3@@", 
        ".?AVHasEnglishLangID_NameTableParser@@", 
        ".?AVSearchForNames_NameTableParser@@", 
        ".?AVMenu_NameTableParser@@", 
        ".?AVCSS_NameTableParser@@", 
        ".?AVUnicodeType1Cache@@", 
        ".?AVUniStringDecoderCache@@", 
        ".?AVTransMapAbst@@", 
        ".?AVCTUBase@@", 
        ".?AVTransParser@@", 
        ".?AVFileParser@@", 
        ".?AVAdobeTransParser@@", 
        ".?AVDeprecatedTransParser@@", 
        ".?AVTransMapICU@@", 
        ".?AVTransMapCacheData@@", 
        ".?AVTransMap@@", 
        ".?AVTransMapSJIS@@", 
        ".?AVTransMapSJISGaiji@@", 
        ".?AVTransMapUnicode2@@", 
        ".?AVTransMapBig5UVDA@@", 
        ".?AVFauxHandler_@@", 
        ".?AVCJKFauxHandler@@", 
        ".?AVSynthSmallCapsHandler@@", 
        ".?AV?$TOutlineIter@JU_t_CTGlyphPoint@@U_t_BRVFixedMatrix@@@@", 
        ".?AVCTOutlineIter@@", 
        "{{(%s)(_)search{exch pop exch pop cvn dup findfont/FontName get eq}{pop false}", 
        "ifelse}systemdict/resourcestatus known{currentglobal exch /%s /Font resourcestatus{pop pop pop", 
        "true}{exec}ifelse exch setglobal exit}if FontDirectory/%s known{pop true exit}if", 
        "systemdict/SharedFontDirectory known{SharedFontDirectory/%s known{pop true", 
        "exit}if}if systemdict/deletefile known{{(%%font%%%s)(fonts/%s)}{{status}", 
        "stopped{pop exit}{{4{pop}repeat pop true exit}if}ifelse}forall}if exec exit}", 
        "loop{save true}{false}ifelse", 
        ".?AVRomanFauxHandler@@", 
        ".?AVSFNTTableCreator@@", 
        ".?AVCFFGenerator@@", 
        ".?AVcmapGenerator@@", 
        ".?AVLocaAndGlyfGenerator@@", 
        ".?AVTableFetcher@@", 
        ".?AVConverterImpl@@", 
        ".?AVOpenTypeConverter@@", 
        ".?AVUFOConversionInfo@@", 
        ".?AVUFOCoreCtx@@", 
        ".?AUCFFFontStruct@@", 
        ".?AUT1FontStruct@@", 
        ".?AUTTT3FontStruct@@", 
        ".?AUT42FontStruct@@", 
        ".?AVMapData@@", 
        ".?AVMapData_Code@@", 
        ".?AVMapData_Num@@", 
        ".?AVMapData_Byte@@", 
        ".?AVMapData_CodeList@@", 
        ".?AVMapData_ByteList@@", 
        ".?AVbad_alloc@std@@", 
        ".?AVPropFileParser@@", 
        ".?AVAppleCorpCharPropFileParser@@", 
        ".?AVUniPropTable@@", 
        ".?AVMapData_StateTransList@@", 
        ".?AVCTUFile@@", 
        ".?AVFileLocator@@", 
        ".?AVCTUWinFile@@", 
        ".?AVWinFileLocator@@", 
        "cccccccccccccccccccccccccccccccccccccccccccccccc", 
        "ccccccc", 
        "\u001f !\"#cccccc", 
        "\u001f !\"#ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc", 
        ".?AVBinaryTreeIterator@@", 
        ".?AVBalancedTreeIterator@@", 
        ".?AVBinaryTree@@", 
        ".?AVCTFile@@", 
        ".?AVCTStdioFile@@", 
        ".?AVCTMemFile@@", 
        ".?AVRedBlackTree@@", 
        ".?AV?$TDelVTabList@U_t_CTTextInterface@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@U_t_CTTextListInterface@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@U_t_CTTextWithCTMListInterface@@@BIB_T_NMT@@", 
        ".?AV?$TDelVTabList@U_t_CTPSEmitterInterface@@@BIB_T_NMT@@", 
        ".?AVBIBContainerImpl@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerImpl@UBIBDataStoreInterface@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVBIBDataStoreImpl@BIB_T_NMT@@", 
        ".?AV?$TBIBContainerImpl@UBIBSizedDataStoreInterface@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVBIBDataBlockStore@BIB_T_NMT@@", 
        ".?AVBIBSizedDataStoreImpl@BIB_T_NMT@@", 
        ".?AVBIBSubRangeDataStore@BIB_T_NMT@@", 
        ".?AVBIBSizedSubRangeDataStore@BIB_T_NMT@@", 
        ".?AV?$TBIBAutoRegister@UBIBDataStoreInterface@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AV?$TBIBAutoRegister@UBIBSizedDataStoreInterface@BIB_T_NMT@@@BIB_T_NMT@@", 
        ".?AVCTAtoms@@", 
        ".?AVBIBRegister@?A0x9f7c8cdb@@", 
        ".?AVBIBRegister@?A0x70fd2f79@@", 
        ".?AVBIBRegister@?A0x5207d162@@", 
        ".?AVCTDDRParamsImpl@@", 
        ".?AVDDRParams@@", 
        ".?AVBIBRegister@?A0x4a3a076f@@", 
        ".?AVBIBRegister@?A0x75e613ff@@", 
        ".?AVBIBRegister@?A0x62242a8f@@", 
        ".?AVFeatureHarvest@@", 
        ".?AVClientKeyObj@@", 
        ".?AVFontValues@CTDict@@", 
        ".?AVBIBRegister@?A0x1bfa5649@@", 
        ".?AVSVGFontInfo@@", 
        ".?AVBIBRegister@?A0x4ead8dd1@@", 
        ".?AVBIBRegister@?A0x811cef35@@", 
        ".?AVGDICache@@", 
        ".?AVBIBRegister@?A0x03cb9423@@", 
        ".?AVBIBRegister@?A0xd21d91db@@", 
        ".?AVGlyphAccess@@", 
        ".?AVBIBPersistDataStore@@", 
        ".?AVBIBRegister@?A0xa9469393@@", 
        ".?AVBIBRegister@?A0x4d89c08f@@", 
        ".?AVCTTextListBIBImpl@@", 
        ".?AVTextList@@", 
        ".?AV?$double_linked_list@VTextElement@@VBIBDLLEParent@@@@", 
        ".?AV?$no_construct_double_linked_list@VTextElement@@VBIBDLLEParent@@@@", 
        ".?AVBIBRegister@?A0x63d5a331@@", 
        ".?AVBIBRegister@?A0x52261e8d@@", 
        ".?AVBIBRegister@?A0xad1c811e@@", 
        ".?AVBIBRegister@?A0xac393e0b@@", 
        ".?AVBIBRegister@?A0xefa88dc0@@", 
        ".?AVUObject@icu_2_6@@", 
        ".?AVUMemory@icu_2_6@@", 
        ".?AVForwardCharacterIterator@icu_2_6@@", 
        ".?AVCharacterIterator@icu_2_6@@", 
        ".?AVLocale@icu_2_6@@", 
        ".?AVUnicodeString@icu_2_6@@", 
        ".?AVReplaceable@icu_2_6@@", 
        "11:24:23 Apr 26 1999", 
        "ATMXYShowText", 
        "ATMSetFlags", 
        "ATMSelectObject", 
        "ATMRemoveFont", 
        "ATMMakePSS", 
        "ATMMakePFM", 
        "ATMGetVersion", 
        "ATMGetPostScriptName", 
        "ATMGetOutline", 
        "ATMGetNtmFields", 
        "ATMGetMenuName", 
        "ATMGetFontPaths", 
        "ATMGetFontBBox", 
        "ATMGetBuildStr", 
        "ATMFontSelected", 
        "ATMFontAvailable", 
        "ATMEnumMMFonts", 
        "ATMEnumFonts", 
        "ATMEndFontChange", 
        "ATMForceFontChange", 
        "ATMBeginFontChange", 
        "ATMBBoxBaseXYShowText", 
        "ATMAddFont", 
        "ATMIsUp", 
        "KERNEL", 
        "SUnMapLS_IP_EBP_40", 
        "SUnMapLS_IP_EBP_36", 
        "SUnMapLS_IP_EBP_28", 
        "SUnMapLS_IP_EBP_24", 
        "SUnMapLS_IP_EBP_20", 
        "SUnMapLS_IP_EBP_16", 
        "SUnMapLS_IP_EBP_12", 
        "SUnMapLS_IP_EBP_8", 
        "SUnMapLS", 
        "SMapLS_IP_EBP_40", 
        "SMapLS_IP_EBP_36", 
        "SMapLS_IP_EBP_28", 
        "SMapLS_IP_EBP_24", 
        "SMapLS_IP_EBP_20", 
        "SMapLS_IP_EBP_16", 
        "SMapLS_IP_EBP_12", 
        "SMapLS_IP_EBP_8", 
        "SMapLS", 
        "QT_Thunk", 
        "FT_Thunk", 
        "FT_Prolog", 
        "FT_Exit48", 
        "FT_Exit36", 
        "FT_Exit24", 
        "FT_Exit20", 
        "FT_Exit16", 
        "FT_Exit12", 
        "KERNEL32", 
        "ATMXYShowTextA", 
        "ATMRemoveFontW", 
        "ATMRemoveFontA", 
        "ATMMakePSSA", 
        "ATMMakePFMA", 
        "ATMGetVersionExA", 
        "ATMGetPostScriptNameW", 
        "ATMGetPostScriptNameA", 
        "ATMGetOutlineW", 
        "ATMGetOutlineA", 
        "ATMGetNtmFieldsW", 
        "ATMGetNtmFieldsA", 
        "ATMGetMenuNameW", 
        "ATMGetMenuNameA", 
        "ATMGetFontPathsA", 
        "ATMGetBuildStrA", 
        "ATMFontStatusA", 
        "ATMFontAvailableA", 
        "ATMEnumMMFontsA", 
        "ATMEnumFontsA", 
        "ATMBBoxBaseXYShowTextA", 
        "ATMAddFontA", 
        "ATMFinish", 
        "ATMProperlyLoaded", 
        "ATMLIB", 
        ".?AVtype_info@@", 
        "<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">", 
        "  <dependency>", 
        "    <dependentAssembly>", 
        "      <assemblyIdentity type=\"win32\" name=\"Microsoft.VC80.CRT\" version=\"8.0.50608.0\" processorArchitecture=\"x86\" publicKeyToken=\"1fc8b3b9a1e18e3b\"></assemblyIdentity>", 
        "    </dependentAssembly>", 
        "  </dependency>", 
        "</assembly
        "2%2K2T2k2", 
        "3'424B4G4T4[4b4i4p4w4~4", 
        "5\u001f5&5-545;5B5I5P5W5^5e5l5s5z5", 
        "6#6*6E6U6Z6g6n6u6|6", 
        "7 7'7.757<7C7J7Q7X7_7f7m7t7{7", 
        "8-828?8F8M8T8[8b8i8p8w8~8", 
        ": :%:,:5:M:R:Y:b:z:", 
        "<W<`<x<}<", 
        "=*=D=I=S=", 
        "=J>R>^>i>", 
        ";0G0q0w0", 
        "1-131\\1b1", 
        "2G2M2v2|2", 
        "383>3j3p3", 
        "4 4'4.454<4C4J4Q4X4_4f4m4z4", 
        "5!5%5+5/55595?5C5I5M5S5W5]5a5g5k5q5u5{5", 
        "596J6R6Z6q6", 
        "6&7.767M7d7", 
        "B<Q<a<k<y<", 
        "=9=@=N=^=g=", 
        ">\">P>`>j>", 
        "?;?K?U?", 
        "P0`0i0", 
        "0,131H1R1`1h1", 
        "2!2-3A3Y3m3", 
        "4\"4*494E4|4", 
        "5#5+565?5I5S5]5n5}5", 
        "6%6/656;6?6G6K6W6\\6g6u6", 
        "7\u001f7&7-767>7B7G7L7S7^7n7s7z7", 
        "8\"8*8.848>8E8K8U8Y8`8g8o8w8", 
        "9-939I9", 
        ": :%:2:M:S:i:", 
        "; ;,;7;;;A;E;K;O;d;k;w;};", 
        "</<6<?<E<Q<\\<`<r<x<", 
        "= =(=3=:=@=K=S=W=`=f=p=|=", 
        ">&>O>U>", 
        "1*131<1C1M1S1`1i1r1y1", 
        "20252:2A2L2S2[2d2j2q2{2", 
        "484?4N4", 
        "5*535X5d5p5w5}5", 
        "6!6>6S6_6l6t6", 
        "7\"7+7Y7", 
        "8'868F8U8\\8b87;=;D;J;o;", 
        "<!<*<1<6<<<D<g<", 
        "=%=,=2=S=Y=c=s=", 
        ">+>9>L>Q>^>u>z>", 
        "?+?4?G?X?f?k?t?", 
        ")0H0^0{0", 
        "373@3r3", 
        "454;4Q4X4_4l4y4", 
        "565A5J5[5i5o5w5", 
        "6&6/696R6W6d6m6w6", 
        "777?7E7V7_7o7", 
        "8)878B8h8q8w8}8", 
        "9 9+909C9U9[9g9w9", 
        ":\u001f:(:0:F:Y:_:k:q:", 
        ";(;.;;;D;M;k;x;", 
        "<#<+<6<<<I<R<\\<i<o<t<", 
        "=4=;=G=M=Y=n=", 
        "=#>j>v>", 
        "> ?'?7?=?N?Z?`?o?u?", 
        "0$0;0A0N0W0`0w0}0", 
        "1+111>1G1R1i1o1|1", 
        "2$2-282R2X2e2n2y2", 
        "3\u001f3,353L3R3_3h3", 
        "4 4.4C4L4Z4h4", 
        "4 5/555B5T5\\5h5t5|5", 
        "6$696A6R6X6_6f6m6}6", 
        "8C8O8_8i8x8", 
        "9)929L9R9Y9f9y9", 
        ":\u001f:&:,:2:A:i:s:", 
        "<%<3<w<", 
        "=(=m=~=", 
        "=\">8>U>]>m>w>", 
        "?&?6?@?v?", 
        "162?2O2X2", 
        "2[3g3y3~3", 
        "4!4*404B4K4S4Y4g4x4", 
        "5%51575H5a5g5u5", 
        "6'6-6O6y6", 
        "7.7E7W7n7", 
        "=[=a=g=m=s=y=~=", 
        ">\u001f>%>+>1>5>;>?>E>K>O>U>[>_>e>i>o>s>y>", 
        "?!?+?/?4?:?D?H?M?S?Y?]?b?h?r?v?{?", 
        "0%0)0/050?0C0I0O0Y0]0c0i0m0s0w0}0", 
        "1!1'1+111;1?1E1K1O1U1Y1_1i1m1r1x1", 
        "2$2)2/252;2A2G2L2Q2W2[2a2e2k2o2u2y2", 
        "3!3'31353;3A3K3O3U3[3e3i3o3u3", 
        "4!4%4+4/45494?4C4I4M4S4W4]4a4g4k4q4u4{4", 
        "5!5'5-575;5@5F5P5V5`5d5i5o5y5}5", 
        "6#6'6-636=6A6G6M6W6[6`6f6j6p6t6z6", 
        "7 7$7*7.747:7>7C7I7M7S7Y7]7c7g7m7w7{7", 
        "8 8&80848:8>8D8H8N8R8X8\\8b8l8p8u8{8", 
        "9\"9(9.989>9D9N9R9W9]9g9k9q9{9", 
        ": :&:,:6:::@:G:L:Q:V:\\:`:f:j:p:t:z:~:", 
        ";\u001f;$;*;4;8;=;C;M;Q;V;\\;f;j;p;t;z;", 
        "<\u001f<%</<3<9<?<C<H<N<X<\\<a<g<q<v<|<", 
        "=\"=(=,=2=6=<=@=F=J=P=T=Z=^=d=h=n=r=x=|=", 
        "=2?E?N?Y?b?", 
        "1+101.262<2", 
        "5\\8f8z8", 
        "9!9&9/969J9\\9b9m9s9", 
        "9+:5:?:F:V:k:", 
        ";,;4;>;J;Y;", 
        "<!<5<><J<N<V<Z<`<d<m<w<", 
        "=\"=*=4=;=R=", 
        ">*>3><>E>Q>", 
        "1'131=1_1k1", 
        "1V2]2{2", 
        "2'343J3c3i3o3{3", 
        "3P4\\4s4y4", 
        "7#7>7D7U7b7k7q7", 
        "8<8Z8j8r8x8", 
        "9!9.949", 
        "U9Z9r9}9", 
        "1\u001f181D1", 
        "1#2;2B2Z2e2l2x2", 
        "313;3i3", 
        "838F8T8`8", 
        ">!>2>C>T>", 
        "1\"181n1", 
        "2+292X2_2f2m2", 
        "3:4U4q4", 
        "142U2k2", 
        "3 3H3P3", 
        "2\"2(2.22282B2H2N2T2\\2h2}2", 
        "3!3%3+3/35393?3C3I3M3S3W3]3a3g3k3q3u3{3", 
        "4\u001f4%4)4/43494=4F4J4P4T4Z4^4d4h4n4r4x4|4", 
        "5\"5&5,50565:5@5D5J5N5T5X5^5b5h5l5r5v5|5", 
        "6 6&6*60646:6>6D6H6N6R6X6\\6b6s6", 
        "7?7U7g7", 
        ";\u001f<5<@<K<V<a<l<w<", 
        "=0=D=P=a=", 
        "=/>K>T>d>", 
        ">*?3?\\?b?", 
        "9,:F:[;", 
        "=$=.=6=r=", 
        "?$?]?x?", 
        "I0j0y0", 
        "1#2.2L2f2", 
        "6>6H6T6`6{6", 
        "8\"8;8T8", 
        "9\u001f9-92979=9J9W9k9}9", 
        "?#?0?<?", 
        "?9?h?n?", 
        "K0[0m0", 
        "4\u001f4z4+5]536r6", 
        "8O9X9h9t9", 
        "?\u001f?)?1?F?", 
        ".0_0n0", 
        "0)1;2X2d2x2", 
        "324Q4`4]5q5", 
        "6%6+656D6Q6r6y6", 
        "7 7M7T7f7m7", 
        "9&9/9W9", 
        ":.:F:a:", 
        "<\"<9<T<k<", 
        "=(=9=M=g=", 
        ">5>L>Y>i>t>", 
        "?!?7?L?f?", 
        "3!383Q3h3", 
        "4\u001f4&4=4_4", 
        "5;5W5r5", 
        "6\u001f6P6n6", 
        "7!7(7?7U7j7q7", 
        "848H8O8f8", 
        "=/=J=i=", 
        "=@>[>v>", 
        "2*2=2P2c2v2", 
        "7]7u7K8", 
        "0=0v041", 
        "7-7>7M7", 
        "*0M0t0|0", 
        "2#2)2m2", 
        ";/;>;T;", 
        ">.>]>w>", 
        "?&?3?c?r?|?", 
        "021;1O1o1", 
        "5F5P5~5", 
        "5Y6A7k7)808", 
        ";#;:;S;j;", 
        "<*<8<G<b<y<", 
        "=-=:=]=j=", 
        ">&>->8>X>n>", 
        "303O3W3g3~3", 
        "=!>i>7?", 
        "243M3k3", 
        "4$404K4X4_4d4u4", 
        "5#5*505?5F5N5T5Z5c5i5n5t5z5", 
        "6@7F7K7V7s7", 
        ":f;x;~;", 
        "4$4*4C4I4O4U4]4a4e4i4m4q4u4y4}4", 
        "4e5i5m5q5u5y5}5", 
        "$0P0p0", 
        "3 3-3:3G3T3a3n3~3", 
        "4.4>4N4^4n4~4", 
        "5.5>5N5^5n5~5", 
        "6.6>6N6^6n6~6", 
        "7.7>7N7^7n7~7", 
        "8.8>8N8^8n8~8", 
        "9\"9\\9z9", 
        "0/0B0U0h0{0", 
        "5(5\u001f6i6", 
        "8$8-868?8H8Q8Z8c8l8u8~8", 
        "9!9+909U9h9x9", 
        ":(:8:H:X:h:x:", 
        ";(;8;H;X;h;x;", 
        "<(<8<H<X<h<x<", 
        "=(=8=H=X=h=x=", 
        ">(>8>H>X>h>x>", 
        "?(?8?H?o?", 
        "0\u001f0/0?0O0k0{0", 
        "1'1C1_1o1", 
        "2'272G2n2", 
        "4\u001f4/4?4O4_4o4", 
        "5\u001f5/5?5O5_5o5", 
        "6\u001f6/6?6O6_6o6", 
        "7+7;7K7[7k7{7", 
        "8+8;8K8[8k8{8", 
        "9'979G9W9g9w9", 
        ":':7:G:W:g:w:", 
        ";';7;D;Q;^;k;x;", 
        "<*<F<b<r<", 
        "=F=V=f=v=", 
        ">.>>>N>^>n>~>", 
        "?.?>?N?^?n?~?", 
        "0.0>0N0^0n0~0", 
        "1.1>1N1^1n1~1", 
        "2*2:2J2Z2j2z2", 
        "3*3:3J3W3d3q3~3", 
        "4#4-4=4M4]4m4}4", 
        "5)595I5Y5i5y5", 
        "6)696I6Y6u6", 
        "7!717A7Q7a7}7", 
        "8-8=8M8]8m8}8", 
        "9-9=9M9]9m9}9", 
        ":-:=:M:]:m:}:", 
        ";);9;I;Y;i;y;", 
        "<!<.<;<H<U<b<", 
        "=)=1=H=O=h=r=", 
        "=_>d>i>", 
        ">2?8?=?I?Z?`?v?|?", 
        "0\"070=0C0O0U0", 
        "5%5/595C5M5W5a5k5u5", 
        "6\"6)60676>6E6L6S6Z6a6h6o6v6}6", 
        "011@1g1~1", 
        "6!6<6%7", 
        "9\u001f9;9U9k9;:\\:=;Q;];w;", 
        "8=9b9v9", 
        "81O1]1z1", 
        "1-1B1V1a1i1p1x1", 
        "324`4}4", 
        "5%5o5y5", 
        "6\"6R6p6", 
        "9?:O:p:", 
        "<2<U<w<", 
        "=&=>=G=M=x=", 
        ":%;:<n<", 
        "8y9J:e:", 
        ">S?r?~?", 
        "4/5c5|5", 
        "333=3W3H4c4", 
        "647\\7~7", 
        ":#;/;I;[;", 
        "<O=E>s>", 
        "243\u001f4'4@4", 
        "<&<s<{<", 
        ">2?8?=?H?", 
        "0G1M1R1]1", 
        "171C1U1#2", 
        ";W<^<j<", 
        "0!1M1i1", 
        "1?2j2q2x2", 
        "464@4_4.5", 
        "9S:\\:';0;p;|;", 
        "3>3H3u3", 
        "636c6i8{8 <", 
        ">D>M>X>", 
        "1$121G1", 
        "5.696p6", 
        "98:b:~:", 
        ":$;1;7;", 
        "<1=d=q=", 
        "0:0A0F0", 
        "9)9<9O9p9", 
        ":!;5;I;", 
        "<+<?<S<", 
        "><?q?y?", 
        "C0l1s1S2Y2^2i2", 
        "2Q3W3\\3g3", 
        "6#7)7.797", 
        "8 :M:S:X:c:", 
        "3\"3H3k3", 
        "9#:5:J:u:", 
        ":\"<I<Z<", 
        "0(090T0", 
        "1g3r325F5[5o5x5", 
        "6*60656E6W6u6", 
        "<+<Z<k<{<", 
        "=3=A=S=a=", 
        "0\"0&0*0.02060:0>0B0F0J0N0R0V0Z0^0b0f0j0n0r0v0z0~0", 
        "3+313@3L3\u001f4", 
        "9:9K9\\9h9u9", 
        ";#<?<W<s<", 
        "8$8=8D8K8R8Y8`8g8n8u8|8", 
        "9$9+92999@9G9N9U9\\9c9j9|9", 
        ":1:8:?:V:`:", 
        ":c;p;};", 
        "<M<R<e<l<s<z<", 
        "= ='=.=5=<=f=k=~=", 
        ">\u001f>&>->4>;>B>I>P>W>^>}>", 
        ">T?\\?g?o?", 
        "E0M0X0m0r0", 
        "1\u001f1&1-141;1B1I1P1W1^1e1l1s1z1", 
        "2#2*212N2s2", 
        "4(4O4V4", 
        "4%565B5H5Q5b5", 
        "5;6L6X6^6g6x6", 
        "7?7P7\\7b7k7|7", 
        ":(:R:c:j:p:y:", 
        "<!<+<5<?<I<S<]<g<q<{<", 
        "=%=/=9=C=M=W=a=k=u=", 
        ">\u001f>)>3>=>G>Q>[>e>o>y>", 
        "?#?-?7?A?K?U?_?i?s?}?", 
        "0'010;0E0O0Y0c0m0w0", 
        "1!1+151?1I1S1]1g1q1{1", 
        "2%2/292C2M2W2a2k2u2", 
        "3\u001f3)333=3G3Q3[3e3o3y3", 
        "4#4-474A4K4U4_4i4s4}4", 
        "5'515;5E5O5Y5c5m5w5", 
        "6!6+656?6I6S6]6g6q6{6", 
        "7%7/797C7M7W7a7k7u7", 
        "8\u001f8)838=8G8Q8[8e8o8y8", 
        "9#9-979A9K9U9_9i9s9}9", 
        ":':1:;:E:O:Y:c:m:w:", 
        ";!;+;5;?;I;S;];g;q;{;", 
        "<%</<9<C<M<W<a<k<u<", 
        "=\u001f=)=3===G=Q=[=e=o=y=", 
        ">#>->7>A>K>U>_>i>s>}>", 
        "?\u001f?)?3?=?G?Q?[?e?o?y?", 
        "0#0-070A0K0U0_0i0s0z0", 
        "1\"1)10171>1[1", 
        "6;6M6R6]6b6m6r6", 
        "7\u001f7/797I7S7c7m7w7", 
        "8\"8)838:8D8K8U8\\8{8", 
        ":%:1:7:@:Q:j:", 
        ";/;];n;z;", 
        "<R<c<j<p<y<", 
        "=(=.=7=H=|=", 
        ">5>:>M>T>[>b>i>p>", 
        "0\"0,060@0J0T0^0h0r0|0", 
        "1$1+12191@1G1N1U1\\1c1j1q1x1", 
        "20272>2c2h2{2", 
        "5 535:5A5H5O5V5]5d5k5r5y5", 
        "6(6-6@6G6N6U6\\6c6j6q6x6", 
        "7'757]7", 
        "9%91979@9Q9_9", 
        "9\":3:::@:I:Z:h:", 
        ";!;';0;A;v;", 
        "<#<A<P<U<Z<e<m<z<", 
        "=4=B=Z=d=n=x=", 
        ">\">,>6>@>J>T>^>h>r>|>", 
        "?%?,?3?:?A?H?O?V?]?d?k?r?y?", 
        "N0_0k0q0z0", 
        "1$1+12191@1G1N1U1\\1c1j1q1", 
        "2\u001f2&2-242;2B2I2P2_2w2", 
        "3 3'3.353<3f3k3~3", 
        "4\u001f4&4-444;4B4I4P4W4^4e4l4s4", 
        "5!5(5/565=5D5K5R5Y5`5g5n5u5|5", 
        "6\u001f6$6)64696?6D6I6N6Y6^6d6i6n6s6~6", 
        "7\"7'7,777<7B7G7L7Q7\\7a7g7l7q7v7", 
        "9(9-939F9N9W9b9", 
        ":\":-:3:C:\\:", 
        ": ;v;|;", 
        "<:<@<F<L<R<Y<", 
        "<+=3=<=G=\\=b=z=", 
        ">'>,>9>H>]>c>r>", 
        ">V?`?e?", 
        "5P6`6r6", 
        "< <P<b<p<~<", 
        "=9>C>M>W>", 
        "0#131V1`1x1", 
        "4*4>4g4o4u4{4", 
        "5\u001f515=5J5_5l5", 
        "6+626>6L6R6f6", 
        "72787Z7`7{7", 
        "8\"878H8]8", 
        "9\u001f9'989@9Q9y9~9\\:b:n:t:z:", 
        ";(;6;E;U;u;z;", 
        "<'<-<6<<<V<\\<b<r<x<", 
        "=.=3=J=`=f=y=", 
        ">'>0>M>S>^>", 
        "?*?8?X?]?t?", 
        "0,030?0M0S0", 
        "1\"1(151<1H1V1e1r1{1", 
        "212:2?2P2V2p2v2", 
        "3!3'3\\3}3", 
        "4*404J4j4o4", 
        "5+505G5]5c5q5x5", 
        "6\"6B6G6^6t6z6", 
        "7*7I7i7n7", 
        "8\"888>8U8u8z8", 
        "8\u001f9$9;9N9T9`9i9n9}9", 
        ":':0:6:E:e:j:", 
        ";);/;Q;W;", 
        "<\"<U<[<u<{<", 
        "=0=6=B=i=o={=", 
        ">*>0>Y>d>n>w>}>", 
        "?,?6?H?R?d?n?", 
        "000>0I0d0z0", 
        "1!171L1", 
        "2\"2'2@2Z2~2", 
        "3\u001f3]3l3w3", 
        "4\"40464>4T4^4d4j4r4x4", 
        "455]5r5", 
        "::;A;H;O;V;];d;z;", 
        ";Q;[;e;|;", 
        "1!1%1)1-1115191=1A1E1I1M1Q1U1Y1]1a1e1i1m1q1u1y1}1", 
        "><?a?j?q?", 
        "3c3d4q4", 
        "4'5M5Z5", 
        "0\"0'0/070<0D0J0Z0h0{0", 
        "1 1)121;1F1N1V1^1f1r1}1", 
        "2 2(20282C2P2b3h3~3", 
        "3 41474G4M4", 
        "6!6-656=6M6S6l6r6", 
        "7&7>7D7h7n7~7", 
        "9\u001f9F9Q9b9z9", 
        ":(:>:[:z:", 
        ";?;E;Z;n;", 
        "<$<4<:<Z<s<y<", 
        "=7=R=|=", 
        ">)>1>P>V>i>o>", 
        ">R?[?h?", 
        "0C1I1}1", 
        "3P3Y3a3w3}3", 
        "484L4S4t4", 
        "4R5Y5s5", 
        ">V>b>m>", 
        "161O1u1", 
        "2 2(2q2~2", 
        "3+393B3R3s3~3", 
        "4<4d4i4z4", 
        "9+9B9i9", 
        ":#:E:s:", 
        ":);@;j;", 
        ";0<D<x<", 
        "?6?J?m?", 
        "0:1w1m2", 
        "3 303F3Z3o3", 
        "4'4@4X4l4|4", 
        "5/5=5K5Y5g5u5", 
        "6'676K6s6", 
        "7-848I8X8a8", 
        ";5;:;I;z;", 
        "=H=Z=w=", 
        "Z0l0|0", 
        "2'252;2A2G2S2\\2b2h2o2t2", 
        "4#4;4W4_4w4", 
        "585I5]5c5i5o5", 
        "7&7*71757=7V7", 
        "80868<8B8H8N8U8b8l8x8", 
        "9,9J9]9j9", 
        ":+:8:C:N:`:h:s:~:", 
        "; ;<;W;", 
        "=)=6=_=d=w=~=", 
        "> >,>2>;>L>~>", 
        "?)?U?f?r?x?", 
        "040E0Q0W0`0q0", 
        "1\"1)10171>1E1L1S1Z1a1h1o1v1}1", 
        "232D2P2V2_2y2~2", 
        "4\u001f484?4F4M4\\4e4k4~4", 
        "5%5>5E5L5S5Z5a5p5y5", 
        "6%646S6b6q6", 
        "6L7R7s7y7", 
        "8'8`8e8j8o8t8", 
        "989[9`9m9", 
        "9::?:D:I:N:S:_:z:", 
        "; <=<^<d<j<", 
        "= ='=.=5=<=C=J=Q=X=_=f=m=t={=", 
        ">\">)>0>7>>>E>L>S>Z>a>h>o>v>}>", 
        "?\"?)?0?7?>?E?b?g?q?{?", 
        "0%0/090C0M0W0a0k0u0", 
        "1\u001f1&1-141;1B1I1P1W1^1e1l1s1z1", 
        "2\u001f22292S2X2k2r2y2", 
        "31383?3F3M3T3[3b3i3p3w3~3", 
        "4!4(4/464=4D4K4R4Y4`4z4", 
        "52575J5Q5X5_5f5m5t5{5", 
        "6$6C6H6[6b6i6p6w6~6", 
        "7\u001f7&7-747;7B7_7d7w7~7", 
        "8 8'8.858<8C8J8Q8X8_8f8m8", 
        "9-949;9B9I9P9W9^9e9l9", 
        ":+:2:L:Q:d:k:r:y:", 
        "; ;';.;5;<;C;J;Q;X;_;f;m;t;{;", 
        "<#<*<1<N<S<f<m<", 
        "=#=*=1=8=?=F=M=T=[=b=i=p=w=~=", 
        ">6>U>_>i>s>}>", 
        "?'?1?;?E?O?Y?c?m?w?~?", 
        "0\u001f0&0-040;0B0I0c0h0{0", 
        "1*1/1B1I1c1h1{1", 
        "2#2*21282?2F2M2T2[2b2i2p2w2~2", 
        "3\u001f3&3-343;3B3I3P3W3^3e3l3s3z3", 
        "4 4:4?4R4Y4`4g4n4u4|4", 
        "5\u001f595>5Q5X5_5f5m5t5", 
        "6T6Y6l6s6z6", 
        "7!7(7/767=7D7K7R7Y7`7g7n7u7|7", 
        "8\u001f8&8-848;8B8I8P8W8^8e8l8s8z8", 
        "9\"9)90979>9E9L9S9Z9w9|9", 
        ":$:>:C:V:]:d:k:", 
        "; ;';.;5;<;C;J;Q;X;_;f;m;t;{;", 
        "< <*<4<><H<R<\\<f<p<z<", 
        "=$=.=8=B=L=V=`=j=t=~=", 
        ">(>2><>F>P>Z>d>n>x>", 
        "?\"?,?4?S?]?g?q?{?", 
        "0\"0)00070>0E0L0S0Z0a0h0o0v0}0", 
        "1\u001f1&1-141;1B1I1P1m1r1", 
        "2!2+252?2I2S2]2g2q2{2", 
        "3\u001f3&3-343;3B3I3P3W3^3e3l3s3z3", 
        "464;4N4U4\\4c4j4q4x4", 
        "5/565=5D5K5R5Y5`5g5n5u5|5", 
        "6%6/696C6M6W6a6k6u6", 
        "7\u001f7)70777>7E7L7S7Z7a7h7o7v7}7", 
        "8-848S8X8k8r8y8", 
        "9!9(9/969=9D9a9f9y9", 
        ":S:l:s:z:", 
        ";\";);0;7;>;E;L;S;Z;a;h;o;v;};", 
        "<1<8<?<F<^<w<~<", 
        "=$=)=<=C=", 
        "?$?+?2?9?@?G?N?U?\\?c?j?q?x?", 
        "080=0P0W0^0e0l0s0z0", 
        "1$1+1:1@1Q1V1i1p1w1~1", 
        "2\u001f2&2-242L2e2l2s2z2", 
        "3#3*31383?3F3M3g3l3", 
        "4\u001f4)434=4G4Q4[4e4o4y4", 
        "5#5-545;5B5I5P5W5^5e5l5s5z5", 
        "6%6*6=6D6K6R6Y6`6g6n6u6|6", 
        "7$7Z7_7r7y7", 
        "8!8(8/8I8N8a8h8o8v8", 
        "9\u001f9)939=9G9Q9[9e9o9y9", 
        ":\u001f:&:-:4:;:B:I:P:W:^:e:l:s:z:", 
        ";9;>;H;R;\\;f;p;z;", 
        "<$<.<8<B<L<V<`<j<t<~<", 
        "= ='=.=5=<=C=J=Q=X=_=f=m=t={=", 
        ">%>,>F>K>^>e>", 
        "4A4b4v4", 
        "5I6S6g6", 
        "7\u001f7)72787K7S7d7m7v7|7", 
        "8+838P8", 
        "9-959?9H9N9a9i9z9", 
        ":\u001f:(:.:A:I:S:\\:b:u:}:", 
        ">\u001f>'>1>:>@>S>[>e>n>t>", 
        "?!?*?0?C?K?U?^?d?w?", 
        "0\"0(0;0C0l0", 
        "1,141E1s1|1", 
        "2%262?2H2N2a2i2s2|2", 
        "3\u001f3(3.3A3I3S3\\3b3u3}3", 
        "41494J4S4\\4b4u4}4", 
        "565J5U5^5d5w5", 
        "6%6.646G6O6`6u6~6", 
        "7 717:7C7I7\\7d7", 
        "8$8*8=8E8O8X8^8q8y8", 
        ":+:3:=:F:L:_:g:x:", 
        ";7<@<G<P<V<i<q<{<", 
        "=!=4=F=", 
        "?)?1?;?D?J?]?e?o?x?~?", 
        "0\u001f020:0t0}0", 
        "1\u001f121:1D1M1S1f1n1x1", 
        "2#262>2H2Q2W2j2r2|2", 
        "6(646:6B6L6", 
        "7.7A7T7g7z7", 
        "<3<\\<y<", 
        "8%9A9j9", 
        "=!=J=}=", 
        "6!6=6`6", 
        "6&7K7w7", 
        "8A8]8j8", 
        "94:B:k:", 
        "5%5+545A5", 
        "6#6/656>6K6", 
        "6W7h7t7z7", 
        "<4<E<U<[<d<l<", 
        "=+=c=|=", 
        ">$>)>.>3>F>", 
        ">-?6?;?", 
        "0J1s1x1", 
        "2\u001f232Y2j2v2|2", 
        "2\"333?3E3N3_3", 
        "4U4Z4n4", 
        "4 5%595_5p5|5", 
        "7&71797", 
        "7%838>8F8", 
        "8>9F9Q9Y9", 
        "9.:6:A:I:", 
        ";Y;a;l;t;", 
        "<K<S<^<f<", 
        "<;=C=N=V=", 
        "=J>R>]>e>", 
        ">'?/?:?B?t?|?", 
        "0\"0M0U0`0h0", 
        "1@1H1S1[1", 
        "132;2F2N2", 
        "3#3.363l3t3", 
        "3,444?4G4w4", 
        "5#5+5^5f5q5y5", 
        "6!6Z6b6m6u6", 
        "7P7X7c7k7", 
        "828O8W8b8j8", 
        ":d;l;w;", 
        "=F=N=Y=a=", 
        ">0>7>>>E>L>S>Z>a>h>o>w>", 
        "?#?.?6?S?X?w?", 
        "1*1Q1^1", 
        "6 6)646S6b6q6", 
        ":/:5:M:S:l:r:", 
        ";C;c;n;z;", 
        "<$<@<]<r<", 
        "0!020d0i0}0", 
        "10161K1_1", 
        "3%303c3", 
        "5.565A5S5Z5a5h5o5v5}5", 
        "6%6/696C6M6W6a6k6u6", 
        "7\u001f7)737u7", 
        "9\u001f9-9D9^9", 
        ";I>U>s>", 
        "<\u001f<&<-<4<", 
        "093P3X3j3P4c4l4", 
        "6(6:6r6z6", 
        ":@:K:Q:Y:d:", 
        "; ;';-;3;I;S;Y;`;f;k;q;z;", 
        "< <'<0<Z<k<p<", 
        ">!>&>1>=>D>K>", 
        "2#2+212=2B2Z2", 
        "3$3(373<3S3", 
        "6$6-6;6C6L6U6^6f6k6\\;", 
        ":0R0o0", 
        "92:]:q:a;", 
        "=#=H=Y=a=i=", 
        ">*>>>U>o>", 
        "0)0/0O0`0f0}0", 
        "679V9n=", 
        "7J7Z7d7", 
        "9[9g9p9", 
        "9(:.:A:K:Z:c:E;P;W;k;", 
        "<,<R<k<q<x<", 
        "=!=2=;=C=K=S=Y=a=l=r=", 
        ">!>(>5>D>M>T>i>}>", 
        ">J?\\?c?r?", 
        "0.0R0\\0", 
        "1\"111?1H1R1Z1a1p1w1}1", 
        "3'3-3:3C3J3S3`3g3", 
        "4(4.4;4D4M4a4g4q4", 
        "5\"5(585?5\\5b5|5", 
        "6+646;6F6L6Y6b6k6", 
        "7\u001f767<7I7R7a7g7t7}7", 
        "8\"8+8c8i8z8", 
        "9%9:9@9I9O9\\9e9p9", 
        ":1:B:H:`:t:", 
        ";6;<;B;T;c;h;", 
        "<,<2<B<H<V<l<s<", 
        "k1r1y1", 
        "2:2F2R2a2~2", 
        "4A4H4h4v4", 
        "5%515B5`5", 
        "6'666R6o6z6", 
        "7'767K7w7", 
        "='=E=Z=`=", 
        ">->R>w>", 
        "?!?(?F?K?Q?p?u?", 
        "0,060J0X0b0v0|0", 
        "161;1@1q1v1|1", 
        "2-2B2K2", 
        "3%3/353=3]3j3p3x3", 
        "3,414T4i4", 
        "7+7A7H7\\7t7", 
        "8+8@8F8W8_8d8k8y8", 
        "9)9@9G9", 
        "94:K:P:", 
        ";\u001f;%;R;s;x;", 
        "<7<=<W<i<", 
        "=1=Q=V=", 
        "> >%>+>W>]>", 
        "?\u001f?7?=?B?c?l?w?", 
        "0!02080h0}0", 
        "1N1]1\"243=3", 
        "819@9J9V9b9", 
        "=1I1k3", 
        "5 5$5(5,50545", 
        "7D7V7\\7b7", 
        ";%<-<5<D<[<f<m<", 
        "4&444A4K4T4x4", 
        "6S<h<u<~<", 
        "=G=\\=i=r=", 
        ">&>,>0>6>C>Z>p>", 
        "?0?J?Z?t?", 
        "1!2&2C2^2", 
        "4!4(444:4Y4a4y4", 
        ":6;N;s;", 
        "<G<M<y<", 
        "?$?O?V?s?", 
        "50J0Q0a0", 
        "4>4]4[5", 
        ">+>0>7>E>", 
        "1=1H1n1t1", 
        "2$2*252<2P2", 
        "3?3I3S3", 
        "3?4E4N4`4y4", 
        "6(7V7b7", 
        ";!;(;1;", 
        ";[<O=_=j=|=(>U>Y>t>", 
        "808=8O8Y8c8i8o8}8", 
        "2\u001f3E3h3", 
        "9!9+919", 
        "<\u001f<(<@<F<P<V<", 
        "020<0F0", 
        "1*1=1I1Y1e1", 
        "1T2]2O3X3", 
        "4-515=5`5z5", 
        "=0>D>[>r>", 
        "V0k0z0", 
        "3!3%3)3-3135393=3A3E3I3M3Q3U3Y3]3a3e3i3m3q3u3y3}3", 
        "5!515<5", 
        "718:8O8Y8", 
        "8:9@9F9L9S9", 
        ":@:G:V:", 
        "=;=T=^=", 
        "=(>G>`>j>", 
        "?\u001f?)?D?a?{?", 
        "0$0.0I0d0", 
        "2#2-2:2B2P2V2", 
        "9\u001f9&9-949M9", 
        "9e:*;6;", 
        "97:@:l:", 
        "0\u001f080>0D0J0P0V0\\0b0h0", 
        "7!8A8Y8", 
        "9(9':d:", 
        "=$=T=`=", 
        ">#?E?V?", 
        "2$3/3}3", 
        "3(404v4~4", 
        "505O5y5", 
        "=b>j>v>", 
        "8 : ;a;", 
        "<+<H<o<", 
        "3<4m4z4", 
        "9=:R:{:", 
        ":\";3;g;v;|;", 
        "<8<T<h<", 
        "z0g2,4M5", 
        "7&7/7a7", 
        ">)>/>4>=>^>m>", 
        ">\u001f?^?w?", 
        "050!1.1U1j1", 
        "3&3-3D3*4:4", 
        "0@0V0]0", 
        ";3;=;M;R;c;", 
        "0m1g3z3", 
        "3#434[4n4", 
        ";>;G;x;", 
        "<\u001f<&<.<n=", 
        ">/>F>_>", 
        "0 0P0`0n0", 
        "454N4h4x4", 
        "6$6+6:6[6a6r6x6", 
        "8B8J8Z8b8", 
        "8)9/9D9J9f9w9}9", 
        "U0[0g0m0v0|0", 
        "0:2@2f2l2q2|2", 
        "3$3b3m3z3", 
        "6#6`6f6k6v6", 
        "768?8T8]8o8", 
        "9!919o9", 
        "9G:[;k;", 
        "<K<^<%=4=B=", 
        "?!?7?{?", 
        "0:1I1n1", 
        "4E5K5P5[5", 
        "5>6L6c6S8z8", 
        "<J=j=4>", 
        ";(;8;>;T;Z;c;", 
        "< <&<,<2<8<><D<J<P<V<\\<b<h<n<t<z<", 
        "1'10171U1", 
        ":+:6:C:M:V:k:v:", 
        ";%;.;C;N;a;", 
        "869X9n9", 
        ":4:J:`:v:", 
        ";&;<;R;h;~;", 
        "<.<D<Z<p<", 
        "= =6=L=b=x=", 
        ">(>>>T>j>", 
        "?0?F?\\?r?", 
        "0\"080N0d0z0", 
        "1+1>1Q1d1w1", 
        "3$4A4O4", 
        "4)5F5x5", 
        "0*1:1S1", 
        "2.2>2P2d2", 
        "3&4\u001f515z5", 
        "6 6,696K6", 
        "8.8N8[8", 
        "> ?=?K?", 
        "7H8^8h8t8", 
        ":F;Y;|;", 
        "5(565>5R5", 
        ";$;3;=;m;t;", 
        ">V?a?n?", 
        "<0d0D1", 
        "<I=s={=", 
        ">D?X?d?p?|?", 
        "22272>2", 
        "9H9d9K:p;i<", 
        "171'2z3", 
        ";'<)=^=", 
        "3m4s4x4", 
        "6%8.878@8", 
        ":.:A:T:", 
        "2 3A3\\3a3", 
        "5C5S5y5", 
        "5!636k6{6", 
        "697I7O7b7", 
        "8,8@8G8N8U8\\8c8j8q8x8", 
        "9%:+:0:<:M:U:n:t:", 
        ";\u001f<%<+<", 
        "I0g0x0", 
        "051@1Q1[1a1g1", 
        "363H3X3", 
        "375k5r5", 
        "6K6s6y6", 
        "6A7J7P7V7c7j7p7", 
        "4O4k4T5d5i5", 
        "4.5N5n5", 
        "5P6m6J7T7b7", 
        "8#808<8I8_8k8x8", 
        "5Y5a5i5", 
        ":#:8:T:", 
        "2$4I4V4", 
        "6P8V8v9", 
        ";@=D=H=L=P=T=X=\\=`=d=h=", 
        "8w9[:n:", 
        "9=:O:d:", 
        ":\u001f;k;(<?<", 
        "3^4n4x4", 
        "4@5P5q5^6", 
        "7?7F7T7[7", 
        "8.8F8W8^8p8", 
        "6\"6(6.646:6@6F6L6R6X6^6d6j6p6v6|6", 
        "7#818G8X8", 
        "<Q<X<}<", 
        "2\u001f2R2Z2", 
        "2'3/3l3t3", 
        "8-8_859", 
        "?F?U?f?", 
        "4#5+5a5i5", 
        "5f6u6}6", 
        "8<9D9i9", 
        "<D<`<j<", 
        "=(=X=r=", 
        "7[8e91:o:", 
        "<+<9<b<[=w=", 
        "3)4=4L4", 
        "5\u001f51575v5", 
        "787K7d7u7", 
        "94:S:f:v:", 
        ";4;I;Y;", 
        ";8<R<u<", 
        "<\"==>P>^>|>", 
        "9(9W9v9", 
        ";M<U<]<r<", 
        "<0=8=@=R>o>", 
        "4>4V4j4", 
        "=\u001f>C>g>}>", 
        " 0^0t0{0", 
        "0\"1)1^1", 
        "222[2n2", 
        "4+4D4{4", 
        ":-;<;_;r;J<u<", 
        "536<6E6", 
        "9*9]9t9", 
        "2!3-3O3", 
        "7&868r8", 
        ";(;?;m;", 
        ">#>5>Q>~>", 
        "051w1K2", 
        "5+6L6\\6", 
        "7\"8X8f8", 
        ":H:X:v:}:", 
        "<\u001f</<C<K<_<s<{<", 
        "=(=/=>=K=g=n=}=", 
        ">4>I>`>", 
        "?F?P?z?", 
        "0,060h0x0", 
        ";$;+;`;", 
        "1,1:1~1", 
        "5!646g6", 
        "1\u001f1-1E1", 
        "212E2w2", 
        "757K7a7h7", 
        "=\">/>C>p?", 
        ";\u001f<,<7<C<O<[<g<s<", 
        "=%=+=2===C=J=U=[=b=m=~=", 
        "=;>@>F>", 
        "0 1F1w1", 
        "1&2F2P2Y2n2y2", 
        "3s377Q8", 
        "8q9S:t:';", 
        ":7:G:&;\u001f<Q<", 
        "010A0U0l0", 
        "1'1`1s1", 
        "1:2N2q2", 
        "3C4=5G7u7", 
        "7:8V8d8H:`:", 
        "1m1b2i3w3", 
        "8Y9.;7;a;", 
        "111J2S4S6", 
        ":J;a;p;", 
        "4G4S4n4", 
        "6!777i7", 
        "?#?6?Y?l?", 
        "2i3E5[5y5", 
        "5i7y7&8", 
        ":L:B;i;/<", 
        "3!3*3G3", 
        "5N5z5b6", 
        ">V?]?i?", 
        "8d9x9%</<9<M<T<[<b<", 
        "2)2:2L2", 
        "8A9N9-;", 
        "<\u001f<I<P<a<l<", 
        "1&1-1N1W1", 
        "738L8Y8j8", 
        ">A?^?{?", 
        "5r7t8^9", 
        "= =&=,=2=8=>=E=I=M=Q=U=Y=]=a=e=i=m=q=u=y=}=", 
        "=!>?>~>", 
        "0.162B3", 
        "<\u001f=%=*=5=", 
        "\u001f1%1*151[1|1", 
        "4=4F4[4d4", 
        ";;<Q<}<", 
        "7\u001f7P;V;[;f;", 
        "<+<4<}<", 
        "=\"=>=q=", 
        "N1<2c2i2n2y2", 
        "5b5K6\\6x6", 
        "8!8\\8b8g8r8", 
        ":E:a:o:", 
        "<1<M<[<", 
        "060D0`0", 
        "202?2K2", 
        ";=;,<c<\u001f>6>O>c>", 
        "3?3]3v3", 
        "4D5r5o7i9", 
        "738R8m8", 
        "839F9Y9u9", 
        ";e<w<2=", 
        "?\u001f?X?a?", 
        "2D3]3r3", 
        "5.5o5i6y6", 
        ":`;m;|<", 
        "=/=G=N=f=", 
        ">3>W>`>n>", 
        "0'070L0", 
        "4-4Y4p4", 
        "Y2.3D3", 
        "5/6=6a6w6", 
        "7-8A8Y8z8", 
        ";/<<=N>W>", 
        "8&8-848;8", 
        ";G;\\;q;", 
        ";6<J<C>", 
        "1,1B1^1", 
        "2)2E2|293", 
        "3d4O5X5u5", 
        "5#6?6T6]6z6", 
        "969S9a9", 
        "=H>O>Y>`>", 
        "2(2M2q2", 
        "4\u001f4R4i4", 
        "=$=+=O=", 
        "1D1^1j1", 
        "2 2'2b2y2", 
        "3'3D3a3s3", 
        "6/6c6'7=7t7~7", 
        "8 8/8O8", 
        "=*=7=d=", 
        "=3>@>m>", 
        "5'6:6A6j647Q7g7", 
        "< =w=2>7>", 
        "80W1(2q2{2", 
        ":%;+;0;;;Y<_<d<o<", 
        "6(7D7p7|7", 
        "8p9H:l:", 
        "8;8$:=:y:", 
        "'0\\0T1m1", 
        "3Y4`4p4", 
        "8;8O8[8o8{8", 
        ":E;Q;v;", 
        "5$606x6", 
        "667N7;8F8", 
        "8c;i;n;y;", 
        "<@<F<K<V<", 
        "?(?8?K?[?n?", 
        "1;1t1y1 2i2", 
        "42585=5H5", 
        "91979<9G9", 
        ":,;n;t;y;", 
        "?9?H?~?", 
        ":,:Q:_:", 
        "0'1<1N1w1", 
        "99:K:M=a=", 
        "3:3S3c3u3", 
        "5!5W5}5", 
        "3j4G7U7", 
        "2*2=2P2", 
        "7?7[7z7L8", 
        "9 9>9U9", 
        ":C;b;%<", 
        "=*=1=8=?=F=M=T=[=b=i=p=", 
        ">,?k?~?", 
        "8*9B9P9m9", 
        "617:7i7p7", 
        ";&;>;T;s;", 
        ";A<X<j<", 
        "=\u001f=1=m=", 
        "3+3g354S495", 
        "6<7E7m7", 
        "1!2>2D2R2Z2", 
        "334M4s4y4", 
        "<%>D>U>k>", 
        ">9?g?z?", 
        "7(7[7t7", 
        "8':C:V:x:", 
        "=G=M=n=", 
        "4%585Q5t5", 
        "?9?f?o?", 
        "121N1j1", 
        ":>;E;)<", 
        "=X>l>s>", 
        "V0y0)1I1\\1", 
        "5!5%5)5-5155595=5A5E5I5M5Q5U5Y5", 
        "697M7t7", 
        "0'0?0E0N0", 
        "1\"1,161@1J1", 
        "=6=F=d=", 
        "2;2A2J2b2h2q2", 
        "2)30393J3Q3Z3d3", 
        "0D1N1b1k1", 
        "2%2.2M2W2k2t2", 
        "=:>A>F>", 
        "0<0f0{0", 
        "1\u001f2L2e2~2", 
        "6!627A7P7", 
        "4'4I4`4", 
        "5F5Q5{5", 
        "6@6G6P6a6h6q6{6", 
        "8*9C9\\9u9", 
        ":1:F:[:", 
        ":%;:;A;V;k;", 
        ";^;{;j<", 
        "=C=Z=q=x=", 
        "S0X0s0z0", 
        "2\u001f2[3y3", 
        "4%5:5b5", 
        "7?8F8V8]8}8", 
        "9W:^:|:", 
        ">|><?\\?", 
        "2070<0A0", 
        ":7:<:k:p:", 
        ";6;<;A;L;", 
        ">o>u>z>", 
        "?(?<?A?M?U?e?r?", 
        "565G5U5", 
        "6)6:6]6e6k6u6{6", 
        "9 949;:?:C:G:K:O:S:W:[:_:c:g:k:o:s:w:{:", 
        ">\">&>*>.>2>6>:>>>B>F>J>N>R>V>", 
        "u1a2s2", 
        "667F7Y7i7|7", 
        ";&;g;n;", 
        "<\u001f<(<s>", 
        "?#?;?W?]?b?m?", 
        "X1^1c1n1", 
        "2$2@2W2g2", 
        "273T3q3", 
        "6\u001f7+7f7", 
        ":O;[<k<", 
        ">0?Z?j?", 
        "182V2h2", 
        "9F9l9t9", 
        ";3;<;J;", 
        "1J233r7", 
        "3\"4,4>4G4", 
        "6[6e6y6", 
        "4M5V5h5q5", 
        "7N8(9<9", 
        "91:v:|:", 
        "6S7W7[7_7c7g7k7o7s7w7{7", 
        "?:?@?P?m?", 
        "0=0F0c0", 
        "2T4^4j4", 
        "9A:a:I;i;", 
        "X0`0j0", 
        "6+7J7S7I;d;k;", 
        "<U<i<}<", 
        "9m:y:?=", 
        "9\u001f9,9H9I;!?&?,?2?8?>?D?J?P?V?\\?b?h?n?t?z?", 
        "0\"0E0P0", 
        "7$7-7;7V7>8", 
        "1-1@1O1c1", 
        "6\\7s8n:", 
        "525;5R5\\5", 
        "616:6Q6[6m6v6", 
        "7/787O7Y7k7t7(818W8`8", 
        "9:9D9V9_9q9z9", 
        ";*;5;G;P;P=Y=", 
        ">->6>U>^>", 
        "?2?;?\\?f?x?", 
        "0#050>0P0Y0k0t0", 
        "6P8;;B;", 
        "5/53575;5?5C5G5K5O5S5W5[5_5c5g5k5o5s5w5{5", 
        "6\u001f6#6'6+6/6", 
        ":1S1i1", 
        "2>2:4C4", 
        "5%5U5_5p5", 
        "6H7\\7j8", 
        "<,=O=g=y=", 
        "2#3*3g3", 
        "3K4a455", 
        ":Y;a;v;~;", 
        ";#<*<A<H<", 
        "2^2+3?3S3g3{3", 
        "7);G;l;", 
        "=\u001f=#='=+=/=3=7=;=?=C=G=K=O=S=W=[=_=c=g=k=o=s=w={=", 
        ":\":5:K:R:_:", 
        ";<;H;p;w;L<_<o<", 
        "=!=9=I=^=y=", 
        ">\u001f?0?@?^?r?", 
        "0*030L0~0", 
        "2\"262H2`2m2", 
        "3,3F3^3x3", 
        "4(454S4a4o4{4", 
        "6G6h6y6", 
        "6:7I7V7", 
        ";);9;F;V;d;r;", 
        "=(=4=r=", 
        ">*>D>K>p>", 
        "G0U0u0", 
        "2%2B2P2`2t2", 
        "303F3P3d3s3", 
        "4 5*565B5U5{5", 
        "7\u001f:&:)=5=;=", 
        "9\u001f9#9'9+9/93979;9?9C9G9K9O9S9W9[9_9c9g9k9o9s9w9{9", 
        ":#;5;;;J;Q;\\;x;", 
        "<5<D<[<", 
        "=0=8=>=W=g=", 
        ";$;<;X;y;", 
        "1.1[1k1O2]2", 
        "4C4$6O6", 
        "8:9V9z9", 
        "9,:::~:", 
        ":U;^;e;", 
        "5\u001f6b6j6v6", 
        "9\u001f:7:K:", 
        ":b=h=r=|=", 
        "2 2W2^2s2", 
        "3C3N3X3", 
        "6R7_7f7u7", 
        "<0<e<;=", 
        "<L>[>1?", 
        "283R3a3", 
        "5a5i5v5", 
        "9(:;:H:U:b:", 
        ":%;j;};", 
        "0q1I3`4x445g5z5", 
        "8\u001f8#8'8+8/83878;8?8C8G8K8O8S8W8[8_8c8g8k8o8s8w8{8", 
        "<D<i<t<", 
        "?1?9?e?l?", 
        "2a3*494^4", 
        "7\u001f7C7]7j7w7", 
        "9P9]9j9", 
        "1H2j2p2", 
        "7+787W7v7", 
        "878D8Q8", 
        ">d>k>/?=?D?", 
        "0t1;2m2$4e4j4p4}4", 
        "8+888E8b8o8", 
        ";,;B;X;", 
        "<>=h=,>Q>a>l>", 
        "7K8P8c8j8", 
        "9!9;9@9S9Z9a9h9", 
        ": :*:4:>:H:R:\\:f:p:z:", 
        ";$;.;8;B;L;V;`;j;t;~;", 
        "<(<2<<<F<P<Z<d<n<x<", 
        "=\"=,=6=@=J=T=^=h=r=|=", 
        ">&>0>:>D>N>X>b>l>v>", 
        "? ?*?4?>?H?R?\\?f?p?z?", 
        "0$0.080B0L0V0`0j0t0~0", 
        "1(121<1F1P1Z1d1n1x1", 
        "2\"2,262@2J2T2^2h2r2|2", 
        "3&303:3D3N3X3b3l3v3", 
        "4 4*444>4H4R4\\4f4p4z4", 
        "5$5.585B5L5V5`5j5t5~5", 
        "6(626<6F6P6Z6d6n6x6", 
        "7$7+72797@7G7N7U7\\7c7j7q7x7", 
        "8!8(8/868=8D8a8f8y8", 
        "9!9(9/969=9D9^9c9v9}9", 
        ":6:;:N:U:\\:c:j:q:x:", 
        "; ;';.;5;<;C;J;Q;X;_;|;", 
        "<4<9<L<S<Z<a<h<o<v<}<", 
        "=\"=)=0=7=>=E=L=S=Z=a=h=o=v=}=", 
        ">.>5><>C>]>b>u>|>", 
        "?0?5?H?O?V?]?d?k?r?y?", 
        "0\"0<0A0T0[0b0i0p0w0", 
        "1 1'1.151<1S1", 
        "22282`2i2o2", 
        "3L4j4p4", 
        "5(5.5E5K5g5", 
        "6\u001f6'6F6", 
        "767N7T7", 
        "8+818V8q8w8", 
        "999T9Z9y9", 
        "9&:Z:|:", 
        ":$;F;O;k;", 
        "<#<9<U<^<t<", 
        ">#>+>9>?>^>u>~>", 
        "?\u001f?:?U?[?q?", 
        "60T0]0c0v0~0", 
        "1%1.141G1O1Y1b1h1{1", 
        "2$2*2=2E2S2Y2", 
        "3'3/393B3H3[3c3m3v3|3", 
        "4+434A4G4f4}4", 
        "5\"5@5F5W5q5w5", 
        "6g7`8k8v8", 
        "8\"9W9~9", 
        "=6=M=\\=k=", 
        "0B1S1m1v1", 
        "242A2L2Y2s2", 
        "3\"333A3u3", 
        "4\"4)4E4S4m4", 
        "5$595B5L5Z5x5", 
        "6!6-686A6Y6q6", 
        "7)7<7O7b7u7", 
        "7/8=8M8f8", 
        "99:J:Q:W:`:q:", 
        "<!<*<:<k<p<", 
        "=?=P=W=]=f=w=", 
        ">!>'>0>t>", 
        "?%?+?4?E?m?", 
        "0!0-030<0M0|0", 
        "1%1h1y1", 
        "2L2]2i2o2x2", 
        "3!313\\3", 
        "494?4L4S4Y4|4", 
        "5.575D5P5}5", 
        "6+62686A6R6", 
        "7%7[7c7n7v7", 
        "8e8m8x8", 
        "849E9Q9W9`9q9", 
        "9;:L:X:^:g:t:", 
        ":];n;z;", 
        "<]<n<z<", 
        "=9>Q>]>", 
        "4+4>4Q4d4w4~4", 
        "7W7h7t7z7", 
        "8'8-868G8l8", 
        "9!9-939<9M9r9", 
        ":!:2:>:D:M:^:", 
        ";/;;;A;J;[;o;", 
        "<'<><_<p<|<", 
        "=A=H=i=z=", 
        ">#><>T>u>", 
        ">\\?m?y?", 
        "70H0O0U0^0o0", 
        "0?1P1\\1b1k1|1", 
        "1#242;2A2J2[2w2", 
        "3B3S3_3e3n3", 
        "5Z5k5w5}5", 
        "7\"7.747=7N7", 
        "8\"8(818B8q8", 
        "9I9Z9f9l9u9", 
        "9!:2:>:D:M:^:", 
        ":);J;[;g;m;v;", 
        "<$<-<><b<", 
        "=&>G>X>d>j>s>", 
        "1.1:1@1I1s1", 
        "354F4M4S4\\4m4", 
        "5D5U5a5g5p5", 
        "6?7[7l7x7~7", 
        "9':8:D:J:S:d:y:", 
        ";<;a;r;y;", 
        "<W<h<t<z<", 
        "=Z=k=w=}=", 
        "?'?-?6?G?", 
        "\u001f000<0B0K0j0", 
        "1-141:1C1T1|1", 
        "2%3Q3b3n3t3}3", 
        "4F4Y4p4", 
        "545\\5m5t5z5", 
        "5)6:6F6L6U6f6", 
        "7(747:7C7T7z7", 
        ";%;6;m;", 
        "<@<Q<]<c<l<}<", 
        ">7>H>O>U>^>o>", 
        "1/1@1G1M1V1g1", 
        "2?2P2W2]2f2w2", 
        "223C3O3U3^3o3", 
        "4\"4=4N4U4[4d4u4", 
        "4)5Z5k5r5x5", 
        "506A6M6S6\\6m6", 
        "6 7E7V7]7c7l7}7", 
        "8(898E8K8T8e8", 
        "8,9N9_9k9q9z9", 
        ":6:G:S:Y:b:s:", 
        ";/;;;A;J;[;", 
        "<-<9<?<H<Y<", 
        "=3>D>P>V>_>p>", 
        "0D0U0\\0b0k0|0", 
        "1 1)1:1Y1v1", 
        "142E2Q2W2`2q2", 
        "3!323S3", 
        "5\u001f606<6B6K6\\6", 
        "7-8>8J8P8Y8j8", 
        "9 9)9:9i9", 
        ":(:4:::C:T:", 
        "< =M=^=j=p=y=", 
        "=&>S>d>k>q>z>", 
        "?\"?(?1?B?x?", 
        "&070>0D0M0^0{0", 
        "2(242:2C2T2", 
        "5#5/555>5O5", 
        "7#7O7h7", 
        "9$:K:\\:c:i:r:", 
        ":-;>;J;P;Y;j;", 
        ";;<L<X<^<g<x<", 
        "= =j={=", 
        ">#>4>~>", 
        ">e?v?}?", 
        "2*2E2o2", 
        "3.3:3@3I3Z3x3", 
        "3 414=4C4L4Y4m4", 
        "6S6d6p6v6", 
        "6-7>7J7P7Y7j7", 
        "8\u001f8(898N8", 
        ";+;i<z<", 
        "<%=6=B=H=Q=", 
        "%060B0H0Q0b0", 
        "1#1U1q1", 
        "3#484V4", 
        "4a5r5~5", 
        "6\"636?6E6N6_6", 
        "757F7M7S7\\7m7", 
        "8#848@8F8O8`8", 
        "889K9s9", 
        ";+;7;=;F;W;", 
        "<$<0<<<L<l<", 
        "='=j=z=", 
        ">\u001f>(>9>M>v>", 
        "?!?E?f?w?", 
        "1(1;1M1[1}1", 
        "2E2V2]2c2l2", 
        "7=7\\7x7", 
        "7V8g8s8y8", 
        "8h9p9z9", 
        ":,:?:I:", 
        "=\"='===h=m=r=", 
        "?\"?+?<?p?", 
        "0H0Y0`0f0o0", 
        "181I1P1V1_1p1", 
        "1-2>2E2K2T2l2u2", 
        "5Q6b6n6t6}6", 
        "7&777s7", 
        "8-898?8H8Y8", 
        "8.9?9K9Q9Z9~9", 
        ";7;>;Y;`;", 
        "?6?G?S?Y?b?s?", 
        "5%666B6H6Q6b6}6", 
        "6V7c7w7", 
        "7 8C8T8[8a8j8{8", 
        "9:9\\9m9t9z9", 
        ":*:`:q:}:", 
        ";';K;w;", 
        "<)<5<;<D<U<c<z<", 
        "<3=D=K=Q=Z=k=u=", 
        "0$0-0`0j0", 
        "1\"191m1~1", 
        "3 3,323;3L3", 
        "4#4*40494Q4Z4f4r4~4", 
        "5,53595B5S5", 
        "6:7K7R7X7a7r7", 
        "9'9-969C9e9", 
        ":':8:S:", 
        "</<;<A<J<[<", 
        "<0=A=M=S=\\=m=", 
        "=B>S>_>e>n>", 
        "?T?e?q?w?", 
        "3+373\\3", 
        "4=4r4{4", 
        "5\"555F5s5", 
        "8&8,868A8W8i8z8", 
        "9#9)919O9U9e9z9", 
        ";-<2<]<}<", 
        "=)=K=P=r=w=", 
        ">5>:>\\>", 
        "2;2C2S2e2s2", 
        "2O4_4g4t4", 
        "4$5\\5v5}5", 
        "60767>7N7U7e7y7", 
        "8(848J8X8a8k8r8z8", 
        "8):E:X:k:~:", 
        "=->=>R>f>l>r>x>~>", 
        "0 0/040;0@0E0N0_0i0", 
        "0\u001f151;1M1", 
        "2 2J2`2f2w2", 
        "4*5H5r5", 
        "606F6L6e6", 
        "7/8M8w8", 
        "9>9T9Z9", 
        "9&:;:A:", 
        ";);/;J;", 
        "=/=5=T=", 
        ">/?M?w?", 
        "00N0x0", 
        "151K1Q1m1", 
        "5#515y5", 
        "7$7Y7j7r7z7", 
        "7$8B8l8", 
        "8(9>9D9T9", 
        "6 6&6S6i6", 
        ":*:S:h:n:", 
        "<,<6<K<", 
        "= >4>M>S>", 
        "7,7C7i7|7", 
        "809K9g9l9}9", 
        ";@<O<_<", 
        ";';7;B;H;Q;Z;`;o;u;{;", 
        ">!>0>t>", 
        ">\"?,?6?S?l?", 
        "2^2f2x2", 
        "393W3g3t3", 
        "4-4A4J4T4", 
        "6%6+6<6P6[6a6g6m6s6y6", 
        "8<9v:{:", 
        "|2\u001f;/;6;F;M;];", 
        "<1<=<B<L<R<o<", 
        "8!8,8<8J8", 
        "6a7f7k7", 
        "8 858:8M8]8m8", 
        "9&949>9i9p9", 
        ":R;d;w;", 
        ">+>P>Y>m>", 
        "2#3W3t3", 
        "4090G0L0i0,4", 
        "?*?:?J?", 
        "8\u001f8#8'8+8/83878;8?8", 
        "9\"9&9*9.92969:9>9B9P9", 
        "<#<,<L<", 
        "3r4/5<5I5x5", 
        "C1I1N1S1X1c1i1o1u1z1", 
        "2 2&2,21272<2A2F2Q2W2]2c2h2n2s2x2}2", 
        "3\u001f3$3)343:3?3E3J3O3T3_3e3k3p3v3{3", 
        "4\"4'4,414<4B4H4N4Z4c4p4", 
        "6)6:6c6j7", 
        "8(868D8R8`8n8|8", 
        "9'949?9L9Z9h9v9", 
        ":&:3:B:G:M:b:p:}:", 
        ";!;.;;;H;U;b;o;|;", 
        "<#<0<=<J<U<b<o<|<", 
        "=/===J=W=f=k=q=", 
        ">*>/>5>J>X>f>t>", 
        "?+?8?E?R?_?l?y?", 
        "0+080E0R0_0l0y0", 
        "1%121?1D1O1\\1i1v1", 
        "2,2:2G2T2a2n2{2", 
        "3\u001f3-3:3G3V3[3a3v3", 
        "4'444A4N4]4b4h4}4", 
        "5#515@5E5K5`5n5{5", 
        "6\u001f6-6<6A6G6\\6j6w6", 
        "7)797>7D7k7y7", 
        "8$898G8U8b8o8|8", 
        "9*979D9Q9^9k9x9", 
        ":#:0:=:J:W:d:q:~:", 
        ";\u001f;,;9;F;S;`;m;z;", 
        "<(<5<B<O<\\<i<x<}<", 
        "=(=5=2>?>L>Y>f>s>", 
        "?)?6?C?P?^?k?x?", 
        "0!0.0;0H0W0\\0b0w0", 
        "1 1-1:1G1T1a1n1{1", 
        "2$212>2K2X2e2r2", 
        "3&363C3P3]3j3w3", 
        "4 4-4:4G4T4a4n4{4", 
        "5+585B5H5N5T5Z5`5f5l5r5x5~5", 
        "6 6&6,62686>6D6J6P6V6\\6b6h6n6t6z6", 
        "7l7s7E8m8", 
        "8\"9/9>9D9", 
        ":$:-:3:<:D:k:t:}:", 
        ">@?o?|?", 
        "1\u001f1;1D1Q1W1d1", 
        "2K2T2a2h2n2u2", 
        "4$41484?4E4L4R4b4j4", 
        "5+5:5Q5[5|5", 
        "7\u001f7&7y7", 
        "7P8T8X8\\8a8k8", 
        "9A9K9l9", 
        ";2;;;H;W;^;d;k;q;", 
        "<!<+<L<b<k<t<z<", 
        "=-=B=O=^=d=", 
        "?(?.?8?>?H?N?X?^?h?n?x?~?", 
        "0(0.080>0H0N0X0]0", 
        "1(131=1H1R1]1g1r1|1", 
        "2$2/292D2N2Y2c2n2x2", 
        "3$3<3H3Z3g3v3", 
        "6!6&656:6I6N6]6b6", 
        "7)72797?7F7", 
        "8 8/8K8R8X8a8r8x8", 
        "9 9&9.93999@9E9J9S9X9^9f9k9q9x9}9", 
        ": :%:*:3:8:>:F:K:Q:X:]:b:k:p:v:~:", 
        ";&;I;Z;g;r;", 
        "< <%<*</<4<9<><C<H<M<R<W<\\<a<f<k<p<u<z<", 
        "<,=2=B=^=", 
        ">&?,?2?8?>?D?J?P?V?o?", 
        "0$0*00060<0B0H0N0T0Z0`0f0l0r0x0~0", 
        "1 1&1,12181>1D1J1P1V1\\1b1h1n1t1z1", 
        "2&2/242H2T2e2", 
        "2'3o3z3", 
        "4\"4-494>4N4S4Y4_4u4|4", 
        "5^5c5q5v5", 
        "727M7h7", 
        ":%:H:k:", 
        "=(=K=n=", 
        "0&0I0l0", 
        "232V2y2", 
        "7$7?7b7}7", 
        "8\u001f8:8U8p8", 
        "9-9H9c9", 
        ":(:C:^:y:", 
        ";6;Q;t;", 
        "<1<L<g<", 
        ">6>Q>l>", 
        "171Z1}1", 
        "3,3G3z3", 
        "3)4L4o4", 
        "555X5{5", 
        "7%7H7c7m7", 
        ">6>Y>|>", 
        "\u001f0J0z0", 
        "1!2<2W2r2", 
        "4'4J4m4", 
        "6(6C6f6", 
        ":):N:q:", 
        ";';L;q;", 
        "151[1~1", 
        "2(3K3|3", 
        ";\u001f;-;C;Q;g;u;", 
        "1 2C2f2", 
        "6#6F6q6", 
        "8'8J8o8", 
        "9-9P9s9", 
        ":%;L;o;", 
        "000[0~0", 
        "4,4O4r4", 
        "666Y6|6", 
        "7#8L819", 
        "4#4F4P4}4", 
        "5/6T6e6{6", 
        "<\u001f=J=z=", 
        " 0S0z0", 
        "3(3K3n3", 
        "464Y4|4", 
        "696T6o6", 
        "7,7G7b7}7", 
        "8'858K8Y8o8", 
        "9&9I9l9", 
        ":>:Y:t:", 
        "?+?5?H?t?", 
        "<)<W<z<", 
        "=+=N=w=", 
        "414V4{4", 
        ":$:G:l:", 
        "333V3q3", 
        "484[4v4", 
        "505K5f5", 
        "484[4~4", 
        "1;1I1_1", 
        "1$2M2p2", 
        "5U6x6,7", 
        "7 8K8n8", 
        "9'9R9m9", 
        "9+:N:{:", 
        "2(2[2~2", 
        "3$3G3t3", 
        "3 4C4v4", 
        "5(6K6q6", 
        "6.7Q7t7", 
        ":&;Q;t;", 
        ";&<I<|<", 
        "050X0~0", 
        "1$2I2n2", 
        "!0<0W0", 
        "8-8P8s8", 
        "< =C=t=", 
        "2,2O2r2", 
        "3\u001f4E4u4", 
        "566Y6~6", 
        "7/7R7u7", 
        "=#=N=s=", 
        "9=:b:}:", 
        ";=;`;{;", 
        "0,0O0r0", 
        "171R1u1", 
        "3/3R3u3", 
        "545W5|5", 
        "666Y6|6", 
        ":#:F:i:", 
        ";(;K;n;", 
        "=.=Q=t=", 
        "060Y0|0", 
        "555P5s5", 
        "6-6H6k6", 
        "7(7C7^7", 
        ":5:X:{:", 
        ";';J;m;", 
        "171Z1}1", 
        "2&3Q3|3", 
        "8(8S8~8", 
        "=%=H=k=", 
        "5\u001f5:5]5", 
        ";!<N<q<", 
        ">5>X>{>", 
        "?*?M?p?", 
        "0'0J0m0", 
        "212T2o2", 
        "464Y4|4", 
        "5&5K5x5", 
        "6$6.6:6D6i6", 
        "7 7*7.74787F7P7V7`7d7j7n7z7", 
        "8*848:8>8J8X8b8h8l8x8", 
        "9 9$909>9H9N9R9^9l9v9|9", 
        ":\":(:2:6:<:@:N:X:^:h:l:r:v:", 
        "; ;,;8;D;P;\\;h;t;", 
        "<&<3<=<I<N<S<X<]<b<h<r<", 
        "=\"=,=2=<=@=F=J=V=`=l=v=", 
        ">\">,>2>6>D>N>T>X>f>p>v>z>", 
        "? ?$?2?<?B?F?T?^?d?h?v?", 
        "0 0*00040@0K0R0]0h0l0q0}0", 
        "1!1%1*161:1?1K1O1T1`1d1i1u1y1~1", 
        "2\"2-272B2F2K2U2a2k2u2", 
        "3\"3&3+363:3?3J3N3S3]3h3o3z3", 
        "4!4,40454@4D4I4T4X4]4h4l4q4|4", 
        "4(4,4H4d4", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "6L7P7T7X7", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        ";,<0<4<8<", 
        "`>d>h>l>p>t>x>|>", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "d0h0l0p0t0x0|0", 
        "1 1d1l1", 
        "4@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "5L6P6T6", 
        "7p8t8x8|8", 
        "9 9$9(9,9094989<9\\9`9d9h9l9p9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:", 
        ",5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<", 
        "= =@=D=H=P=T=X=\\=`=d=h=l=p=t=x=|=", 
        "=D>H>L>P>T>X>\\>`>d>h>l>p>t>", 
        "5P7T7X7\\7`7d7", 
        "8 8$8(8", 
        ":$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:", 
        "; ;x;|;", 
        "p0t0x0|0", 
        "1 1(1,14181@1D1L1P1X1`1h1p1", 
        "= =$=(=,=", 
        "3<3@3D3H3L3P3T3X3\\3`3", 
        "3(4,4044484<4@4D4H4L4P4T4X4\\4d5h5l5p5t5", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7", 
        ";,;L;l;x;|;", 
        "< <,<8<<<L<X<l<x<", 
        "=,=L=l=", 
        ">,>8><>L>X>\\>`>l>x>|>", 
        "?,?L?X?", 
        "H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6h6l6p6t6x6|6", 
        "7 7$7(7", 
        "; ;$;(;,;", 
        "<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        "= =$=(=,=0=4=8=<=", 
        "=<>@>D>H>L>P>T>X>\\>`>d>h>", 
        "1 1$1(1,1014181<1\\1`1d1h1l1p1", 
        "5l5p5t5x5|5", 
        "5H6L6P6T6X6\\6`6d6h6l6p6t6x6", 
        "6`7d7h7", 
        "7$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9D9H9L9", 
        "p:t:x:|:D;H;,<0<4<", 
        "(3,3034383l3p3t3x3|3", 
        "4(<,<0<4<8<<<@<D<H<L<", 
        "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=", 
        "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>", 
        "4P4T4X4\\4t4x4", 
        "6 6,60646", 
        "7 7$7(7,7074787", 
        "9 9$9(9,9094989l9p9t9x9|9", 
        ": :$:(:,:0:4:8:", 
        ": ;$;(;,;0;4;8;<;@;D;H;L;P;T;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<", 
        "H7L7P7T7X7\\7`7", 
        "4787<7@7D7H7", 
        "3(383H3X3h3x3", 
        "4(484H4X4h4x4", 
        "5(585H5X5h5x5", 
        "6(686H6X6h6x6", 
        "7(787H7X7h7x7", 
        "70:4:8:<:@:D:H:(=`=d=h=l=p=t=x=|=", 
        ">X>\\>`>d>h>l>p>t>x>|>", 
        "7X8\\8`8d8h8l8p8t8x8|8", 
        "5 5$5(5\\6`6d6", 
        "7t7x7|7", 
        "4T6X6\\6`6d6h6l6p6t6", 
        "687<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7t;x;|;", 
        "0484@4", 
        "7$7,747<7D7L7T7\\7d7l7t7|7", 
        "8$8,848<8D8L8T8\\8d8l8t8|8", 
        "9$9,949<9D9L9T9\\9d9l9t9|9", 
        ":$:,:4:<:D:L:T:\\:d:l:t:|:", 
        ";$;,;4;<;D;L;T;\\;d;l;t;|;", 
        "<$<,<4<<<D<L<T<\\<d<l<t<|<", 
        "=$=,=4=<=D=L=T=\\=d=l=t=|=", 
        ">$>,>4><>D>L>T>\\>d>l>t>|>", 
        "?$?,?4?<?D?L?T?\\?d?l?t?|?", 
        "0$0,040<0D0L0T0\\0d0l0t0|0", 
        "1$1,141<1D1L1T1\\1d1l1t1|1", 
        "2$2,242<2D2L2T2\\2d2l2t2|2", 
        "=$=,=4=<=D=L=T=\\=d=l=t=|=", 
        ">$>,>4><>D>L>T>\\>d>l>t>|>", 
        "?$?,?4?<?D?L?T?\\?d?l?t?|?", 
        "0$0,040<0D0L0T0\\0d0l0t0|0", 
        "1$1,141<1D1L1T1\\1d1l1t1|1", 
        "8 8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8x8|8", 
        "9 9$9(9,9094989<9", 
        "<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<t<x<|<", 
        "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=", 
        "T1\\1h1p1x1", 
        "2 2(20282@2H2P2X2`2h2p2x2", 
        "2p4t4x4|4", 
        "D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        "= =$=(=,=0=4=8=", 
        "> >$>(>,>0>4>8><>@>T>X>\\>`>d>h>l>p>t>x>|>", 
        ">H?L?P?T?X?l?p?t?x?|?", 
        "0 0$0p6t6x6|6", 
        "; ;$;(;,;", 
        "<X=\\=`=d=h=", 
        "?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "<4=<=D=L=T=\\=", 
        ">(>,>0>4>8>", 
        "? ?$?,?0?4?8?<?@?D?H?L?p?", 
        "P0T0X0\\0`0d0h0p0t0", 
        "1 1$1(10141P1T1X1\\1`1d1h1p1t1|1", 
        "< =$=4=8=<=D=\\=`=x=", 
        ">(>,>0>8>P>T>l>|>", 
        "? ?$?,?D?T?X?h?l?p?t?x?|?", 
        "0 0$0,0D0T0X0h0l0p0t0x0", 
        "1 1(1@1P1T1d1h1l1p1t1x1|1", 
        "2$2(2,2024282<2@2H2`2p2t2", 
        "3 30343<3T3d3h3x3|3", 
        "4 4$4(4,444L4P4h4l4", 
        "5 5$5,5D5T5X5h5l5p5t5x5", 
        "6 6(6@6P6T6d6h6l6p6t6|6", 
        "7$7<7L7P7`7d7h7l7p7x7", 
        "8 888H8L8\\8`8d8h8l8t8", 
        "9 9(9@9P9T9d9h9l9p9t9x9|9", 
        ": :$:,:D:T:X:h:l:p:x:", 
        "; ;0;4;D;H;P;h;x;|;", 
        "< <$<(<0<H<X<\\<l<p<x<", 
        "=,=0=H=X=\\=`=t=x=", 
        ">$>(>,>0>8>P>`>d>t>x>|>", 
        "? ?8?H?L?\\?`?d?h?l?t?", 
        "0,000H0X0\\0l0p0t0x0|0", 
        "1,1<1@1T1X1h1l1p1t1|1", 
        "2 282H2L2\\2`2d2h2l2t2", 
        "3,3<3@3P3T3X3\\3d3|3", 
        "4$44484H4L4P4T4\\4t4", 
        "5$5(5,545L5P5h5x5|5", 
        "6$64686H6L6\\6`6d6l6", 
        "7 70747D7H7L7P7T7X7\\7d7|7", 
        "8 80848D8H8L8P8T8\\8t8x8", 
        "9,909H9X9\\9p9t9", 
        ":(:,:4:L:\\:`:p:t:x:|:", 
        "; ;$;,;D;T;X;h;l;p;t;x;|;", 
        "< <$<,<D<T<X<h<l<p<t<x<", 
        "=4=D=H=X=\\=`=h=", 
        ">(>8><>L>P>T>X>\\>d>|>", 
        "?(?8?<?L?P?T?X?\\?d?|?", 
        "0(0,0<0@0D0H0P0h0l0", 
        "1,1<1@1P1T1X1\\1d1|1", 
        "2$2(282<2@2D2H2P2h2x2|2", 
        "3$3(3,30343<3T3d3h3x3|3", 
        "4,40484P4`4d4t4x4|4", 
        "5 5$5,5D5T5X5h5l5t5", 
        "6$64686H6L6T6l6|6", 
        "7(7,747L7P7h7x7|7", 
        "8$8(8,80848<8T8d8h8x8|8", 
        "9,90989P9T9l9|9", 
        ":(:8:<:@:D:L:d:h:", 
        ";(;,;0;4;8;@;X;h;l;|;", 
        "<$<<<L<P<`<d<h<p<", 
        "= =0=4=D=H=L=T=l=|=", 
        ">$>(>8><>@>D>L>d>t>x>", 
        "?(?,?0?4?<?T?d?h?x?|?", 
        "0 0$0,0D0T0X0h0l0p0t0|0", 
        "1$1<1L1P1`1d1h1l1t1", 
        "2,2<2@2P2T2X2\\2d2|2", 
        "3,303@3D3H3L3T3l3|3", 
        "4 4044484<4D4\\4l4p4", 
        "5 5$5(5,50545<5T5d5h5x5|5", 
        "6 6$6(6,60646<6T6d6h6x6|6", 
        "7 7$7(7,70787P7`7d7t7x7|7", 
        "8 8$8(8,848L8\\8`8p8t8x8", 
        "9 989H9L9\\9`9d9h9l9t9", 
        ": :8:H:L:\\:`:d:h:l:t:", 
        ";$;4;8;H;L;P;T;\\;t;", 
        "<(<,<<<@<D<H<L<P<X<p<", 
        "=,=0=@=D=L=d=t=x=", 
        ">$>(>,>0>4>8>@>X>h>l>|>", 
        "? ?$?(?0?H?X?\\?l?p?t?x?|?", 
        "0 0(0@0P0T0d0h0l0p0t0x0", 
        "1 1(1@1D1\\1l1p1x1", 
        "2,2<2@2P2T2X2\\2d2|2", 
        "3,303@3D3H3L3P3T3\\3t3", 
        "4,404@4D4H4L4P4T4\\4t4", 
        "5 50545D5H5L5P5T5X5`5x5", 
        "6$64686H6L6P6T6X6\\6`6h6", 
        "7,707@7D7H7P7h7x7|7", 
        "8,8084888@8X8h8l8|8", 
        "9 9$9,9D9T9X9h9l9p9t9x9|9", 
        ": :(:@:P:T:d:h:l:p:t:x:", 
        "; ;$;(;0;H;X;\\;l;p;t;x;", 
        "<$<<<L<P<`<d<h<l<p<x<", 
        "=4=D=H=X=\\=`=h=", 
        "> >0>4>D>H>L>P>X>p>", 
        "? ?$?4?8?<?@?D?L?d?t?x?", 
        "0 0$04080<0@0D0L0d0t0x0", 
        "1(1,10181P1`1d1t1x1|1", 
        "2 2(2@2P2T2d2h2l2p2t2x2|2", 
        "3 3$3,3D3T3X3h3l3p3t3x3", 
        "4 4$4(404H4X4\\4l4p4t4x4|4", 
        "5 5$5(5,545L5\\5`5p5t5x5|5", 
        "6 6$6(6,60646<6T6d6h6x6|6", 
        "7 7074787@7X7h7l7|7", 
        "8 8$8,8D8T8X8h8l8p8t8|8", 
        "9,9<9@9P9T9X9`9x9", 
        ": :$:4:8:<:D:\\:l:p:", 
        "; ;(;@;P;T;d;h;l;t;", 
        "<$<4<8<H<L<P<X<p<", 
        "=,=0=4=8=<=D=\\=l=p=", 
        "> >0>4>8><>D>\\>l>p>", 
        "?(?,?0?4?8?@?X?h?l?|?", 
        "0 0$0(0,040L0\\0`0p0t0x0|0", 
        "141D1H1X1\\1d1|1", 
        "2 2$24282<2D2\\2l2p2", 
        "3,3034383<3@3D3H3P3h3x3|3", 
        "4(484<4L4P4T4X4`4x4", 
        "5$54585H5L5P5T5X5\\5`5h5", 
        "6$6<6L6P6`6d6h6l6p6t6x6", 
        "7 7$7(7,70787P7`7d7t7x7|7", 
        "8 8$8(8,848L8\\8`8p8t8x8|8", 
        "9 9(9@9P9T9d9h9l9p9x9", 
        ": :8:H:L:\\:`:d:h:l:t:", 
        ";0;@;D;T;X;\\;`;d;l;", 
        "<,<<<@<P<T<X<\\<`<h<", 
        "=(=8=<=L=P=T=X=\\=d=|=", 
        ">$>4>8>H>L>P>T>X>\\>`>h>", 
        "?(?8?<?L?P?T?\\?t?", 
        "0 0$0<0L0P0X0p0", 
        "1(1,1<1@1D1H1L1T1l1|1", 
        "2$2(282<2@2H2`2d2|2", 
        "3$3(3,30343<3T3d3h3x3|3", 
        "4$4(4,404D4H4X4\\4l4p4x4", 
        "505<5D5d5", 
        "686D6L6l6", 
        "7$707P7T7\\7p7x7", 
        "8 808<8D8h8", 
        "9$9H9`9h9p9", 
        ":(:@:H:P:`:l:t:", 
        "; ;(;0;@;L;T;l;t;", 
        "<,<8<X<d<", 
        "=4=@=`=l=", 
        "= >@>H>P>X>`>h>p>x>", 
        "? ?,?L?X?x?", 
        "0(040T0`0", 
        "101<1\\1h1", 
        "282D2d2p2", 
        "3$3,343<3D3P3p3|3", 
        "4 4,4L4X4x4", 
        "5(545T5`5", 
        "606<6\\6h6", 
        "7$7,747D7P7X7|7", 
        "8$848@8H8l8t8|8", 
        "989D9h9", 
        ": :(:8:H:\\:d:l:|:", 
        ";0;8;H;P;\\;", 
        "<(<4<T<`<", 
        "=0=8=@=P=`=p=|=", 
        ">(>0>8>H>X>h>t>|>", 
        "? ?(?8?D?L?l?t?", 
        "0 0,040X0h0x0", 
        "1@1H1P1`1l1t1", 
        "2 202<2D2x2", 
        "3H3P3X3h3t3|3", 
        "4 4(484D4L4", 
        "5P5X5`5p5|5", 
        "5 6(606@6L6T6", 
        "7$7X7`7h7x7", 
        "7(80888H8T8\\8", 
        "9 9,949h9p9x9", 
        ":8:@:H:X:d:l:", 
        ";(;4;<;p;x;", 
        "<@<H<P<`<l<t<", 
        "= =0=<=D=x=", 
        ">H>P>X>h>t>|>", 
        "? ?(?8?D?L?", 
        "0$0X0`0h0x0", 
        "0(10181H1T1\\1", 
        "2$2,2`2h2p2", 
        "20383@3P3\\3d3", 
        "4 4,444h4p4x4", 
        "585@5H5X5d5l5", 
        "6(646<6p6x6", 
        "7@7H7P7`7l7t7", 
        "8$8,848P8`8p8x8", 
        "989H9X9`9p9|9", 
        "9 :(:0:@:L:T:x:", 
        ";$;,;P;`;p;x;", 
        "< <@<H<T<t<|<", 
        "= =(=0=8=@=L=l=t=|=", 
        ">8>D>d>p>", 
        "? ?@?L?l?x?", 
        "0$040D0T0`0h0", 
        "1$101P1\\1", 
        "2$2D2L2T2d2p2", 
        "3$3,3<3H3P3h3t3", 
        "4(404<4\\4h4", 
        "50585T5\\5t5", 
        "646@6`6l6", 
        "7D7h7t7|7", 
        "8 8,8L8X8", 
        "9 9@9L9t9", 
        "9$:H:T:\\:t:|:", 
        "; ;,;L;T;`;", 
        "<0<8<@<L<t<", 
        "=,=8=@=`=t=", 
        "><>H>P>p>", 
        "? ?D?P?X?x?", 
        "0 080@0H0X0`0h0p0x0", 
        "1(141<1`1t1|1", 
        "2 2,2L2X2x2", 
        "3$3,3<3P3`3t3|3", 
        "4 444<4\\4p4", 
        "5$585H5\\5d5|5", 
        "606P6X6`6h6p6x6", 
        "7 7(70787D7l7|7", 
        "848L8p8|8", 
        "8 9,949T9x9", 
        ":0:<:\\:h:", 
        ";$;0;P;\\;", 
        "<$<4<H<P<p<", 
        "=(=4=T=`=", 
        ">(>P>t>", 
        "?$?0?8?P?\\?|?", 
        "0 0(00080@0H0P0X0h0|0", 
        "1 181H1P1X1`1h1", 
        "2 20282@2T2t2|2", 
        "3$303P3\\3|3", 
        "4,484X4d4", 
        "5D5h5t5|5", 
        "6(60686@6L6l6x6", 
        "747@7`7l7", 
        "8(888D8L8l8", 
        "9$909P9X9d9", 
        ": :,:T:h:x:", 
        "; ;(;D;L;d;l;x;", 
        "<,<4<<<H<h<p<x<", 
        "=0=<=\\=d=l=p=x=", 
        "> >(>4>T>\\>h>", 
        "?$?,?4?<?D?L?X?x?", 
        "040@0d0", 
        "1 1(141X1x1", 
        "2$2,242<2D2L2T2\\2d2l2x2", 
        "3$3,343<3D3L3T3\\3d3l3x3", 
        "484D4d4p4", 
        "5$505P5X5d5", 
        "6$6D6L6X6x6", 
        "70787D7d7l7t7", 
        "8,848H8P8\\8|8", 
        "9,989X9d9", 
        ": :(:0:8:@:H:P:X:`:h:p:x:", 
        "; ;(;0;8;@;H;P;X;`;h;p;x;", 
        "< <(<0<8<@<H<P<X<`<h<p<x<", 
        "= =(=4=T=`=", 
        ">8>D>d>p>", 
        "?<?D?L?X?x?", 
        "080\\0h0p0", 
        "181D1d1p1", 
        "2 2@2L2l2x2", 
        "3,343<3D3P3p3x3", 
        "4(444<4T4`4", 
        "505<5\\5h5", 
        "6 6(6H6l6x6", 
        "7(707H7T7t7", 
        "8,848@8d8", 
        "9$9,949<9D9L9T9\\9d9l9t9", 
        ":$:0:X:|:", 
        ";$;D;L;X;x;", 
        "<(<0<8<@<H<P<X<`<l<", 
        "=8=D=d=l=x=", 
        ">,>4>@>`>h>p>|>", 
        "? ?@?H?T?t?|?", 
        "0 0(00080@0H0P0X0h0p0|0", 
        "1 1(141T1`1", 
        "2,242@2`2l2", 
        "3$3,343<3D3L3T3`3", 
        "484D4d4p4", 
        "5 5(50585D5d5l5t5|5", 
        "6$6,6L6\\6h6p6", 
        "707<7\\7h7", 
        "7$848@8H8l8", 
        "9 9(90989@9H9T9t9", 
        ": :,:L:T:`:", 
        ";8;@;H;P;X;`;h;p;x;", 
        "<$<,<4<<<D<L<T<\\<d<l<t<|<", 
        "= =(=0=8=@=H=P=X=`=h=p=x=", 
        ">$>,>4><>D>L>T>\\>d>l>t>|>", 
        "? ?(?0?8?@?H?P?X?`?h?p?x?", 
        "0$0,040<0D0L0T0\\0d0l0t0|0", 
        "1,141@1`1h1t1", 
        "2$2,242<2D2L2T2\\2d2l2t2|2", 
        "3 3$3(303D3L3T3\\3`3d3l3", 
        "4 444<4D4L4P4T4\\4p4x4", 
        "5$5,545<5H5h5l5p5x5", 
        "606@6P6\\6d6|6", 
        "7(787H7X7d7l7", 
        "8(8<8P8d8x8", 
        "989@9T9`9h9", 
        ":0:T:`:h:", 
        "; ;@;L;l;x;", 
        "<$<0<P<\\<|<", 
        "=<=D=L=T=\\=d=l=t=|=", 
        ">$>,>8>X>d>", 
        "? ?(?4?T?\\?d?p?", 
        "00080@0P0`0h0|0", 
        "1,141@1`1l1", 
        "2 2(242X2x2", 
        "3$3D3P3p3|3", 
        "4(40484@4H4P4X4d4", 
        "5,585@5X5`5h5p5", 
        "6(6T6\\6d6t6", 
        "70787P7\\7", 
        "8 8(848<8`8t8", 
        "9$949@9`9l9", 
        ":$:D:P:p:x:", 
        ";,;8;X;d;", 
        "< <(<0<8<D<d<p<", 
        "= =@=L=p=", 
        ">(>4>T>`>", 
        "?8?\\?h?p?", 
        "0 0@0d0p0x0", 
        "1 1(1H1l1x1", 
        "2(202P2t2", 
        "3$30383X3|3", 
        "4,484@4`4", 
        "545@5H5`5l5", 
        "6$6<6D6P6p6|6", 
        "7 707D7L7l7", 
        "8$8H8T8\\8|8", 
        "909@9P9p9", 
        ": :@:d:p:x:", 
        ";(;0;P;d;t;", 
        "< <,<L<T<`<", 
        "=$=0=P=X=`=l=", 
        "> >(>0><>\\>h>", 
        "?<?H?h?p?|?", 
        "00080D0d0p0", 
        "1$1,181\\1|1", 
        "2,282X2`2h2t2", 
        "3 383@3H3T3t3", 
        "404P4X4`4h4p4x4", 
        "5$505P5X5`5h5t5", 
        "6<6\\6d6l6t6|6", 
        "747T7\\7d7l7t7|7", 
        "8 8(848T8\\8d8l8t8|8", 
        "989@9L9l9x9", 
        ":4:<:D:L:T:\\:d:l:t:", 
        ";$;,;4;<;D;L;T;`;", 
        "< <D<d<l<t<|<", 
        "=$=H=h=p=x=", 
        ">4><>D>L>T>\\>d>p>", 
        "?<?D?P?p?|?", 
        "0 0@0d0p0x0", 
        "1 1@1L1t1", 
        "2 2(20282@2H2T2t2|2", 
        "3$3,343<3H3h3t3", 
        "4$4D4P4p4x4", 
        "5(545T5`5", 
        "60686@6H6P6X6d6", 
        "7(707<7\\7h7", 
        "888D8d8p8", 
        "9$909P9X9d9", 
        ":4:@:`:l:", 
        ";$;D;P;p;|;", 
        "< <,<L<X<x<", 
        "=<=\\=d=l=t=|=", 
        "= >@>H>P>X>`>h>p>x>", 
        "?(?4?T?`?", 
        "00080D0d0p0", 
        "1 1@1H1T1t1|1", 
        "242@2`2l2", 
        "3 3(303X3d3", 
        "4$4D4L4T4\\4h4", 
        "5(5H5T5t5", 
        "6,686X6d6", 
        "7,747<7D7L7T7\\7d7p7", 
        "888X8`8h8p8x8", 
        "9 9(90989@9L9p9", 
        ":(:<:H:P:h:p:x:", 
        ";<;D;P;p;|;", 
        "<0<<<\\<h<", 
        "=8=D=L=d=p=", 
        ">,>@>P>`>", 
        "?,?8?`?", 
        "040@0H0h0x0", 
        "1 1D1X1`1", 
        "2$2,242<2H2l2", 
        "3$303P3\\3|3", 
        "4$4D4L4T4`4", 
        "5,545<5D5L5T5`5", 
        "6(6H6T6t6|6", 
        "7<7D7L7X7x7", 
        "8 8@8H8T8t8|8", 
        "9$9D9L9X9x9", 
        ":0:P:X:`:h:p:", 
        ";$;,;4;<;H;p;", 
        "< <(<0<8<@<H<P<`<t<", 
        "< =4=<=D=L=t=|=", 
        ">(>0>8>D>d>p>", 
        "?$?D?L?T?\\?d?l?x?", 
        "0(0H0P0X0`0h0p0x0", 
        "10181@1H1P1X1`1h1p1|1", 
        "2(2<2T2`2h2", 
        "303<3\\3h3", 
        "4$4,444<4D4L4T4`4", 
        "5,585X5`5h5t5", 
        "6(60686D6d6p6", 
        "7$7D7L7T7\\7d7l7t7", 
        "708D8X8h8x8", 
        "9 9(90989@9H9T9t9|9", 
        "9 :@:H:P:X:`:h:p:x:", 
        "; ;@;H;T;t;", 
        "<0<D<P<X<p<x<", 
        "=0=8=@=H=P=X=h=|=", 
        ">0><>\\>h>", 
        "?8?@?L?l?t?|?", 
        "0,040@0`0l0", 
        "1<1H1h1t1", 
        "2 2,242T2\\2d2x2", 
        "3$3,383X3d3", 
        "4 4(40484D4d4p4", 
        "5 5@5H5T5t5|5", 
        "6 6(60686H6\\6h6p6", 
        "7(70787L7l7t7|7", 
        "8 8(80888D8L8p8", 
        "9$9D9L9T9\\9d9l9t9|9", 
        ": :(:0:<:\\:h:", 
        "; ;@;L;l;x;", 
        "<<<D<h<|<", 
        "=$=,=4=<=D=T=d=", 
        "> >H>T>|>", 
        "?$?H?\\?d?", 
        "0(040T0`0", 
        "1 1@1L1l1x1", 
        "2,242@2`2h2t2", 
        "3(3<3D3`3h3", 
        "484D4d4p4", 
        "5,585`5t5", 
        "6 6@6L6l6x6", 
        "747<7H7h7t7", 
        "8(848T8`8", 
        "9$90989X9|9", 
        ":$:L:\\:", 
        "; ;@;L;l;x;", 
        "<$<,<4<@<`<h<p<|<", 
        "= =@=L=l=t=", 
        ">$>D>P>p>|>", 
        "?8?D?d?l?t?", 
        "0<0H0h0t0", 
        "1$1,141<1D1L1T1`1", 
        "2 2(20282@2H2P2X2`2h2p2x2", 
        "3 3(30383@3H3P3X3`3h3p3x3", 
        "3$4H4T4\\4|4", 
        "5$50585P5X5h5x5", 
        "6$6,686X6d6", 
        "7,7@7H7P7`7p7x7", 
        "8 8(80888@8H8T8t8|8", 
        "9 9(90989@9h9p9x9", 
        ":4:@:`:l:", 
        "; ;@;H;P;X;`;h;t;", 
        "< <,<L<X<x<", 
        "=$=,=8=X=`=h=p=|=", 
        ">0><>\\>d>l>t>", 
        "?$?H?h?p?x?", 
        "0$0,080X0d0", 
        "1 1,1P1p1x1", 
        "2,2@2L2T2l2t2|2", 
        "3,3D3L3\\3p3", 
        "4$4,484X4`4h4p4x4", 
        "585@5L5l5t5|5", 
        "6,686`6t6", 
        "7 707@7H7P7X7`7h7p7x7", 
        "8$8H8h8p8x8", 
        "9$9,949@9`9l9", 
        ":,:L:T:\\:d:l:x:", 
        ";(;0;<;`;", 
        "<,<8<@<X<`<l<", 
        "=@=T=\\=l=", 
        ">,>8>X>`>l>", 
        "?$?,?L?p?|?", 
        "080@0H0P0\\0|0", 
        "1 1D1P1X1x1", 
        "2 2,2P2p2x2", 
        "3$3,3<3H3P3l3", 
        "4$404P4X4`4l4", 
        "5$5,545<5D5L5l5", 
        "6 6@6H6\\6h6p6", 
        "7 7D7d7l7t7|7", 
        "8<8D8P8p8|8", 
        "9 909D9P9X9x9", 
        ":$:,:4:<:D:L:T:\\:d:l:t:|:", 
        ";$;,;4;<;L;`;l;t;", 
        "<8<X<`<h<p<x<", 
        "=,=@=H=h=|=", 
        "> >,>L>T>\\>h>", 
        "?,?8?X?`?h?p?|?", 
        "0(000<0\\0h0", 
        "1$1,141<1D1L1T1\\1d1l1t1|1", 
        "2,242<2L2T2\\2l2t2", 
        "3,383@3X3d3", 
        "4 4,4P4p4x4", 
        "585D5d5p5", 
        "6(6H6P6t6", 
        "747@7`7l7", 
        "8 8@8L8l8x8", 
        "9(9H9T9t9", 
        ":$:,:8:X:`:l:", 
        ";$;,;4;<;D;L;T;\\;d;l;x;", 
        "<,<8<X<d<", 
        "= =(=0=8=@=H=P=X=`=h=p=|=", 
        ">8>D>d>p>", 
        "?D?X?h?|?", 
        "080D0d0p0", 
        "101P1X1`1h1p1x1", 
        "282@2L2p2", 
        "3 3(30383@3L3l3t3|3", 
        "4@4T4`4h4", 
        "5,545<5H5h5t5", 
        "6 6@6H6P6X6d6", 
        "7$7,747<7D7L7T7`7", 
        "80888@8H8P8X8`8h8p8|8", 
        "9(9L9X9`9x9", 
        ": :@:H:T:t:|:", 
        ";(;<;\\;d;l;t;|;", 
        "<,<8<X<`<h<p<|<", 
        "= =(=0=8=@=H=P=X=`=h=", 
        "= >@>H>P>X>`>h>p>x>", 
        "?$?,?4?<?D?L?X?", 
        "0 080@0L0l0t0", 
        "1@1H1P1`1l1t1", 
        "3 3L3\\3l3t3", 
        "4 4(40484@4H4P4X4`4h4p4x4", 
        "545@5`5h5p5x5", 
        "6 6H6\\6l6", 
        "7$70787X7|7", 
        "8,888@8X8d8", 
        "9<9H9h9t9", 
        ":$:,:P:\\:d:", 
        ";$;,;D;P;p;|;", 
        "<(<<<H<P<h<p<", 
        "= =@=L=l=x=", 
        ">,><>H>P>t>", 
        "?0?D?P?X?x?", 
        "0,0<0P0X0p0|0", 
        "1 1(141\\1", 
        "202<2\\2h2", 
        "3$303P3X3`3l3", 
        "4,444<4D4L4T4\\4d4l4t4|4", 
        "5 5(50585@5H5P5X5`5h5p5x5", 
        "6 6(60686P6X6`6h6t6", 
        "787D7h7", 
        "8$8,848<8D8L8T8\\8d8p8", 
        "9 9(90989@9H9P9X9`9h9p9x9", 
        ":(:H:T:t:", 
        "; ;,;L;X;|;", 
        "<$<D<L<T<\\<d<l<x<", 
        "=$=,=4=<=D=L=T=\\=d=l=t=|=", 
        "> >(>4>X>x>", 
        "?$?,?4?<?H?h?p?x?", 
        "080@0H0T0t0|0", 
        "1$1<1D1L1\\1h1p1", 
        "2 2@2L2l2x2", 
        "3$3,343<3D3L3T3\\3d3l3x3", 
        "4$4,4<4P4X4`4p4", 
        "5@5H5P5`5l5t5", 
        "6$6,6<6P6X6`6p6|6", 
        "7<7D7L7\\7", 
        "848<8D8T8`8h8", 
        "9$949@9H9l9", 
        ": :(:L:d:l:t:", 
        ";4;<;D;T;d;t;", 
        "<4<<<D<T<`<h<", 
        "=,=8=@=d=l=t=", 
        "> >(>L>\\>l>t>", 
        "?,?4?<?L?X?`?", 
        "040<0D0T0`0h0", 
        "1$141@1H1l1", 
        "2 2(2L2d2l2t2", 
        "3,343<3L3\\3l3x3", 
        "4$4,4D4L4T4`4", 
        "5$5,585X5d5", 
        "6$6,686d6|6", 
        "7(70787@7H7X7l7", 
        "8(808T8l8t8|8", 
        "949L9T9\\9l9x9", 
        ":,:4:<:L:X:`:", 
        ";$;4;@;H;l;", 
        "<0<8<H<\\<t<|<", 
        "=<=D=L=\\=h=p=", 
        "> >(>8>L>T>\\>l>|>", 
        "? ?0?D?L?T?d?p?x?", 
        "040L0T0\\0l0x0", 
        "1$1<1D1L1\\1h1p1", 
        "2$2,2<2H2P2t2|2", 
        "2(3@3H3P3`3l3t3", 
        "4(40484H4T4\\4", 
        "5(545<5`5x5", 
        "6@6X6`6h6x6", 
        "607\\7t7|7", 
        "8 8(808@8L8T8", 
        "949`9x9", 
        ":$:,:4:D:P:X:", 
        "= =0=@=P=\\=d=", 
        "> >0>@>L>T>x>", 
        "?$?D?L?T?d?x?", 
        "0 0,040X0p0x0", 
        "181@1H1X1d1l1", 
        "2$242H2P2X2h2x2", 
        "383P3X3`3p3|3", 
        "40484@4P4\\4d4", 
        "5 505<5D5h5p5x5", 
        "6D6T6h6p6x6", 
        "7 7,747X7p7x7", 
        "888P8X8`8p8|8", 
        "90989@9P9\\9d9", 
        ": :0:<:D:h:", 
        ";$;H;`;h;p;", 
        "<(<0<8<H<X<h<t<|<", 
        "=(=0=8=H=T=\\=", 
        "> >,>4>T>\\>l>", 
        "?(?0?8?H?T?\\?", 
        "0$0D0L0\\0p0x0", 
        "1(141<1`1h1p1", 
        "242<2L2`2h2p2", 
        "343<3L3`3h3p3", 
        "4 4,444X4p4x4", 
        "585P5X5`5p5|5", 
        "60686@6P6\\6d6", 
        "7 707<7D7h7p7x7", 
        "8 8(808@8L8T8x8", 
        "9 9,949X9p9x9", 
        ":8:P:X:`:p:|:", 
        ";0;8;@;P;\\;d;", 
        "<(<8<D<L<p<x<", 
        "=(=4=<=`=x=", 
        ">$>H>P>X>h>x>", 
        "?8?@?H?X?d?l?", 
        "0$0H0t0", 
        "1(101T1\\1d1t1", 
        "2 2D2L2T2d2t2", 
        "343L3T3\\3l3x3", 
        "4$4,4<4H4P4x4", 
        "5$5,5<5H5P5p5x5", 
        "6$6,6<6L6\\6h6p6", 
        "7$7,7<7H7P7t7|7", 
        "8$8H8\\8l8t8", 
        "9(90989H9T9\\9|9", 
        "9 :(:0:@:P:`:l:t:", 
        "; ;(;8;H;X;d;l;", 
        "< <(<0<@<L<T<x<", 
        "=(=4=<=`=h=p=", 
        ">$>,>P>X>`>p>|>", 
        "?$?,?<?P?X?`?p?", 
        "0$0,040D0X0`0h0x0", 
        "1$1D1L1\\1p1x1", 
        "2$2D2L2T2d2x2", 
        "3 303<3D3\\3h3", 
        "4,4<4H4P4t4|4", 
        "5,585@5d5l5t5", 
        "6 6@6H6P6X6h6|6", 
        "7,747<7L7X7`7", 
        "8,888@8d8|8", 
        "9 9D9\\9d9l9|9", 
        ":,:4:<:L:\\:l:x:", 
        ";$;,;<;L;\\;h;p;", 
        "<$<0<8<X<`<h<x<", 
        "=$=,=<=H=P=p=x=", 
        ">@>X>`>h>x>", 
        "?(?0?8?H?X?h?t?|?", 
        "00080@0P0\\0d0", 
        "181@1H1X1d1l1", 
        "2$2,282d2l2t2", 
        "3$30383\\3d3l3|3", 
        "484@4P4d4l4t4", 
        "5 5(5H5P5X5`5h5p5", 
        "6$6,6<6H6P6t6", 
        "7$70787l7", 
        "8 8(808@8L8T8x8", 
        "9<9D9T9h9p9x9", 
        ":4:<:L:`:x:", 
        ";$;4;@;H;`;h;t;", 
        "=0=<=`=", 
        "> >,>4>T>\\>d>t>", 
        "?,?4?@?`?l?", 
        "0 0D0L0T0d0t0", 
        "141L1T1\\1l1x1", 
        "2,242<2L2X2`2", 
        "3,383@3d3|3", 
        "4 4D4\\4d4l4|4", 
        "5 505D5L5T5d5p5x5", 
        "6 6(6L6T6\\6l6x6", 
        "7 7D7\\7d7l7|7", 
        "8$8,8<8H8P8p8x8", 
        "9$9,9<9H9P9p9x9", 
        ": :4:<:D:T:`:h:", 
        "; ;D;L;T;d;t;", 
        "<4<<<D<T<d<t<", 
        "=$=<=D=L=\\=h=p=", 
        ">$>0>8>X>`>h>x>", 
        "?$?,?<?H?P?t?", 
        "0(000T0l0t0|0", 
        "141L1T1\\1l1x1", 
        "2,242<2L2X2`2", 
        "3,383@3d3|3", 
        "4 4D4\\4d4l4|4", 
        "5$5<5D5L5\\5h5p5", 
        "6$6,6<6H6P6t6", 
        "7$70787\\7t7|7", 
        "8<8T8\\8d8t8", 
        "949<9D9T9`9h9", 
        ":$:4:@:H:l:", 
        ";0;8;@;P;d;l;t;", 
        "<0<8<@<P<d<l<t<", 
        "=,=8=@=d=l=t=", 
        ">(>0>T>l>t>|>", 
        "? ?(?8?D?L?p?", 
        "0$0,0P0h0p0x0", 
        "101H1P1X1h1t1|1", 
        "2(20282H2T2\\2", 
        "3(343<3`3x3", 
        "4@4X4`4h4x4", 
        "4 585@5H5X5d5l5", 
        "6 6(606@6L6T6", 
        "7 7,7L7X7", 
        "8$8@8\\8`8", 
        "0,080H0T0X0", 
        "5 5,5<5H5X5d5t5", 
        "6(6,6`6", 
        "004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,40;4;8;<;@;D;H;L;P;T;", 
        "< <(<4<8<T<x<", 
        "=,=P=t=", 
        "=$>@>`>", 
        "?4?`?d?h?", 
        " 0\\0x0", 
        "0 2024282X2x2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3l3p3t3x3|3", 
        "4 484<4@4D4H4d4h4l4", 
        "9 9(90989@9H9P9X9`9h9p9x9", 
        ": :(:0:8:@:H:P:X:`:h:p:x:", 
        "; ;(;0;8;@;H;P;X;`;h;p;x;", 
        "< <(<0<8<@<H<P<X<`<h<p<x<", 
        "= =(=0=8=@=H=P=X=h=l=", 
        "? ?$?(?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "181@1H1P1X1`1h1p1x1", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1X1\\1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,30383<3D3H3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "787L7P7t7", 
        "> >$>(>`>", 
        "2 2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,646L6h6", 
        "707L7P7l7", 
        "8$8D8`8|8", 
        "9$9@9x9", 
        ":<:\\:x:|:", 
        "<4<P<X<", 
        ">0>`>x>", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=", 
        "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        ">0>L>d>", 
        "?,?0?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "80l0p0", 
        "1 1$1(1,14181<1@1D1H1L1P1|<", 
        "=(=D=p=", 
        "= >D>d>", 
        "?$?@?`?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=", 
        "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "0 0$0(04080<0@0P0T0X0\\0l0p0t0x0", 
        "1 1$1014181<1@1L1P1T1X1\\1h1l1p1t1x1", 
        "2 2,2024282<2H2L2P2T2X2d2h2l2p2t2", 
        "3(3,3034383D3H3L3P3T3`3d3h3l3p3|3", 
        "4$4(4,40444@4D4H4L4P4\\4`4d4h4l4x4|4", 
        "5 5$5(5,505<5@5D5H5L5X5\\5`5d5h5t5x5|5", 
        "6 6$6(6,686<6@6D6H6T6X6\\6`6d6p6t6x6|6", 
        "7 7$7(74787<7@7D7P7T7X7\\7`7l7p7t7x7|7", 
        "8 8$8084888<8@8L8P8T8X8\\8h8l8p8t8x8", 
        "9 9,9094989H9L9P9T9d9h9p9", 
        ":$:(:0:4:8:<:@:D:H:L:P:T:X:\\:`:l:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "<,<0<4<P<h<", 
        "= =8=T=t=", 
        "> >(>0>8>@>H>P>X>`>h>p>x>", 
        "0 0$0(0004080@0D0H0L0P0T0X0`0d0h0p0t0x0|0", 
        "1(1,141<1@1D1H1L1P1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3H5h5l5p5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ":,:0:4:P:p:x:|:", 
        ";,;0;4;P;T;X;\\;`;x;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        ">$>(>P>|>", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1", 
        "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2", 
        "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3", 
        "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4", 
        "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6", 
        "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7", 
        "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8", 
        "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9", 
        ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:", 
        "; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\\;`;d;h;l;p;t;x;|;", 
        "< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\\<`<d<h<l<p<t<x<|<", 
        "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?`?d?h?l?p?t?x?|?", 
        "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0", 
        "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1|1", 
        "2$2,242<2D2L2T2\\2d2l2t2|2", 
        "3$3,343<3D3L3T3\\3d3l3t3|3", 
        "4$4,444<4D4L4T4\\4d4l4t4|4", 
        "5$5,545<5D5L5T5\\5d5l5t5|5", 
        "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6", 
        "787<7@7D7H7L7P7T7X7\\7t7", 
        "3$303D3P3d3p3", 
        "64686D6H6p6t6", 
        "747\\7`7l7p7", 
        "8$8D8l8", 
        "9,9T9X9d9h9", 
        ":$:(:P:T:`:d:", 
        ":8;`;d;p;t;", 
        "<$<(<P<p<", 
        "=4=X=\\=`=h=p=x=", 
        "03X3\\3`3d3h3l3p3t3x3|3", 
        "HY_^Z[", 
        "VWQRSj", 
        "SRQWVj", 
        "a6V~T\\", 
        "mgr.exe", 
        "LoadLibraryA", 
        "GetProcAddress", 
        "GetModuleHandleA", 
        "kernel32.dll", 
        "FreeLibrary", 
        "OpenMutexA", 
        "CloseHandle", 
        "CreateFileA", 
        "WriteFile", 
        "GetModuleFileNameA", 
        "CreateProcessA", 
        "GetWindowsDirectoryA", 
        "GetVolumeInformationA", 
        "\\TzV6a((", 
        "\\T~V6a", 
        "\\T~V6a", 
        "xT~V6a", 
        "\\T2W2a", 
        "\\T|V6e", 
        "\\T~60a", 
        "\\D~V&a", 
        "LT~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\P~V6a", 
        "\\T~66a", 
        "ZT~F6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "te^Rm#k", 
        "d;$i8Yg", 
        "8W-\\T~V", 
        "5u^_CfrDn`", 
        "DBy\\T~", 
        "<~F6a\\Z", 
        "#@HN>V", 
        ";W-\\T~F", 
        "i\"DBx;", 
        "n1iw&S-", 
        "ij6a\\a", 
        "E7&L=B", 
        "bffCn#No_HF", 
        "`^Z)$k", 
        "%ovaZR", 
        "\\4UEVW", 
        "T\"pvaW", 
        "\\ ck=c", 
        "\\Tp /XV/", 
        "DiuW6a", 
        "T~Ve7^R}", 
        "WB6a(a", 
        "Z\\$<VCf\\W", 
        " fEkk<&", 
        "]T~VBh\\", 
        ".IRdTq", 
        "'#2R(<", 
        "<~W6a?6", 
        "ksh%<V", 
        "^V6R!T", 
        "&<Ve7\\", 
        "]T~<vR", 
        "H\\V68\\", 
        ":~QaP:", 
        "a1Q(Fi", 
        ":hJ~Vo8<", 
        "\":AO\\T~", 
        "Z[b= k", 
        "Z[b= k", 
        "zT6aZ[", 
        "FQ-(\\E", 
        "*\\T~W9", 
        "T~Vo8\\", 
        "&va\\'|", 
        "Q*FV2+M", 
        "W-4D^W6", 
        "\\4UEVW", 
        "q:&va(", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~:Ia", 
        "Q^~Vb-", 
        "jdLo;k", 
        "jdOn;k", 
        ".YtV6a", 
        "/YtV6a", 
        "90s\\6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\t~v6A", 
        "\\t~v6A", 
        "\\D~F6q", 
        "\\U~W6`", 
        "^T|V4a", 
        "\\V~T6c", 
        "LTnV&a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\<~~6I", 
        "\\t~v6A", 
        "LTnV&a", 
        "LTnV&aU", 
        "^U|W4`", 
        "]D~F6q", 
        "\\t~v6A", 
        "\\D~F6q", 
        "LTnV&a", 
        "\\D~F6q", 
        "LTnV&a", 
        "^U|W4`", 
        "^UnV4`", 
        "1n^V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "l)>V4a", 
        "\\T~'6a", 
        "\\T~V6a", 
        "\\T~V6,", 
        "(1~V@b", 
        "(T~l4-", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        ">\\d~16n", 
        "\\g~|6%", 
        "\\p~l6\"", 
        "8\\2~Q6g", 
        "\\\\~:6R", 
        "TgV_aK", 
        "0\\S~j6", 
        "mfoW.V", 
        "[0pk~,", 
        "6-kNO-/", 
        "|U:C9|_ ", 
        "9_3(|Z", 
        "DC>nC*", 
        "]4EwmXbx", 
        "d|ynfkOs", 
        "(k`@72|ndI", 
        "y3(@hI\\", 
        "B\u001f-x.+", 
        "#VEl.bL", 
        "~>p&-GX", 
        "<sxmMc6", 
        "4L^hT|", 
        "h!Y=9]", 
        " E<{g1", 
        "[z`p#4", 
        "!?fAj4j}{", 
        "!|G,/x", 
        "|(2_,p", 
        "U\"a`lHv", 
        "<4K\"jq", 
        "b^q[6/", 
        "jk/H,$O", 
        "rFlexo", 
        "Z !|VI", 
        "f)_U\"o", 
        "cai4j1", 
        "h/P;7d", 
        "J#NPq#", 
        "zmhN^CSP}=Eh", 
        "{wDW\u001fw", 
        "_OTple}", 
        "D;ytHN", 
        "p%}iu)h", 
        "6,/G#g", 
        "k!WRnuP", 
        "9K/KRE", 
        "[u^L>N", 
        "l}-!\\]A", 
        "o+BiFs", 
        "N=S+'!", 
        "#8GBYlN", 
        "b:Vb'x", 
        ")1KDBlf", 
        "9Il0\\B", 
        "420|>R", 
        "afkRKI", 
        "z{+o[f", 
        "]zG6P8", 
        "/eZg&t", 
        "k#w1L X{", 
        "[HKbE\"w", 
        "n}.\\^.", 
        "BwIY-N", 
        "0Nq0P]", 
        "e)P8Xk", 
        "B\u001fISbg", 
        "RodQq0_U", 
        "CX}jLO", 
        "`QPLOAs)", 
        "9[0>7|/", 
        "'FpNhQ", 
        "SuSE*`(|", 
        "#Mh{9<", 
        "^_iD88O$j", 
        "R*s4x90", 
        "HF,$WX", 
        ".YhZMx", 
        "+kaGo*=", 
        "zp(]ssD3", 
        "O!FXW$I%", 
        "hD1A'%", 
        "&8=<.:", 
        "nh{)l\u001f!1C", 
        "$,|`<6", 
        "Ja-{WT", 
        "Z#-8Z6", 
        "jf05B@", 
        "4nK4Tt", 
        "lhL3sZ", 
        "~W3qcHd)`", 
        "Az*qr}", 
        "kmaVs5", 
        "^U*r\"J", 
        "V(D \u001f{4", 
        "<#LRcl", 
        "wmNiNr$", 
        "ct?HO?A(", 
        "4Y#[.QFA", 
        "e?!(!|", 
        "azQ,{3", 
        "iu>Bh\u001f", 
        "1=R84K>", 
        "1;T'Q$H", 
        "p|Bv%W", 
        ">w_@>q", 
        "%b|Dkj", 
        "ud[u}X", 
        "M)POS/7", 
        "&d,[DM", 
        "p=NHa?", 
        "X}$.^aF", 
        "@7Q~_7", 
        "yS1x_S", 
        "(GNGmv", 
        "&l-K6(", 
        "qRQL;,", 
        "7/u\u001fww", 
        "+aWOwwE", 
        "$bZFMT", 
        "YXjo);A", 
        "\u001f:e\\Q~!", 
        ",_hUJ}", 
        "#t<RA~#", 
        "PT=I1nQh+iE", 
        "\u001f5f>^}O", 
        "hpc !/u", 
        "mI}}+\"", 
        "16E)T{R", 
        "/A0\"xA`", 
        "j!w-_I", 
        "z~F~It", 
        "$L1OXj", 
        "OU@0hX", 
        "7U9`-Hq", 
        "(=)KADZ", 
        "@?9M\u001fa", 
        "' ezw@", 
        "?>sn{m", 
        ".5tv1b:", 
        "ms!FRb", 
        "(<qFv~", 
        "w7()]x; B+", 
        "k@ydu7", 
        "=qQch<", 
        "!s5t4I", 
        "j=wi7Ib", 
        "mEtYeA", 
        "Lur2sDD", 
        "-<'k #{", 
        "QBK$}S", 
        "Ps%##/", 
        "bY%]_m", 
        "hTq[dJ", 
        "qbE9mE", 
        "PMC a ", 
        "HDfMH?", 
        "n@F>7G", 
        "?U?\\=m", 
        "7V%Wf2F$", 
        "Z5QJ'K", 
        "neWhGY", 
        "u\u001f@c'w", 
        "fwe9uJW", 
        "FH,`.]", 
        "Y/K\u001f:%B", 
        "FXv3Q&", 
        "1IhM(U", 
        "_y\"a N", 
        "yJ/s1JJ-P", 
        "@pkV4M", 
        "z/Z}o .ul", 
        "S&wC\u001f:", 
        "Z}7UyM", 
        "v;U{i!", 
        "yGUlVd", 
        "R(7h8x", 
        "UMQ}_U", 
        "ZG5^<ipF", 
        "a?|u__", 
        "wS*Y9%", 
        "7]g!pne", 
        "),9rOl", 
        "/$<Q*iO", 
        "6:TL>Z", 
        "flzhn4", 
        "a{^h-l", 
        "xE@N'E", 
        "<])b`O", 
        "<&yOqn", 
        ";2x,)*", 
        "JL)A'q", 
        "f]?T\"M<", 
        "^^\u001f`b<", 
        "'_5ZMR", 
        "?I~ZT ", 
        "=_-,&y", 
        "cN0:@n", 
        "S1[ C/K", 
        "pGTJ;{", 
        "*A2s6=", 
        "a>g$,X", 
        "Petc+_L", 
        "%2L.Bn", 
        "6<r^qE]", 
        "2Rm/c,", 
        "\"BP1,8Fv@", 
        "Ja6`~b", 
        "cd'>Vk)#", 
        "'4K}I&:", 
        ".n(rty", 
        "n~V}M?", 
        "oa$&F+l", 
        "Yos]5E", 
        "+=o|nRqO", 
        "~P )dpn=", 
        "GzSuCf", 
        "N5+8=I", 
        "7s*v, =", 
        "(d&a9I", 
        "#\u001f0i$f", 
        "6UF\";8T", 
        "7tZBar", 
        "/A1xnq", 
        "V&+VJK?o", 
        "WqT-!- &l", 
        "dyuz[r", 
        "^mEz,I=o", 
        "3Q.Km%", 
        "_IC04WK", 
        "7s%{_X", 
        "@ko@W&", 
        "U-V*-n", 
        "xnSl2A>[\"", 
        "kH7i8C.", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~BE!", 
        "\\H~V6}", 
        "TT~V6a", 
        "\\T~V6a", 
        "\\T~V6`", 
        "(.\\T~V", 
        "\\T~V6a", 
        "),\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6`", 
        "\\T~V6a", 
        "\\U~W6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "XT~>7a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\|~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\4~V6`", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "]wnG\"S", 
        "]`:vwU", 
        "_E|V7s", 
        "}vjw2#", 
        "m@nu4\"", 
        "Mv}t7s", 
        "|w>F%b", 
        "mWLFrq", 
        "]DZF7R", 
        "od<d\"a", 
        "le=E5s", 
        "lPog'@", 
        "oeZV%@", 
        "lDld\"R", 
        "|T~Vva", 
        "\\T~V6a", 
        "2QaVRp", 
        "\\T~V6a", 
        "\\T~V6PC", 
        "7?BEDN", 
        "J7J?dQ", 
        "h%H\u001f32", 
        "}c(C~d\\T^", 
        "\\T~v6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "FI7)e\"I", 
        "\\T~V6a", 
        "\\0~v66", 
        "^T~W62", 
        "\\U~f6U", 
        "\\T>V:a", 
        "\\T~Vda", 
        "\\T~c6O", 
        "\\$~x6Q", 
        "rT^Vwa", 
        "\\ ~%6A", 
        "\\T3V_a", 
        "\\3~v62", 
        "\\T>V8a", 
        "\\a~g6S", 
        ".T8V_a", 
        "\\T~r6e", 
        "0T\u001fVBa", 
        "bXT~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "\\T~V6a", 
        "(\\T~V6a", 
        "\\T~V6a", 
        "\\Reqrd\\CMaps", 
        "Italic", 
        "MMFonts", 
        "(OpenType)", 
        "BoldItalic", 
        "ATM.INI", 
        "AdobeFnt", 
        "AdobeFnt11.lst", 
        "TypeSpt", 
        "(FakeCommonFontsPath)", 
        "Jpn Gothic M@St", 
        "Jpn Koin M TT", 
        "Jpn Gyokai sho S TT", 
        "Jpn Gyokai sho M TT", 
        "Jpn Gyo sho S TT", 
        "Jpn Gyo sho M TT", 
        "Jpn Pop M TT", 
        "Jpn Kuromaru Pop L TT", 
        "Jpn Shiromaru Pop L TT", 
        "Jpn Lei sho M TT", 
        "Jpn Kanteiryu L TT", 
        "Jpn Kai sho M TT", 
        "Jpn RoundGothic M", 
        "Jpn Gothic M", 
        "Jpn Mincho L", 
        "Jpn Mincho S", 
        "Jpn System", 
        "Krn Gungsuh M", 
        "Krn RoundGothic M", 
        "Krn Gothic M", 
        "Krn Myungjo S", 
        "Krn System", 
        "Chn JYao SG", 
        "Chn JWeibei MG", 
        "Chn JXing MG", 
        "Chn JLi SG", 
        "Chn JLi MG", 
        "Chn JYuan SG", 
        "Chn JYuan MG", 
        "Chn FYuan SG", 
        "Chn JKai MG", 
        "Chn JHei LG", 
        "Chn JHei MG", 
        "Chn JFangsong SG", 
        "Chn JSong LG", 
        "Chn JSong SG", 
        "Chn Prop Times Normal", 
        "Chn Prop Arial Normal", 
        "Chn Fixed Courier Normal", 
        "Chn FYao M5", 
        "Chn FHei L5", 
        "Chn FZongyi L5", 
        "Chn FDieyuan L5", 
        "Chn FWeibei M5", 
        "Chn FXing M5", 
        "Chn FLi S5", 
        "Chn FLi M5", 
        "Chn FYuan S5", 
        "Chn FYuan M5", 
        "Chn FKai M5", 
        "Chn FHei M5", 
        "Chn FFangsong S5", 
        "Chn FMing S5", 
        "Chn System", 
        "lRegular", 
        "Underline", 
        "Strike-Out", 
        " (OpenType)", 
        " (TrueType)", 
        "Software\\Microsoft\\Windows\\CurrentVersion\\Fonts", 
        "Software\\Microsoft\\Windows NT\\CurrentVersion\\Fonts", 
        "\\system\\", 
        "\\Fonts\\", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "&'()*+", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "&'()*+", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "()*+,-./0123456789", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "FntNames.db", 
        "aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ", 
        "\\TypeSpt\\Unicode\\ICU\\", 
        "\\Mappings\\Adobe", 
        "\\Mappings\\Win", 
        "\\Mappings\\Mac", 
        "\\TypeSpt\\Unicode", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "AdobeHome", 
        "SOFTWARE\\Adobe\\CommonFiles", 
        "\\Program Files\\Common Files\\Adobe", 
        "\\Adobe", 
        "CommonFilesDir", 
        "SOFTWARE\\Microsoft\\Windows\\CurrentVersion", 
        "[[:Cf:][:WSpace:]]", 
        "  !!\"\"(())**++,^--..//::==[[]]__", 
        "  !!\"\"%%(())**++,^--..//0", 
        "::==[[\\\\]]__", 
        "  !!##$$%%&&(())**++,,--..//00112233445566778899::;;<<==>>??@@[[\\\\]]^^__{{||}}~~", 
        "  !!##%%&&(())++,,..//00112233445566778899::;;<<==>>??[[]]__{{||}}", 
        "\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "VS_VERSION_INFO", 
        "StringFileInfo", 
        "080004b0", 
        "BuildType", 
        "Release CRTSTDLL", 
        "CompanyName", 
        "Adobe Systems Incorporated", 
        "FileDescription", 
        "CoolType Typography Engine", 
        "FileVersion", 
        "5.03.73", 
        "InternalName", 
        "CoolType", 
        "LegalCopyright", 
        " 1984-2006 Adobe Systems Incorporated", 
        "OriginalFilename", 
        "CoolType.dll", 
        "ProductName", 
        "CoolType", 
        "ProductVersion", 
        "BuildDate", 
        "Mon Oct 23 01:25:06 2006", 
        "BuildVersion", 
        "44.255677", 
        "BuildVariant", 
        "Acrobat", 
        "VarFileInfo", 
        "Translation", 
        "jjjjjj"
    ], 
    "virustotal": {
        "scan_id": "58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d-1406636495", 
        "sha1": "eed0fc0dfbfa0e0fe797fb41b13fd0a70fdc2dca", 
        "resource": "b357a395f97afb99990a3822a2ea159c", 
        "response_code": 1, 
        "scan_date": "2014-07-29 12:21:35", 
        "permalink": "https://www.virustotal.com/file/58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d/analysis/1406636495/", 
        "verbose_msg": "Scan finished, scan information embedded in this object", 
        "sha256": "58fb1b6681dda5ceab0ef5039e4249acd8df4870bb4f3e0fc237bd6e7f8a181d", 
        "positives": 46, 
        "total": 51, 
        "md5": "b357a395f97afb99990a3822a2ea159c", 
        "scans": {
            "MicroWorld-eScan": {
                "detected": true, 
                "version": "12.0.250.0", 
                "result": "Win32.Ramnit.N", 
                "update": "20140729"
            }, 
            "nProtect": {
                "detected": true, 
                "version": "2014-07-29.01", 
                "result": "Virus/W32.SpyEye", 
                "update": "20140729"
            }, 
            "CMC": {
                "detected": true, 
                "version": "1.1.0.977", 
                "result": "Virus.Win32.Ramit.1!O", 
                "update": "20140728"
            }, 
            "CAT-QuickHeal": {
                "detected": true, 
                "version": "14.00", 
                "result": "W32.Ramnit.A", 
                "update": "20140729"
            }, 
            "Malwarebytes": {
                "detected": true, 
                "version": "1.75.0.1", 
                "result": "Virus.Ramnit", 
                "update": "20140729"
            }, 
            "AegisLab": {
                "detected": false, 
                "version": "1.5", 
                "result": null, 
                "update": "20140729"
            }, 
            "K7AntiVirus": {
                "detected": true, 
                "version": "9.181.12872", 
                "result": "Virus ( 001d9d511 )", 
                "update": "20140728"
            }, 
            "K7GW": {
                "detected": true, 
                "version": "9.181.12872", 
                "result": "Virus ( 001d9d511 )", 
                "update": "20140728"
            }, 
            "TheHacker": {
                "detected": false, 
                "version": "6.8.0.5.473", 
                "result": null, 
                "update": "20140728"
            }, 
            "NANO-Antivirus": {
                "detected": true, 
                "version": "0.28.2.61148", 
                "result": "Virus.Win32.Nimnul.bmnup", 
                "update": "20140729"
            }, 
            "F-Prot": {
                "detected": true, 
                "version": "4.7.1.166", 
                "result": "W32/Ramnit.E", 
                "update": "20140729"
            }, 
            "Symantec": {
                "detected": true, 
                "version": "20131.1.5.61", 
                "result": "W32.Ramnit.B!inf", 
                "update": "20140729"
            }, 
            "Norman": {
                "detected": false, 
                "version": "7.04.04", 
                "result": null, 
                "update": "20140729"
            }, 
            "TotalDefense": {
                "detected": true, 
                "version": "37.0.11087", 
                "result": "Win32/Ramnit.C", 
                "update": "20140729"
            }, 
            "Avast": {
                "detected": true, 
                "version": "8.0.1489.320", 
                "result": "Win32:RmnDrp", 
                "update": "20140729"
            }, 
            "ClamAV": {
                "detected": true, 
                "version": "0.98.4.0", 
                "result": "W32.Ramnit-1", 
                "update": "20140729"
            }, 
            "Kaspersky": {
                "detected": true, 
                "version": "12.0.0.1225", 
                "result": "Virus.Win32.Nimnul.a", 
                "update": "20140729"
            }, 
            "BitDefender": {
                "detected": true, 
                "version": "7.2", 
                "result": "Win32.Ramnit.N", 
                "update": "20140729"
            }, 
            "Agnitum": {
                "detected": true, 
                "version": "5.5.1.3", 
                "result": "Win32.Nimnul.Gen.2", 
                "update": "20140727"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "update": "20140729"
            }, 
            "ByteHero": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "update": "20140729"
            }, 
            "Tencent": {
                "detected": true, 
                "version": "1.0.0.1", 
                "result": "Virus.Win32.Dropper.k", 
                "update": "20140729"
            }, 
            "Ad-Aware": {
                "detected": true, 
                "version": "12.0.163.0", 
                "result": "Win32.Ramnit.N", 
                "update": "20140729"
            }, 
            "Emsisoft": {
                "detected": true, 
                "version": "3.0.0.600", 
                "result": "Win32.Ramnit.N (B)", 
                "update": "20140729"
            }, 
            "Comodo": {
                "detected": true, 
                "version": "19012", 
                "result": "Virus.Win32.Ramnit.K", 
                "update": "20140729"
            }, 
            "F-Secure": {
                "detected": true, 
                "version": "11.0.19100.45", 
                "result": "Win32.Ramnit.N", 
                "update": "20140729"
            }, 
            "DrWeb": {
                "detected": true, 
                "version": "7.0.9.4080", 
                "result": "Trojan.Starter.1591", 
                "update": "20140729"
            }, 
            "VIPRE": {
                "detected": true, 
                "version": "31714", 
                "result": "Virus.Win32.Ramnit.b (v)", 
                "update": "20140729"
            }, 
            "AntiVir": {
                "detected": true, 
                "version": "7.11.164.86", 
                "result": "W32/Ramnit.C", 
                "update": "20140729"
            }, 
            "TrendMicro": {
                "detected": true, 
                "version": "9.740.0.1012", 
                "result": "PE_RAMNIT.DEN", 
                "update": "20140729"
            }, 
            "McAfee-GW-Edition": {
                "detected": true, 
                "version": "2013", 
                "result": "W32/Ramnit.a", 
                "update": "20140728"
            }, 
            "Sophos": {
                "detected": true, 
                "version": "4.98.0", 
                "result": "W32/Ramnit-A", 
                "update": "20140729"
            }, 
            "Jiangmin": {
                "detected": true, 
                "version": "16.0.100", 
                "result": "Win32/IRCNite.wi", 
                "update": "20140725"
            }, 
            "Antiy-AVL": {
                "detected": true, 
                "version": "1.0.0.1", 
                "result": "Virus/Win32.Nimnul.a", 
                "update": "20140729"
            }, 
            "Kingsoft": {
                "detected": true, 
                "version": "2013.4.9.267", 
                "result": "Win32.Ramnit.lx.30720", 
                "update": "20140729"
            }, 
            "Microsoft": {
                "detected": true, 
                "version": "1.10802", 
                "result": "Virus:Win32/Ramnit.X", 
                "update": "20140729"
            }, 
            "ViRobot": {
                "detected": true, 
                "version": "2011.4.7.4223", 
                "result": "Win32.Nimnul.A", 
                "update": "20140729"
            }, 
            "GData": {
                "detected": true, 
                "version": "24", 
                "result": "Win32.Ramnit.N", 
                "update": "20140729"
            }, 
            "Commtouch": {
                "detected": true, 
                "version": "5.4.1.7", 
                "result": "W32/Ramnit.E", 
                "update": "20140729"
            }, 
            "AhnLab-V3": {
                "detected": true, 
                "version": "2014.07.29.03", 
                "result": "Win32/Ramnit.N", 
                "update": "20140729"
            }, 
            "VBA32": {
                "detected": true, 
                "version": "3.12.26.3", 
                "result": "Virus.Win32.Nimnul.b", 
                "update": "20140729"
            }, 
            "AVware": {
                "detected": true, 
                "version": "1.5.0.16", 
                "result": "Virus.Win32.Ramnit.b (v)", 
                "update": "20140729"
            }, 
            "Baidu-International": {
                "detected": true, 
                "version": "3.5.1.41473", 
                "result": "Virus.Win32.Nimnul.$a", 
                "update": "20140729"
            }, 
            "Zoner": {
                "detected": true, 
                "version": "1.0", 
                "result": "Win32.Ramnit.H", 
                "update": "20140723"
            }, 
            "ESET-NOD32": {
                "detected": true, 
                "version": "10170", 
                "result": "Win32/Ramnit.H", 
                "update": "20140729"
            }, 
            "Rising": {
                "detected": true, 
                "version": "25.0.0.11", 
                "result": "PE:Win32.Mgr.b!1594784", 
                "update": "20140729"
            }, 
            "Ikarus": {
                "detected": true, 
                "version": "T3.1.6.1.0", 
                "result": "Virus.Win32.Ramnit", 
                "update": "20140729"
            }, 
            "Fortinet": {
                "detected": true, 
                "version": "5.1.152.0", 
                "result": "W32/Ramnit.C", 
                "update": "20140729"
            }, 
            "AVG": {
                "detected": true, 
                "version": "14.0.0.3986", 
                "result": "Win32/Zbot.G", 
                "update": "20140729"
            }, 
            "Panda": {
                "detected": true, 
                "version": "10.0.3.5", 
                "result": "W32/Nimnul.A", 
                "update": "20140729"
            }, 
            "Qihoo-360": {
                "detected": true, 
                "version": "1.0.0.1015", 
                "result": "Virus.Win32.Ramnit.A", 
                "update": "20140729"
            }
        }
    }, 
    "network": {
        "udp": [
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 59557
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 59557
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 59557
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 59557
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 57448
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 57448
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 57448
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 57448
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 53420
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 53420
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 52298
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 52298
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 53420
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 53420
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 52298
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 52298
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 63138
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 63138
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 63138
            }, 
            {
                "dport": 5355, 
                "src": "192.168.56.102", 
                "dst": "224.0.0.252", 
                "sport": 63138
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63139
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63139
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63139
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63139
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63141
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63141
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 62965
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63141
            }, 
            {
                "dport": 3702, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 63141
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 137, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 137
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 1900
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 138, 
                "src": "192.168.56.102", 
                "dst": "192.168.56.255", 
                "sport": 138
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }, 
            {
                "dport": 1900, 
                "src": "192.168.56.102", 
                "dst": "239.255.255.250", 
                "sport": 59560
            }
        ], 
        "irc": [], 
        "http": [], 
        "smtp": [], 
        "tcp": [], 
        "hosts": [
            "239.255.255.250"
        ], 
        "pcap_sha256": "155574b808471dc9a6bb27fefc6f4e913584863757c31ea2be3a970922ec3cb3", 
        "dns": [], 
        "domains": [], 
        "icmp": []
    }
}